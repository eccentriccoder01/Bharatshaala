// Tripolia Market Component for Pink City - Bharatshaala Platform
import React, { useState, useEffect } from 'react';
import { Helmet } from 'react-helmet-async';
import { Link } from 'react-router-dom';
import { motion } from 'framer-motion';
import ProductCard from '../../components/ProductCard';
import LoadingSpinner from '../../components/LoadingSpinner';
import { useAnalytics } from '../../analytics';
import { useCart } from '../../hooks/useCart';
import { useWishlist } from '../../hooks/useWishlist';
import apiService from '../../apiService';

const TripoliaMarket = () => {
  const { trackEvent, trackPageView } = useAnalytics();
  const { addToCart } = useCart();
  const { addToWishlist } = useWishlist();

  const [products, setProducts] = useState([]);
  const [artisans, setArtisans] = useState([]);
  const [loading, setLoading] = useState(true);
  const [activeCategory, setActiveCategory] = useState('all');

  const marketInfo = {
    name: 'рддреНрд░рд┐рдкреЛрд▓рд┐рдпрд╛ рдорд╛рд░реНрдХреЗрдЯ',
    nameEn: 'Tripolia Market',
    description: 'рдЬрдпрдкреБрд░ рдХрд╛ рдРрддрд┐рд╣рд╛рд╕рд┐рдХ рдмрд╛рдЬрд╛рд░ - рдзрд╛рддреБ рд╢рд┐рд▓реНрдк рдФрд░ рдкрд╛рд░рдВрдкрд░рд┐рдХ рд╣рд╕реНрддрдХрд▓рд╛ рдХрд╛ рдХреЗрдВрджреНрд░',
    established: '1727',
    speciality: 'рдореЗрдЯрд▓ рдХреНрд░рд╛рдлреНрдЯ, рдмреНрд░рд╛рд╕ рд╡рд░реНрдХ, рдХреЙрдкрд░ рдЖрдЗрдЯрдореНрд╕',
    location: 'рдкрд┐рдВрдХ рд╕рд┐рдЯреА, рдЬрдпрдкреБрд░',
    heroImage: '/images/markets/tripolia-market.jpg'
  };

  const productCategories = [
    { id: 'all', name: 'рд╕рднреА рдЙрддреНрдкрд╛рдж', icon: 'тЪТя╕П' },
    { id: 'brass-items', name: 'рдкреАрддрд▓ рдХреЗ рд╕рд╛рдорд╛рди', icon: 'ЁЯеЗ' },
    { id: 'copper-vessels', name: 'рддрд╛рдВрдмреЗ рдХреЗ рдмрд░реНрддрди', icon: 'ЁЯФ╢' },
    { id: 'iron-crafts', name: 'рд▓реЛрд╣реЗ рдХреА рдХрд▓рд╛рдХреГрддрд┐рдпрд╛рдВ', icon: 'ЁЯФй' },
    { id: 'utensils', name: 'рдмрд░реНрддрди', icon: 'ЁЯН│' },
    { id: 'decoratives', name: 'рд╕рдЬрд╛рд╡рдЯреА рд╕рд╛рдорд╛рди', icon: 'ЁЯП║' },
    { id: 'religious-items', name: 'рдзрд╛рд░реНрдорд┐рдХ рд╕рд╛рдорд╛рди', icon: 'ЁЯХЙя╕П' }
  ];

  const featuredProducts = [
    {
      name: 'рд╣реИрдВрдбрдХреНрд░рд╛рдлреНрдЯреЗрдб рдмреНрд░рд╛рд╕ рд╡рд╛рдЬрд╝',
      description: 'рдкрд╛рд░рдВрдкрд░рд┐рдХ рд░рд╛рдЬрд╕реНрдерд╛рдиреА рдбрд┐рдЬрд╝рд╛рдЗрди рдореЗрдВ рдкреАрддрд▓ рдХрд╛ рдлреВрд▓рджрд╛рди',
      artisan: 'рд░рд╛рдордЪрдВрджреНрд░ рдореЗрдЯрд▓ рд╡рд░реНрдХреНрд╕',
      price: 'тВ╣3,500',
      material: 'рдкреНрдпреЛрд░ рдмреНрд░рд╛рд╕',
      technique: 'рд╣реИрдВрдб рдПрдВрдЧреНрд░реЗрд╡рд┐рдВрдЧ',
      size: '12 рдЗрдВрдЪ рдКрдВрдЪрд╛рдИ',
      weight: '1.5 рдХрд┐рдЧреНрд░рд╛',
      finish: 'рдПрдВрдЯреАрдХ рдЧреЛрд▓реНрдб'
    },
    {
      name: 'рдХреЙрдкрд░ рд╡реЙрдЯрд░ рдмреЙрдЯрд▓',
      description: 'рдЖрдпреБрд░реНрд╡реЗрджрд┐рдХ рдЧреБрдгреЛрдВ рдХреЗ рд╕рд╛рде рддрд╛рдВрдмреЗ рдХреА рдкрд╛рдиреА рдХреА рдмреЛрддрд▓',
      artisan: 'рддрд╛рдВрдмрд╛ рд╢рд┐рд▓реНрдк рдХреЗрдВрджреНрд░',
      price: 'тВ╣1,200',
      material: '99.9% рдкреНрдпреЛрд░ рдХреЙрдкрд░',
      capacity: '1 рд▓реАрдЯрд░',
      benefits: 'рдПрдВрдЯреА-рдмреИрдХреНрдЯреАрд░рд┐рдпрд▓',
      maintenance: 'рдЖрд╕рд╛рди рд╕рдлрд╛рдИ',
      certification: 'рдлреВрдб рд╕реЗрдл'
    },
    {
      name: 'рдЖрдпрд░рди рдХреИрдВрдбрд▓ рд╕реНрдЯреИрдВрдб',
      description: 'рд░рд╛рдЬрдкреВрдд рд╢реИрд▓реА рдореЗрдВ рдмрдирд╛ рд▓реЛрд╣реЗ рдХрд╛ рджреАрдкрдХ рд╕реНрдЯреИрдВрдб',
      artisan: 'рд▓реЛрд╣рд╛рд░ рд╢рд┐рд▓реНрдк рд╕рдореВрд╣',
      price: 'тВ╣2,800',
      material: 'рд░рд┐рд╕рд╛рдЗрдХрд▓реНрдб рдЖрдпрд░рди',
      style: 'рд░рд╛рдЬрдкреВрддреА рдбрд┐рдЬрд╝рд╛рдЗрди',
      finish: 'рдмреНрд▓реИрдХ рдПрдВрдЯреАрдХ',
      usage: 'рдЗрдВрдбреЛрд░/рдЖрдЙрдЯрдбреЛрд░',
      durability: '25+ рд╡рд░реНрд╖'
    }
  ];

  const masterArtisans = [
    {
      name: 'рд░рд╛рдордЪрдВрджреНрд░ рд╕реЛрдиреА',
      craft: 'рдмреНрд░рд╛рд╕ рдПрдВрдЧреНрд░реЗрд╡рд┐рдВрдЧ',
      experience: '40+ рд╡рд░реНрд╖',
      specialty: 'рд░рд┐рд▓реАрдЬрд┐рдпрд╕ рдЖрдЗрдЯрдореНрд╕',
      awards: 'рд░рд╛рд╖реНрдЯреНрд░реАрдп рд╢рд┐рд▓реНрдк рдкреБрд░рд╕реНрдХрд╛рд░',
      family: '4 рдкреАрдврд╝рд┐рдпреЛрдВ рдХрд╛ рдХрд╛рд░реЛрдмрд╛рд░'
    },
    {
      name: 'рдореБрдХреЗрд╢ рддрд╛рдВрдмрд╛ рд╡рд╛рд▓рд╛',
      craft: 'рдХреЙрдкрд░ рд╡реЗрд╕рд▓ рдореЗрдХрд┐рдВрдЧ',
      experience: '35+ рд╡рд░реНрд╖',
      specialty: 'рдХрд┐рдЪрди рдпреВрдЯреЗрдВрд╕рд┐рд▓реНрд╕',
      awards: 'рд░рд╛рдЬрд╕реНрдерд╛рди рд░рд╛рдЬреНрдп рдкреБрд░рд╕реНрдХрд╛рд░',
      family: 'рд╣реЗрд░реЗрдбрд┐рдЯрд░реА рдХреЙрдкрд░ рд╕реНрдорд┐рде'
    },
    {
      name: 'рднрд╡рд╛рдиреА рд▓рд╛рд▓ рд▓реЛрд╣рд╛рд░',
      craft: 'рдЖрдпрд░рди рдлреЛрд░реНрдЬрд┐рдВрдЧ',
      experience: '45+ рд╡рд░реНрд╖',
      specialty: 'рдбреЗрдХреЛрд░реЗрдЯрд┐рд╡ рдЖрдЗрдЯрдореНрд╕',
      awards: 'рд╢рд┐рд▓реНрдк рдЧреБрд░реБ рд╕рдореНрдорд╛рди',
      family: 'рдкрд╛рд░рдВрдкрд░рд┐рдХ рд▓реЛрд╣рд╛рд░ рдкрд░рд┐рд╡рд╛рд░'
    }
  ];

  const metalProperties = [
    {
      metal: 'рдкреАрддрд▓ (Brass)',
      properties: ['рдПрдВрдЯреА-рдмреИрдХреНрдЯреАрд░рд┐рдпрд▓', 'рдХреЙрд░реЛрдЬрди рд░реЗрд╕рд┐рд╕реНрдЯреЗрдВрдЯ', 'рдбрдпреВрд░реЗрдмрд▓'],
      uses: ['рдмрд░реНрддрди', 'рд╕рдЬрд╛рд╡рдЯреА рд╕рд╛рдорд╛рди', 'рдзрд╛рд░реНрдорд┐рдХ рд╡рд╕реНрддреБрдПрдВ'],
      care: 'рдирд┐рдпрдорд┐рдд рдкреЙрд▓рд┐рд╢рд┐рдВрдЧ'
    },
    {
      metal: 'рддрд╛рдВрдмрд╛ (Copper)',
      properties: ['рдЖрдпреБрд░реНрд╡реЗрджрд┐рдХ рдЧреБрдг', 'рдПрдВрдЯреА-рдорд╛рдЗрдХреНрд░реЛрдмрд┐рдпрд▓', 'рд╣реЗрд▓реНрде рдмреЗрдирд┐рдлрд┐рдЯреНрд╕'],
      uses: ['рдкрд╛рдиреА рдХреА рдмреЛрддрд▓', 'рдЦрд╛рдирд╛ рдкрдХрд╛рдиреЗ рдХреЗ рдмрд░реНрддрди', 'рдпреЛрдЧ рдПрдХреНрд╕реЗрд╕рд░реАрдЬ'],
      care: 'рдиреАрдВрдмреВ рдФрд░ рдирдордХ рд╕реЗ рд╕рдлрд╛рдИ'
    },
    {
      metal: 'рд▓реЛрд╣рд╛ (Iron)',
      properties: ['рдордЬрдмреВрдд', 'рд▓реЙрдиреНрдЧ рд▓рд╛рд╕реНрдЯрд┐рдВрдЧ', 'рд░реАрд╕рд╛рдЗрдХрд▓реЗрдмрд▓'],
      uses: ['рдбреЗрдХреЛрд░реЗрдЯрд┐рд╡ рдЖрдЗрдЯрдореНрд╕', 'рдлрд░реНрдиреАрдЪрд░', 'рдЧрд╛рд░реНрдбрди рдПрдХреНрд╕реЗрд╕рд░реАрдЬ'],
      care: 'рд░рд╕реНрдЯ рдкреНрд░реЛрдЯреЗрдХреНрд╢рди'
    },
    {
      metal: 'рдХрд╛рдВрд╕рд╛ (Bronze)',
      properties: ['рдЯреНрд░реЗрдбрд┐рд╢рдирд▓', 'рд░реЗрд╕реЛрдиреЗрдВрдЯ', 'рдСрдХреНрд╕реАрдбреЗрд╢рди рд░реЗрд╕рд┐рд╕реНрдЯреЗрдВрдЯ'],
      uses: ['рдореВрд░реНрддрд┐рдпрд╛рдВ', 'рдШрдВрдЯрд┐рдпрд╛рдВ', 'рдерд╛рд▓рд┐рдпрд╛рдВ'],
      care: 'рдореБрд▓рд╛рдпрдо рдХрдкрдбрд╝реЗ рд╕реЗ рд╕рдлрд╛рдИ'
    }
  ];

  const craftingProcess = [
    {
      step: 'рдбрд┐рдЬрд╝рд╛рдЗрди рддреИрдпрд╛рд░реА',
      description: 'рдкрд╛рд░рдВрдкрд░рд┐рдХ рдкреИрдЯрд░реНрди рдХрд╛ рдЪрдпрди рдФрд░ рд╕реНрдХреЗрдЪ',
      time: '1-2 рджрд┐рди'
    },
    {
      step: 'рдореЗрдЯрд▓ рдкреНрд░рд┐рдкрд░реЗрд╢рди',
      description: 'рдзрд╛рддреБ рдХреЛ рд╕рд╛рдл рдХрд░рдирд╛ рдФрд░ рд╢реЗрдк рджреЗрдирд╛',
      time: '2-3 рджрд┐рди'
    },
    {
      step: 'рд╢реЗрдкрд┐рдВрдЧ/рдлреЛрд░реНрдЬрд┐рдВрдЧ',
      description: 'рд╣рдереМрдбрд╝реЗ рдФрд░ рдЯреВрд▓реНрд╕ рд╕реЗ рдЖрдХрд╛рд░ рджреЗрдирд╛',
      time: '3-7 рджрд┐рди'
    },
    {
      step: 'рдПрдВрдЧреНрд░реЗрд╡рд┐рдВрдЧ/рдбреЗрдХреЛрд░реЗрд╢рди',
      description: 'рд╣реИрдВрдб рдЯреВрд▓реНрд╕ рд╕реЗ рдбрд┐рдЬрд╝рд╛рдЗрди рдмрдирд╛рдирд╛',
      time: '5-10 рджрд┐рди'
    },
    {
      step: 'рдлрд┐рдирд┐рд╢рд┐рдВрдЧ',
      description: 'рдкреЙрд▓рд┐рд╢рд┐рдВрдЧ рдФрд░ рдХреНрд╡рд╛рд▓рд┐рдЯреА рдЪреЗрдХ',
      time: '1-2 рджрд┐рди'
    }
  ];

  const healthBenefits = [
    { metal: 'рддрд╛рдВрдмрд╛', benefit: 'рдкрд╛рдиреА рдХреЛ рдкреНрдпреВрд░рд┐рдлрд╛рдИ рдХрд░рддрд╛ рд╣реИ', science: 'рдСрд▓рд┐рдЧреЛрдбрд╛рдпрдирд╛рдорд┐рдХ рдЗрдлреЗрдХреНрдЯ' },
    { metal: 'рдкреАрддрд▓', benefit: 'рдПрдВрдЯреА-рдмреИрдХреНрдЯреАрд░рд┐рдпрд▓ рдЧреБрдг', science: 'рдХреЙрдкрд░-рдЬрд┐рдВрдХ рдПрд▓реЙрдп' },
    { metal: 'рдХрд╛рдВрд╕рд╛', benefit: 'рдлреВрдб рд╕реЗрдл рдордЯреЗрд░рд┐рдпрд▓', science: 'рдХреЙрдкрд░-рдЯрд┐рди рдХрдВрдкреЛрдЬрд╝рд┐рд╢рди' },
    { metal: 'рд╕реНрдЯреЗрдирд▓реЗрд╕ рд╕реНрдЯреАрд▓', benefit: 'рд╣рд╛рдЗрдЬреАрдирд┐рдХ рдФрд░ рдбрдпреВрд░реЗрдмрд▓', science: 'рдЖрдпрд░рди-рдХреНрд░реЛрдорд┐рдпрдо рдПрд▓реЙрдп' }
  ];

  useEffect(() => {
    trackPageView('pinkcity_tripolia_market');
    loadMarketData();
  }, []);

  const loadMarketData = async () => {
    try {
      setLoading(true);
      
      const [productsResponse, artisansResponse] = await Promise.all([
        apiService.get('/markets/pinkcity/tripolia-market/products'),
        apiService.get('/markets/pinkcity/tripolia-market/artisans')
      ]);

      if (productsResponse.success) {
        setProducts(productsResponse.data);
      }

      if (artisansResponse.success) {
        setArtisans(artisansResponse.data);
      }
    } catch (error) {
      console.error('Failed to load market data:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleCategoryChange = (category) => {
    setActiveCategory(category);
    trackEvent('tripolia_market_category_selected', {
      market: 'pinkcity',
      category
    });
  };

  const handleAddToCart = async (product) => {
    const result = await addToCart(product, 1);
    if (result.success) {
      trackEvent('add_to_cart_tripolia_market', {
        productId: product.id,
        market: 'pinkcity',
        artisan: product.artisan
      });
    }
  };

  const handleAddToWishlist = async (product) => {
    const result = await addToWishlist(product);
    if (result.success) {
      trackEvent('add_to_wishlist_tripolia_market', {
        productId: product.id,
        market: 'pinkcity'
      });
    }
  };

  const filteredProducts = activeCategory === 'all' 
    ? products 
    : products.filter(product => product.category === activeCategory);

  return (
    <>
      <Helmet>
        <title>{marketInfo.name} - рднрд╛рд░рддрд╢рд╛рд▓рд╛ | рдЬрдпрдкреБрд░ рдХрд╛ рдРрддрд┐рд╣рд╛рд╕рд┐рдХ рдзрд╛рддреБ рд╢рд┐рд▓реНрдк рдмрд╛рдЬрд╛рд░</title>
        <meta name="description" content="рддреНрд░рд┐рдкреЛрд▓рд┐рдпрд╛ рдорд╛рд░реНрдХреЗрдЯ рдЬрдпрдкреБрд░ рд╕реЗ рдкрд╛рд░рдВрдкрд░рд┐рдХ рдзрд╛рддреБ рд╢рд┐рд▓реНрдкред рдкреАрддрд▓, рддрд╛рдВрдмрд╛, рд▓реЛрд╣реЗ рдХреЗ рдмрд░реНрддрди рдФрд░ рд╣рд╕реНрддрд╢рд┐рд▓реНрдкред рд╣реИрдВрдбрдореЗрдб рдореЗрдЯрд▓ рдХреНрд░рд╛рдлреНрдЯреНрд╕ред" />
        <meta name="keywords" content="рддреНрд░рд┐рдкреЛрд▓рд┐рдпрд╛ рдорд╛рд░реНрдХреЗрдЯ, рдЬрдпрдкреБрд░ рдореЗрдЯрд▓ рдХреНрд░рд╛рдлреНрдЯ, рдкреАрддрд▓ рдХреЗ рдмрд░реНрддрди, рддрд╛рдВрдмреЗ рдХреЗ рдмрд░реНрддрди, рдзрд╛рддреБ рд╢рд┐рд▓реНрдк, рд╣реИрдВрдбрдореЗрдб рдореЗрдЯрд▓ рдЖрдЗрдЯрдореНрд╕" />
        <link rel="canonical" href="https://bharatshaala.com/markets/pinkcity/tripolia-market" />
      </Helmet>

      <div className="min-h-screen bg-gray-50">
        {/* Hero Section */}
        <section className="relative bg-gradient-to-r from-orange-600 to-red-600 text-white py-16">
          <div className="absolute inset-0 bg-black/40"></div>
          <div 
            className="absolute inset-0 bg-cover bg-center opacity-30"
            style={{ backgroundImage: `url(${marketInfo.heroImage})` }}
          ></div>
          
          <div className="container mx-auto px-6 relative z-10">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className="max-w-4xl"
            >
              <div className="flex items-center space-x-4 mb-6">
                <span className="text-6xl">тЪТя╕П</span>
                <div>
                  <h1 className="text-5xl font-bold mb-2">{marketInfo.name}</h1>
                  <p className="text-xl opacity-90">{marketInfo.description}</p>
                </div>
              </div>
              
              <div className="grid md:grid-cols-3 gap-6 mt-8">
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">рд╕реНрдерд╛рдкрдирд╛</h3>
                  <p className="text-red-200">{marketInfo.established}</p>
                </div>
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">рд╡рд┐рд╢реЗрд╖рддрд╛</h3>
                  <p className="text-red-200">{marketInfo.speciality}</p>
                </div>
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">рд╕реНрдерд╛рди</h3>
                  <p className="text-red-200">{marketInfo.location}</p>
                </div>
              </div>
            </motion.div>
          </div>
        </section>

        {/* Navigation Breadcrumb */}
        <div className="bg-white border-b">
          <div className="container mx-auto px-6 py-4">
            <nav className="text-sm text-gray-600">
              <Link to="/" className="hover:text-emerald-600">рд╣реЛрдо</Link>
              <span className="mx-2">тА║</span>
              <Link to="/markets" className="hover:text-emerald-600">рдмрд╛рдЬрд╛рд░</Link>
              <span className="mx-2">тА║</span>
              <Link to="/markets/pinkcity" className="hover:text-emerald-600">рдкрд┐рдВрдХ рд╕рд┐рдЯреА</Link>
              <span className="mx-2">тА║</span>
              <span className="text-gray-900">рддреНрд░рд┐рдкреЛрд▓рд┐рдпрд╛ рдорд╛рд░реНрдХреЗрдЯ</span>
            </nav>
          </div>
        </div>

        {/* Featured Products */}
        <section className="py-12 bg-orange-50">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">рдкреНрд░рдореБрдЦ рдзрд╛рддреБ рд╢рд┐рд▓реНрдк</h2>
            <div className="grid md:grid-cols-3 gap-8">
              {featuredProducts.map((product, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-200"
                >
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{product.name}</h3>
                  <p className="text-gray-600 mb-3">{product.description}</p>
                  <div className="mb-3">
                    <span className="text-2xl font-bold text-orange-600">{product.price}</span>
                  </div>
                  <div className="space-y-2 text-sm text-gray-600 mb-4">
                    <p><strong>рдХрд╛рд░реАрдЧрд░:</strong> {product.artisan}</p>
                    <p><strong>рд╕рд╛рдордЧреНрд░реА:</strong> {product.material}</p>
                    {product.technique && <p><strong>рддрдХрдиреАрдХ:</strong> {product.technique}</p>}
                    {product.size && <p><strong>рд╕рд╛рдЗрдЬрд╝:</strong> {product.size}</p>}
                    {product.weight && <p><strong>рд╡рдЬрди:</strong> {product.weight}</p>}
                    {product.capacity && <p><strong>рдХреНрд╖рдорддрд╛:</strong> {product.capacity}</p>}
                    {product.style && <p><strong>рд╕реНрдЯрд╛рдЗрд▓:</strong> {product.style}</p>}
                    {product.finish && <p><strong>рдлрд┐рдирд┐рд╢:</strong> {product.finish}</p>}
                    {product.benefits && <p><strong>рдлрд╛рдпрджреЗ:</strong> {product.benefits}</p>}
                    {product.usage && <p><strong>рдЙрдкрдпреЛрдЧ:</strong> {product.usage}</p>}
                    {product.maintenance && <p><strong>рд░рдЦрд░рдЦрд╛рд╡:</strong> {product.maintenance}</p>}
                    {product.certification && <p><strong>рд╕рд░реНрдЯрд┐рдлрд┐рдХреЗрд╢рди:</strong> {product.certification}</p>}
                    {product.durability && <p><strong>рдЯрд┐рдХрд╛рдКрдкрди:</strong> {product.durability}</p>}
                  </div>
                  <button className="w-full bg-orange-600 text-white px-4 py-2 rounded-lg hover:bg-orange-700 transition-colors duration-200">
                    рдХрд╛рд░реНрдЯ рдореЗрдВ рдЬреЛрдбрд╝реЗрдВ
                  </button>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Categories Section */}
        <section className="py-8 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-2xl font-bold text-gray-900 mb-6">рдЙрддреНрдкрд╛рдж рд╢реНрд░реЗрдгрд┐рдпрд╛рдВ</h2>
            <div className="flex flex-wrap gap-4">
              {productCategories.map((category) => (
                <button
                  key={category.id}
                  onClick={() => handleCategoryChange(category.id)}
                  className={`flex items-center space-x-2 px-4 py-2 rounded-full transition-colors duration-200 ${
                    activeCategory === category.id
                      ? 'bg-orange-600 text-white'
                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                  }`}
                >
                  <span>{category.icon}</span>
                  <span>{category.name}</span>
                </button>
              ))}
            </div>
          </div>
        </section>

        {/* Metal Properties */}
        <section className="py-16 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">рдзрд╛рддреБрдУрдВ рдХреЗ рдЧреБрдг</h2>
            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
              {metalProperties.map((metal, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, scale: 0.9 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-gradient-to-br from-orange-50 to-red-50 rounded-lg p-6 hover:shadow-lg transition-shadow duration-200"
                >
                  <h3 className="text-xl font-bold text-gray-900 mb-3">{metal.metal}</h3>
                  <div className="space-y-3">
                    <div>
                      <p className="font-semibold text-gray-700 mb-1">рдЧреБрдг:</p>
                      {metal.properties.map((property, propIndex) => (
                        <div key={propIndex} className="bg-white rounded-lg p-2 text-sm text-gray-700 mb-1">
                          тАв {property}
                        </div>
                      ))}
                    </div>
                    <div>
                      <p className="font-semibold text-gray-700 mb-1">рдЙрдкрдпреЛрдЧ:</p>
                      {metal.uses.map((use, useIndex) => (
                        <div key={useIndex} className="bg-white rounded-lg p-2 text-sm text-gray-700 mb-1">
                          тАв {use}
                        </div>
                      ))}
                    </div>
                    <p className="text-orange-600 font-medium text-sm">рджреЗрдЦрднрд╛рд▓: {metal.care}</p>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Products Section */}
        {loading ? (
          <div className="flex justify-center py-12">
            <LoadingSpinner size="large" text="рдЙрддреНрдкрд╛рдж рд▓реЛрдб рд╣реЛ рд░рд╣реЗ рд╣реИрдВ..." />
          </div>
        ) : (
          <section className="py-12 bg-gray-50">
            <div className="container mx-auto px-6">
              <h2 className="text-3xl font-bold text-gray-900 mb-8">
                {activeCategory === 'all' ? 'рд╕рднреА рдЙрддреНрдкрд╛рдж' : productCategories.find(cat => cat.id === activeCategory)?.name}
              </h2>
              
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                {filteredProducts.map((product) => (
                  <ProductCard
                    key={product.id}
                    product={product}
                    onAddToCart={() => handleAddToCart(product)}
                    onAddToWishlist={() => handleAddToWishlist(product)}
                    showHandcraftedBadge={true}
                    showMetalQualityBadge={true}
                    showTraditionalBadge={true}
                  />
                ))}
              </div>

              {filteredProducts.length === 0 && (
                <div className="text-center py-12">
                  <div className="text-6xl mb-4">тЪТя╕П</div>
                  <h3 className="text-xl font-semibold text-gray-900 mb-2">рдЗрд╕ рд╢реНрд░реЗрдгреА рдореЗрдВ рдХреЛрдИ рдЙрддреНрдкрд╛рдж рдирд╣реАрдВ рдорд┐рд▓рд╛</h3>
                  <p className="text-gray-600">рдХреГрдкрдпрд╛ рджреВрд╕рд░реА рд╢реНрд░реЗрдгреА рдХрд╛ рдЪрдпрди рдХрд░реЗрдВ</p>
                </div>
              )}
            </div>
          </section>
        )}

        {/* Master Artisans */}
        <section className="py-16 bg-gradient-to-r from-orange-100 to-red-100">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">рдорд╛рд╕реНрдЯрд░ рдХрд╛рд░реАрдЧрд░</h2>
            <div className="grid md:grid-cols-3 gap-8">
              {masterArtisans.map((artisan, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, scale: 0.9 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-white rounded-lg shadow-lg p-6 text-center hover:shadow-xl transition-shadow duration-200"
                >
                  <div className="text-4xl mb-4">ЁЯСитАНЁЯФз</div>
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{artisan.name}</h3>
                  <div className="space-y-2 text-sm text-gray-600 mb-4">
                    <p><strong>рд╢рд┐рд▓реНрдк:</strong> {artisan.craft}</p>
                    <p><strong>рдЕрдиреБрднрд╡:</strong> {artisan.experience}</p>
                    <p><strong>рд╡рд┐рд╢реЗрд╖рддрд╛:</strong> {artisan.specialty}</p>
                    <p><strong>рдкреБрд░рд╕реНрдХрд╛рд░:</strong> {artisan.awards}</p>
                    <p><strong>рдкрд╛рд░рд┐рд╡рд╛рд░рд┐рдХ:</strong> {artisan.family}</p>
                  </div>
                  <button className="bg-orange-600 text-white px-4 py-2 rounded-lg hover:bg-orange-700 transition-colors duration-200">
                    рдХреГрддрд┐рдпрд╛рдВ рджреЗрдЦреЗрдВ
                  </button>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Crafting Process */}
        <section className="py-16 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">рд╢рд┐рд▓реНрдк рдирд┐рд░реНрдорд╛рдг рдкреНрд░рдХреНрд░рд┐рдпрд╛</h2>
            <div className="grid md:grid-cols-5 gap-6">
              {craftingProcess.map((process, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="text-center"
                >
                  <div className="bg-orange-600 text-white rounded-full w-12 h-12 flex items-center justify-center text-xl font-bold mx-auto mb-4">
                    {index + 1}
                  </div>
                  <h3 className="text-lg font-semibold mb-2">{process.step}</h3>
                  <p className="text-gray-600 text-sm mb-2">{process.description}</p>
                  <p className="text-orange-600 font-medium text-sm">{process.time}</p>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Health Benefits */}
        <section className="py-16 bg-orange-50">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">рд╕реНрд╡рд╛рд╕реНрдереНрдп рд▓рд╛рдн</h2>
            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
              {healthBenefits.map((benefit, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="text-center"
                >
                  <div className="text-4xl mb-4">ЁЯПе</div>
                  <h3 className="text-xl font-semibold mb-2">{benefit.metal}</h3>
                  <p className="text-gray-600 mb-2">{benefit.benefit}</p>
                  <p className="text-orange-600 font-medium text-sm">{benefit.science}</p>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Market Heritage */}
        <section className="py-16 bg-gradient-to-r from-orange-600 to-red-600 text-white">
          <div className="container mx-auto px-6 text-center">
            <h2 className="text-3xl font-bold mb-8">рддреНрд░рд┐рдкреЛрд▓рд┐рдпрд╛ рдорд╛рд░реНрдХреЗрдЯ рдХреА рд╡рд┐рд░рд╛рд╕рдд</h2>
            <div className="max-w-4xl mx-auto">
              <p className="text-xl leading-relaxed mb-8">
                300 рд╕рд╛рд▓ рд╕реЗ рддреНрд░рд┐рдкреЛрд▓рд┐рдпрд╛ рдорд╛рд░реНрдХреЗрдЯ рдЬрдпрдкреБрд░ рдХреА рдзрд╛рддреБ рд╢рд┐рд▓реНрдк рдХреА рд░рд╛рдЬрдзрд╛рдиреА рд╣реИред рдорд╣рд╛рд░рд╛рдЬрд╛ рд╕рд╡рд╛рдИ рдЬрдп рд╕рд┐рдВрд╣ рджреНрд╡рд╛рд░рд╛ рд╕реНрдерд╛рдкрд┐рдд рдпрд╣ рдмрд╛рдЬрд╛рд░ 
                рдЖрдЬ рднреА рдЕрдкрдиреА рдкрд╛рд░рдВрдкрд░рд┐рдХ рдХрд▓рд╛рдХрд╛рд░реА рдФрд░ рдЧреБрдгрд╡рддреНрддрд╛ рдХреЗ рд▓рд┐рдП рд╡рд┐рд╢реНрд╡ рдкреНрд░рд╕рд┐рджреНрдз рд╣реИред рдпрд╣рд╛рдБ рдХреЗ рдХрд╛рд░реАрдЧрд░реЛрдВ рдХреА рддрдХрдиреАрдХ рдкреАрдврд╝рд┐рдпреЛрдВ рд╕реЗ рдЪрд▓реА 
                рдЖ рд░рд╣реА рд╣реИ рдФрд░ рдЖрдЬ рднреА рдЙрд╕реА рдореЗрд╣рдирдд рдФрд░ рд▓рдЧрди рд╕реЗ рдмреЗрд╣рддрд░реАрди рдзрд╛рддреБ рд╢рд┐рд▓реНрдк рдмрдирд╛рдП рдЬрд╛рддреЗ рд╣реИрдВред
              </p>
              <div className="grid md:grid-cols-3 gap-8 mt-12">
                <div>
                  <div className="text-4xl mb-4">ЁЯУН</div>
                  <h3 className="text-xl font-semibold mb-2">рд╕реНрдерд╛рди</h3>
                  <p>рдкрд┐рдВрдХ рд╕рд┐рдЯреА, рдЬрдпрдкреБрд░, рд░рд╛рдЬрд╕реНрдерд╛рди</p>
                </div>
                <div>
                  <div className="text-4xl mb-4">ЁЯХТ</div>
                  <h3 className="text-xl font-semibold mb-2">рд╕рдордп</h3>
                  <p>рд╕реБрдмрд╣ 9:00 - рд╢рд╛рдо 7:00 (рд░реЛрдЬрд╝рд╛рдирд╛)</p>
                </div>
                <div>
                  <div className="text-4xl mb-4">тЪТя╕П</div>
                  <h3 className="text-xl font-semibold mb-2">рд╡рд┐рд╢реЗрд╖рддрд╛</h3>
                  <p>рдкрд╛рд░рдВрдкрд░рд┐рдХ рдзрд╛рддреБ рд╢рд┐рд▓реНрдк рдФрд░ рдмрд░реНрддрди</p>
                </div>
              </div>
            </div>
          </div>
        </section>
      </div>
    </>
  );
};

export default TripoliaMarket;