// Regional Cuisine Component for Dilli Haat - Bharatshaala Platform
import React, { useState, useEffect } from 'react';
import { Helmet } from 'react-helmet-async';
import { Link } from 'react-router-dom';
import { motion } from 'framer-motion';
import ProductCard from '../../components/ProductCard';
import LoadingSpinner from '../../components/LoadingSpinner';
import { useAnalytics } from '../../analytics';
import { useCart } from '../../hooks/useCart';
import { useWishlist } from '../../hooks/useWishlist';
import apiService from '../../apiService';

const RegionalCuisine = () => {
  const { trackEvent, trackPageView } = useAnalytics();
  const { addToCart } = useCart();
  const { addToWishlist } = useWishlist();

  const [cuisineItems, setCuisineItems] = useState([]);
  const [chefs, setChefs] = useState([]);
  const [loading, setLoading] = useState(true);
  const [activeCategory, setActiveCategory] = useState('all');

  const cuisineInfo = {
    name: '‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§π‡§æ‡§ü ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡•Ä‡§Ø ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞',
    nameEn: 'Dilli Haat Regional Cuisine Center',
    description: '‡§≠‡§æ‡§∞‡§§ ‡§ï‡•á ‡§µ‡§ø‡§µ‡§ø‡§ß ‡§∞‡§æ‡§ú‡•ç‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§™‡•ç‡§∞‡§æ‡§Æ‡§æ‡§£‡§ø‡§ï ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®‡•ã‡§Ç ‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§¶‡§ø‡§∑‡•ç‡§ü ‡§∏‡§Ç‡§ó‡•ç‡§∞‡§π',
    established: '1994',
    speciality: '‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®',
    location: '‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§π‡§æ‡§ü, INA, ‡§®‡§à ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä',
    heroImage: '/images/markets/dilli-haat-cuisine.jpg'
  };

  const cuisineCategories = [
    { id: 'all', name: '‡§∏‡§≠‡•Ä ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®', icon: 'üçõ' },
    { id: 'north-indian', name: '‡§â‡§§‡•ç‡§§‡§∞ ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø', icon: 'üçû' },
    { id: 'south-indian', name: '‡§¶‡§ï‡•ç‡§∑‡§ø‡§£ ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø', icon: 'üçö' },
    { id: 'west-indian', name: '‡§™‡§∂‡•ç‡§ö‡§ø‡§Æ ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø', icon: 'ü´ì' },
    { id: 'east-indian', name: '‡§™‡•Ç‡§∞‡•ç‡§µ ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø', icon: 'üç†' },
    { id: 'street-food', name: '‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä‡§ü ‡§´‡•Ç‡§°', icon: 'üåÆ' },
    { id: 'sweets', name: '‡§Æ‡§ø‡§†‡§æ‡§á‡§Ø‡§æ‡§Ç', icon: 'üçØ' }
  ];

  const featuredDishes = [
    {
      name: '‡§≤‡§ñ‡§®‡§µ‡•Ä ‡§¶‡§Æ ‡§¨‡§ø‡§∞‡§Ø‡§æ‡§®‡•Ä',
      description: '‡§Ö‡§µ‡§ß‡•Ä ‡§∂‡•à‡§≤‡•Ä ‡§ï‡•Ä ‡§∏‡•Å‡§ó‡§Ç‡§ß‡§ø‡§§ ‡§¨‡§ø‡§∞‡§Ø‡§æ‡§®‡•Ä',
      chef: '‡§â‡§∏‡•ç‡§§‡§æ‡§¶ ‡§∞‡§æ‡§∂‡§ø‡§¶ ‡§ñ‡§æ‡§®',
      region: '‡§â‡§§‡•ç‡§§‡§∞ ‡§™‡•ç‡§∞‡§¶‡•á‡§∂',
      price: '‚Çπ450',
      cookingTime: '2 ‡§ò‡§Ç‡§ü‡•á',
      spiceLevel: '‡§Æ‡§ß‡•ç‡§Ø‡§Æ',
      specialty: '‡§¶‡§Æ ‡§∏‡•ç‡§ü‡§æ‡§á‡§≤ ‡§ï‡•Å‡§ï‡§ø‡§Ç‡§ó',
      ingredients: '‡§¨‡§æ‡§∏‡§Æ‡§§‡•Ä ‡§ö‡§æ‡§µ‡§≤, ‡§Æ‡§ü‡§®, ‡§ï‡•á‡§∏‡§∞'
    },
    {
      name: '‡§π‡•à‡§¶‡§∞‡§æ‡§¨‡§æ‡§¶‡•Ä ‡§π‡§≤‡•Ä‡§Æ',
      description: '‡§∞‡§Æ‡§ú‡§æ‡§® ‡§ï‡§æ ‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®',
      chef: '‡§∂‡•á‡§´ ‡§Æ‡•ã‡§π‡§Æ‡•ç‡§Æ‡§¶ ‡§á‡§ï‡§¨‡§æ‡§≤',
      region: '‡§§‡•á‡§≤‡§Ç‡§ó‡§æ‡§®‡§æ',
      price: '‚Çπ280',
      cookingTime: '8 ‡§ò‡§Ç‡§ü‡•á',
      spiceLevel: '‡§§‡•á‡§ú',
      specialty: '‡§∏‡•ç‡§≤‡•ã ‡§ï‡•Å‡§ï‡§ø‡§Ç‡§ó',
      ingredients: '‡§¶‡§æ‡§≤, ‡§Æ‡§æ‡§Ç‡§∏, ‡§ó‡•á‡§π‡•Ç‡§Ç'
    },
    {
      name: '‡§ï‡•á‡§∞‡§≤ ‡§´‡§ø‡§∂ ‡§ï‡§∞‡•Ä',
      description: '‡§®‡§æ‡§∞‡§ø‡§Ø‡§≤ ‡§î‡§∞ ‡§Æ‡§∏‡§æ‡§≤‡•ã‡§Ç ‡§∏‡•á ‡§¨‡§®‡§æ ‡§∏‡•ç‡§µ‡§æ‡§¶‡§ø‡§∑‡•ç‡§ü ‡§ï‡§∞‡•Ä',
      chef: '‡§∂‡•á‡§´ ‡§™‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§®‡§æ‡§Ø‡§∞',
      region: '‡§ï‡•á‡§∞‡§≤',
      price: '‚Çπ350',
      cookingTime: '45 ‡§Æ‡§ø‡§®‡§ü',
      spiceLevel: '‡§Æ‡§ß‡•ç‡§Ø‡§Æ ‡§§‡•á‡§ú',
      specialty: '‡§ï‡•ã‡§ï‡§Æ ‡§´‡•ç‡§≤‡•á‡§µ‡§∞',
      ingredients: '‡§´‡§ø‡§∂, ‡§®‡§æ‡§∞‡§ø‡§Ø‡§≤, ‡§ï‡§∞‡•Ä ‡§™‡§§‡•ç‡§§‡§æ'
    }
  ];

  const regionalChefs = [
    {
      name: '‡§â‡§∏‡•ç‡§§‡§æ‡§¶ ‡§∞‡§æ‡§∂‡§ø‡§¶ ‡§ñ‡§æ‡§®',
      specialty: '‡§Ö‡§µ‡§ß‡•Ä ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®',
      region: '‡§≤‡§ñ‡§®‡§ä',
      experience: '35+ ‡§µ‡§∞‡•ç‡§∑',
      signature: '‡§¶‡§Æ ‡§¨‡§ø‡§∞‡§Ø‡§æ‡§®‡•Ä ‡§î‡§∞ ‡§ï‡§¨‡§æ‡§¨',
      awards: '‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø ‡§™‡§æ‡§ï ‡§ï‡§≤‡§æ ‡§™‡•Å‡§∞‡§∏‡•ç‡§ï‡§æ‡§∞',
      restaurant: '‡§Ö‡§µ‡§ß‡•Ä ‡§¶‡§∞‡§¨‡§æ‡§∞'
    },
    {
      name: '‡§∂‡•á‡§´ ‡§µ‡•á‡§Ç‡§ï‡§ü‡•á‡§∂‡•ç‡§µ‡§∞‡§≤‡•Ç',
      specialty: '‡§Ü‡§Ç‡§ß‡•ç‡§∞ ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®',
      region: '‡§π‡•à‡§¶‡§∞‡§æ‡§¨‡§æ‡§¶',
      experience: '25+ ‡§µ‡§∞‡•ç‡§∑',
      signature: '‡§∏‡•ç‡§™‡§æ‡§á‡§∏‡•Ä ‡§ö‡§ø‡§ï‡§® ‡§ï‡§∞‡•Ä',
      awards: '‡§§‡•á‡§≤‡•Å‡§ó‡•Å ‡§ï‡•Å‡§ï‡§ø‡§Ç‡§ó ‡§ö‡•à‡§Ç‡§™‡§ø‡§Ø‡§®',
      restaurant: '‡§Ü‡§Ç‡§ß‡•ç‡§∞ ‡§™‡•ç‡§∞‡§¶‡•á‡§∂ ‡§≠‡§µ‡§®'
    },
    {
      name: '‡§∂‡•á‡§´ ‡§™‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§Æ‡•á‡§®‡§®',
      specialty: '‡§ï‡•á‡§∞‡§≤ ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®',
      region: '‡§ï‡•ã‡§ö‡•ç‡§ö‡§ø',
      experience: '20+ ‡§µ‡§∞‡•ç‡§∑',
      signature: '‡§∏‡•à‡§°‡§Ø‡§æ ‡§î‡§∞ ‡§Ö‡§™‡•ç‡§™‡§Æ',
      awards: '‡§∏‡§æ‡§â‡§• ‡§á‡§Ç‡§°‡§ø‡§Ø‡§® ‡§ï‡•Å‡§ú‡•Ä‡§® ‡§è‡§ï‡•ç‡§∏‡§™‡§∞‡•ç‡§ü',
      restaurant: '‡§ï‡•á‡§∞‡§≤ ‡§π‡§æ‡§â‡§∏'
    }
  ];

  const statePavilions = [
    {
      state: '‡§™‡§Ç‡§ú‡§æ‡§¨',
      dishes: ['‡§Æ‡§ï‡•ç‡§ï‡•á ‡§¶‡•Ä ‡§∞‡•ã‡§ü‡•Ä', '‡§∏‡§∞‡§∏‡•ã‡§Ç ‡§¶‡§æ ‡§∏‡§æ‡§ó', '‡§¨‡§ü‡§∞ ‡§ö‡§ø‡§ï‡§®'],
      specialties: ['‡§≤‡§∏‡•ç‡§∏‡•Ä', '‡§ï‡•Å‡§≤‡•ç‡§ö‡§æ', '‡§õ‡•ã‡§≤‡•á ‡§≠‡§ü‡•Ç‡§∞‡•á'],
      chef: '‡§∏‡§∞‡§¶‡§æ‡§∞ ‡§ú‡§∏‡§µ‡§ø‡§Ç‡§¶‡§∞ ‡§∏‡§ø‡§Ç‡§π'
    },
    {
      state: '‡§∞‡§æ‡§ú‡§∏‡•ç‡§•‡§æ‡§®',
      dishes: ['‡§¶‡§æ‡§≤ ‡§¨‡§æ‡§ü‡•Ä ‡§ö‡•Ç‡§∞‡§Æ‡§æ', '‡§ó‡§ü‡•ç‡§ü‡•á ‡§ï‡•Ä ‡§∏‡§¨‡•ç‡§ú‡•Ä', '‡§≤‡§æ‡§≤ ‡§Æ‡§æ‡§Ç‡§∏'],
      specialties: ['‡§ò‡•á‡§µ‡§∞', '‡§Æ‡§æ‡§µ‡§æ ‡§ï‡§ö‡•å‡§∞‡•Ä', '‡§™‡§Ç‡§ö‡§ï‡•Ç‡§ü‡§æ'],
      chef: '‡§∂‡•á‡§´ ‡§≠‡§Ç‡§µ‡§∞ ‡§≤‡§æ‡§≤'
    },
    {
      state: '‡§ó‡•Å‡§ú‡§∞‡§æ‡§§',
      dishes: ['‡§¢‡•ã‡§ï‡§≤‡§æ', '‡§â‡§Ç‡§ß‡§ø‡§Ø‡•Å', '‡§ñ‡§æ‡§Ç‡§°‡§µ‡•Ä'],
      specialties: ['‡§•‡•á‡§™‡•ç‡§≤‡§æ', '‡§ó‡•Å‡§ú‡§∞‡§æ‡§§‡•Ä ‡§•‡§æ‡§≤‡•Ä', '‡§∂‡•ç‡§∞‡•Ä‡§ñ‡§Ç‡§°'],
      chef: '‡§∂‡•á‡§´ ‡§ï‡§Æ‡§≤‡§æ ‡§¨‡•á‡§®'
    },
    {
      state: '‡§™‡§∂‡•ç‡§ö‡§ø‡§Æ ‡§¨‡§Ç‡§ó‡§æ‡§≤',
      dishes: ['‡§Æ‡§õ ‡§≠‡§æ‡§§', '‡§∞‡•ã‡§∂‡§ó‡•Å‡§≤‡•ç‡§≤‡§æ', '‡§ï‡•ã‡§∂‡§æ ‡§Æ‡§æ‡§Ç‡§∏‡•ç‡§π‡•ã'],
      specialties: ['‡§∏‡§Ç‡§¶‡•á‡§∂', '‡§Æ‡§ø‡§∑‡•ç‡§ü‡•Ä ‡§¶‡•ã‡§à', '‡§´‡•Å‡§ö‡§ï‡§æ'],
      chef: '‡§∂‡•á‡§´ ‡§∏‡•Å‡§¶‡•Ä‡§™‡•ç‡§§‡•ã ‡§∏‡•á‡§®'
    }
  ];

  const cookingWorkshops = [
    {
      workshop: '‡§¨‡§ø‡§∞‡§Ø‡§æ‡§®‡•Ä ‡§Æ‡§æ‡§∏‡•ç‡§ü‡§∞ ‡§ï‡•ç‡§≤‡§æ‡§∏',
      instructor: '‡§â‡§∏‡•ç‡§§‡§æ‡§¶ ‡§∞‡§æ‡§∂‡§ø‡§¶ ‡§ñ‡§æ‡§®',
      duration: '4 ‡§ò‡§Ç‡§ü‡•á',
      fee: '‚Çπ2,500',
      includes: ['‡§∏‡§≠‡•Ä ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä', '‡§∞‡•á‡§∏‡§ø‡§™‡•Ä ‡§¨‡•Å‡§ï', '‡§∏‡§∞‡•ç‡§ü‡§ø‡§´‡§ø‡§ï‡•á‡§ü'],
      schedule: '‡§∏‡§™‡•ç‡§§‡§æ‡§π‡§æ‡§Ç‡§§'
    },
    {
      workshop: '‡§∏‡§æ‡§â‡§• ‡§á‡§Ç‡§°‡§ø‡§Ø‡§® ‡§ï‡•Å‡§ï‡§ø‡§Ç‡§ó',
      instructor: '‡§∂‡•á‡§´ ‡§™‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§Æ‡•á‡§®‡§®',
      duration: '3 ‡§ò‡§Ç‡§ü‡•á',
      fee: '‚Çπ1,800',
      includes: ['‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä', '‡§∞‡•á‡§∏‡§ø‡§™‡•Ä ‡§ó‡§æ‡§á‡§°', '‡§ü‡•á‡§∏‡•ç‡§ü‡§ø‡§Ç‡§ó'],
      schedule: '‡§µ‡•Ä‡§ï‡§°‡•á ‡§á‡§µ‡§®‡§ø‡§Ç‡§ó'
    },
    {
      workshop: '‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä‡§ü ‡§´‡•Ç‡§° ‡§¨‡§®‡§æ‡§®‡§æ',
      instructor: '‡§ö‡§æ‡§ü ‡§Æ‡§æ‡§∏‡•ç‡§ü‡§∞ ‡§∞‡§æ‡§Æ',
      duration: '2 ‡§ò‡§Ç‡§ü‡•á',
      fee: '‚Çπ1,200',
      includes: ['‡§ö‡§æ‡§ü ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä', '‡§ö‡§ü‡§®‡•Ä ‡§∞‡•á‡§∏‡§ø‡§™‡•Ä'],
      schedule: '‡§°‡•á‡§≤‡•Ä ‡§∂‡•ã'
    }
  ];

  const foodFestivals = [
    {
      festival: '‡§¶‡§ï‡•ç‡§∑‡§ø‡§£ ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§´‡•Ç‡§° ‡§´‡•á‡§∏‡•ç‡§ü‡§ø‡§µ‡§≤',
      duration: '15-25 ‡§ú‡§®‡§µ‡§∞‡•Ä',
      highlights: ['‡§ì‡§£‡§Æ ‡§∏‡§æ‡§ß‡•ç‡§Ø‡§æ', '‡§ï‡§∞‡•ç‡§®‡§æ‡§ü‡§ï ‡§¨‡§ø‡§∏‡§ø‡§¨‡•á‡§≤‡•á ‡§≠‡§æ‡§§', '‡§§‡§Æ‡§ø‡§≤ ‡§ö‡•á‡§ü‡§ø‡§®‡§æ‡§°']
    },
    {
      festival: '‡§®‡•â‡§∞‡•ç‡§• ‡§à‡§∏‡•ç‡§ü ‡§´‡•Ç‡§° ‡§´‡•á‡§Ø‡§∞',
      duration: '10-20 ‡§´‡§∞‡§µ‡§∞‡•Ä',
      highlights: ['‡§Ö‡§∏‡§Æ‡§ø‡§Ø‡§æ ‡§™‡§ø‡§•‡§æ', '‡§Æ‡§£‡§ø‡§™‡•Å‡§∞‡•Ä ‡§á‡§∞‡•ã‡§Æ‡•ç‡§¨‡§æ', '‡§®‡§æ‡§ó‡§æ ‡§≠‡•Å‡§§ ‡§ú‡•ã‡§≤‡•ã‡§ï‡§ø‡§Ø‡§æ']
    },
    {
      festival: '‡§∞‡§ú‡§µ‡§æ‡§°‡§º‡•Ä ‡§¶‡§æ‡§µ‡§§',
      duration: '1-15 ‡§Æ‡§æ‡§∞‡•ç‡§ö',
      highlights: ['‡§∞‡§æ‡§ú‡§∏‡•ç‡§•‡§æ‡§®‡•Ä ‡§•‡§æ‡§≤‡•Ä', '‡§π‡•à‡§¶‡§∞‡§æ‡§¨‡§æ‡§¶‡•Ä ‡§¶‡§Æ', '‡§≤‡§ñ‡§®‡§µ‡•Ä ‡§¶‡§∏‡•ç‡§§‡§∞‡§ñ‡§æ‡§®']
    }
  ];

  useEffect(() => {
    trackPageView('dilli_haat_regional_cuisine');
    loadCuisineData();
  }, []);

  const loadCuisineData = async () => {
    try {
      setLoading(true);
      
      const [itemsResponse, chefsResponse] = await Promise.all([
        apiService.get('/markets/dilli-haat/regional-cuisine/items'),
        apiService.get('/markets/dilli-haat/regional-cuisine/chefs')
      ]);

      if (itemsResponse.success) {
        setCuisineItems(itemsResponse.data);
      }

      if (chefsResponse.success) {
        setChefs(chefsResponse.data);
      }
    } catch (error) {
      console.error('Failed to load cuisine data:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleCategoryChange = (category) => {
    setActiveCategory(category);
    trackEvent('cuisine_category_selected', {
      market: 'dilli_haat',
      category
    });
  };

  const handleAddToCart = async (product) => {
    const result = await addToCart(product, 1);
    if (result.success) {
      trackEvent('add_to_cart_regional_cuisine', {
        productId: product.id,
        market: 'dilli_haat',
        chef: product.chef
      });
    }
  };

  const handleAddToWishlist = async (product) => {
    const result = await addToWishlist(product);
    if (result.success) {
      trackEvent('add_to_wishlist_regional_cuisine', {
        productId: product.id,
        market: 'dilli_haat'
      });
    }
  };

  const filteredItems = activeCategory === 'all' 
    ? cuisineItems 
    : cuisineItems.filter(item => item.category === activeCategory);

  return (
    <>
      <Helmet>
        <title>{cuisineInfo.name} - ‡§≠‡§æ‡§∞‡§§‡§∂‡§æ‡§≤‡§æ | ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡•Ä‡§Ø ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®</title>
        <meta name="description" content="‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§π‡§æ‡§ü ‡§Æ‡•á‡§Ç ‡§≠‡§æ‡§∞‡§§ ‡§ï‡•á ‡§µ‡§ø‡§≠‡§ø‡§®‡•ç‡§® ‡§∞‡§æ‡§ú‡•ç‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§™‡•ç‡§∞‡§æ‡§Æ‡§æ‡§£‡§ø‡§ï ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®‡•§ ‡§¨‡§ø‡§∞‡§Ø‡§æ‡§®‡•Ä, ‡§¶‡•ã‡§∏‡§æ, ‡§∞‡§æ‡§ú‡§∏‡•ç‡§•‡§æ‡§®‡•Ä ‡§•‡§æ‡§≤‡•Ä ‡§î‡§∞ ‡§Ö‡§®‡•ç‡§Ø ‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ñ‡§æ‡§®‡§æ‡•§" />
        <meta name="keywords" content="‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§π‡§æ‡§ü, ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®, ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡•Ä‡§Ø ‡§ñ‡§æ‡§®‡§æ, ‡§¨‡§ø‡§∞‡§Ø‡§æ‡§®‡•Ä, ‡§¶‡•ã‡§∏‡§æ, ‡§•‡§æ‡§≤‡•Ä, ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§∞‡§∏‡•ã‡§à, ‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§≠‡•ã‡§ú‡§®" />
        <link rel="canonical" href="https://bharatshaala.com/markets/dilli-haat/regional-cuisine" />
      </Helmet>

      <div className="min-h-screen bg-gray-50">
        {/* Hero Section */}
        <section className="relative bg-gradient-to-r from-red-600 to-orange-600 text-white py-16">
          <div className="absolute inset-0 bg-black/40"></div>
          <div 
            className="absolute inset-0 bg-cover bg-center opacity-30"
            style={{ backgroundImage: `url(${cuisineInfo.heroImage})` }}
          ></div>
          
          <div className="container mx-auto px-6 relative z-10">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className="max-w-4xl"
            >
              <div className="flex items-center space-x-4 mb-6">
                <span className="text-6xl">üçõ</span>
                <div>
                  <h1 className="text-5xl font-bold mb-2">{cuisineInfo.name}</h1>
                  <p className="text-xl opacity-90">{cuisineInfo.description}</p>
                </div>
              </div>
              
              <div className="grid md:grid-cols-3 gap-6 mt-8">
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">‡§∏‡•ç‡§•‡§æ‡§™‡§®‡§æ</h3>
                  <p className="text-orange-200">{cuisineInfo.established}</p>
                </div>
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ</h3>
                  <p className="text-orange-200">{cuisineInfo.speciality}</p>
                </div>
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">‡§∏‡•ç‡§•‡§æ‡§®</h3>
                  <p className="text-orange-200">{cuisineInfo.location}</p>
                </div>
              </div>
            </motion.div>
          </div>
        </section>

        {/* Navigation Breadcrumb */}
        <div className="bg-white border-b">
          <div className="container mx-auto px-6 py-4">
            <nav className="text-sm text-gray-600">
              <Link to="/" className="hover:text-emerald-600">‡§π‡•ã‡§Æ</Link>
              <span className="mx-2">‚Ä∫</span>
              <Link to="/markets" className="hover:text-emerald-600">‡§¨‡§æ‡§ú‡§æ‡§∞</Link>
              <span className="mx-2">‚Ä∫</span>
              <Link to="/markets/dilli-haat" className="hover:text-emerald-600">‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§π‡§æ‡§ü</Link>
              <span className="mx-2">‚Ä∫</span>
              <span className="text-gray-900">‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡•Ä‡§Ø ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®</span>
            </nav>
          </div>
        </div>

        {/* Featured Dishes */}
        <section className="py-12 bg-red-50">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§Ü‡§ú ‡§ï‡•á ‡§∏‡•ç‡§™‡•á‡§∂‡§≤ ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®</h2>
            <div className="grid md:grid-cols-3 gap-8">
              {featuredDishes.map((dish, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-200"
                >
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{dish.name}</h3>
                  <p className="text-gray-600 mb-3">{dish.description}</p>
                  <div className="mb-3">
                    <span className="text-2xl font-bold text-red-600">{dish.price}</span>
                  </div>
                  <div className="space-y-2 text-sm text-gray-600 mb-4">
                    <p><strong>‡§∂‡•á‡§´:</strong> {dish.chef}</p>
                    <p><strong>‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞:</strong> {dish.region}</p>
                    <p><strong>‡§™‡§ï‡§®‡•á ‡§ï‡§æ ‡§∏‡§Æ‡§Ø:</strong> {dish.cookingTime}</p>
                    <p><strong>‡§Æ‡§∏‡§æ‡§≤‡§æ ‡§≤‡•á‡§µ‡§≤:</strong> {dish.spiceLevel}</p>
                    <p><strong>‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ:</strong> {dish.specialty}</p>
                    <p><strong>‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä:</strong> {dish.ingredients}</p>
                  </div>
                  <button className="w-full bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors duration-200">
                    ‡§ë‡§∞‡•ç‡§°‡§∞ ‡§ï‡§∞‡•á‡§Ç
                  </button>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Categories Section */}
        <section className="py-8 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-2xl font-bold text-gray-900 mb-6">‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§∂‡•ç‡§∞‡•á‡§£‡§ø‡§Ø‡§æ‡§Ç</h2>
            <div className="flex flex-wrap gap-4">
              {cuisineCategories.map((category) => (
                <button
                  key={category.id}
                  onClick={() => handleCategoryChange(category.id)}
                  className={`flex items-center space-x-2 px-4 py-2 rounded-full transition-colors duration-200 ${
                    activeCategory === category.id
                      ? 'bg-red-600 text-white'
                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                  }`}
                >
                  <span>{category.icon}</span>
                  <span>{category.name}</span>
                </button>
              ))}
            </div>
          </div>
        </section>

        {/* State Pavilions */}
        <section className="py-16 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§∞‡§æ‡§ú‡•ç‡§Ø‡§µ‡§æ‡§∞ ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§™‡§µ‡•á‡§≤‡§ø‡§Ø‡§®</h2>
            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
              {statePavilions.map((pavilion, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, scale: 0.9 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-gradient-to-br from-red-50 to-orange-50 rounded-lg p-6 hover:shadow-lg transition-shadow duration-200"
                >
                  <h3 className="text-xl font-bold text-gray-900 mb-3">{pavilion.state}</h3>
                  <div className="space-y-3">
                    <div>
                      <p className="font-semibold text-gray-700 mb-1">‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®:</p>
                      {pavilion.dishes.map((dish, dishIndex) => (
                        <div key={dishIndex} className="bg-white rounded-lg p-2 text-sm text-gray-700 mb-1">
                          ‚Ä¢ {dish}
                        </div>
                      ))}
                    </div>
                    <div>
                      <p className="font-semibold text-gray-700 mb-1">‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ‡§è‡§Ç:</p>
                      {pavilion.specialties.map((specialty, specialtyIndex) => (
                        <div key={specialtyIndex} className="bg-white rounded-lg p-2 text-sm text-gray-700 mb-1">
                          ‚Ä¢ {specialty}
                        </div>
                      ))}
                    </div>
                    <p className="text-red-600 font-medium text-sm">‡§∂‡•á‡§´: {pavilion.chef}</p>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Products Section */}
        {loading ? (
          <div className="flex justify-center py-12">
            <LoadingSpinner size="large" text="‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡•á ‡§π‡•à‡§Ç..." />
          </div>
        ) : (
          <section className="py-12 bg-gray-50">
            <div className="container mx-auto px-6">
              <h2 className="text-3xl font-bold text-gray-900 mb-8">
                {activeCategory === 'all' ? '‡§∏‡§≠‡•Ä ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®' : cuisineCategories.find(cat => cat.id === activeCategory)?.name}
              </h2>
              
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                {filteredItems.map((item) => (
                  <ProductCard
                    key={item.id}
                    product={item}
                    onAddToCart={() => handleAddToCart(item)}
                    onAddToWishlist={() => handleAddToWishlist(item)}
                    showSpiceLevelBadge={true}
                    showChefBadge={true}
                    showRegionalBadge={true}
                  />
                ))}
              </div>

              {filteredItems.length === 0 && (
                <div className="text-center py-12">
                  <div className="text-6xl mb-4">üçõ</div>
                  <h3 className="text-xl font-semibold text-gray-900 mb-2">‡§á‡§∏ ‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§Æ‡•á‡§Ç ‡§ï‡•ã‡§à ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ</h3>
                  <p className="text-gray-600">‡§ï‡•É‡§™‡§Ø‡§æ ‡§¶‡•Ç‡§∏‡§∞‡•Ä ‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§ï‡§æ ‡§ö‡§Ø‡§® ‡§ï‡§∞‡•á‡§Ç</p>
                </div>
              )}
            </div>
          </section>
        )}

        {/* Regional Chefs */}
        <section className="py-16 bg-gradient-to-r from-red-100 to-orange-100">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§™‡•ç‡§∞‡§∏‡§ø‡§¶‡•ç‡§ß ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡•Ä‡§Ø ‡§∂‡•á‡§´</h2>
            <div className="grid md:grid-cols-3 gap-8">
              {regionalChefs.map((chef, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, scale: 0.9 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-white rounded-lg shadow-lg p-6 text-center hover:shadow-xl transition-shadow duration-200"
                >
                  <div className="text-4xl mb-4">üë®‚Äçüç≥</div>
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{chef.name}</h3>
                  <div className="space-y-2 text-sm text-gray-600 mb-4">
                    <p><strong>‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ:</strong> {chef.specialty}</p>
                    <p><strong>‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞:</strong> {chef.region}</p>
                    <p><strong>‡§Ö‡§®‡•Å‡§≠‡§µ:</strong> {chef.experience}</p>
                    <p><strong>‡§∏‡§ø‡§ó‡•ç‡§®‡•á‡§ö‡§∞:</strong> {chef.signature}</p>
                    <p><strong>‡§™‡•Å‡§∞‡§∏‡•ç‡§ï‡§æ‡§∞:</strong> {chef.awards}</p>
                    <p><strong>‡§∞‡•á‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§Ç‡§ü:</strong> {chef.restaurant}</p>
                  </div>
                  <button className="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors duration-200">
                    ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§¶‡•á‡§ñ‡•á‡§Ç
                  </button>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Cooking Workshops */}
        <section className="py-16 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§™‡§æ‡§ï ‡§ï‡§≤‡§æ ‡§µ‡§∞‡•ç‡§ï‡§∂‡•â‡§™‡•ç‡§∏</h2>
            <div className="grid md:grid-cols-3 gap-8">
              {cookingWorkshops.map((workshop, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-gradient-to-br from-red-50 to-orange-50 rounded-lg p-6 hover:shadow-lg transition-shadow duration-200"
                >
                  <h3 className="text-xl font-bold text-gray-900 mb-3">{workshop.workshop}</h3>
                  <div className="space-y-2 text-sm text-gray-600 mb-4">
                    <p><strong>‡§á‡§Ç‡§∏‡•ç‡§ü‡•ç‡§∞‡§ï‡•ç‡§ü‡§∞:</strong> {workshop.instructor}</p>
                    <p><strong>‡§Ö‡§µ‡§ß‡§ø:</strong> {workshop.duration}</p>
                    <p><strong>‡§´‡•Ä‡§∏:</strong> {workshop.fee}</p>
                    <p><strong>‡§∂‡•á‡§°‡•ç‡§Ø‡•Ç‡§≤:</strong> {workshop.schedule}</p>
                  </div>
                  <div className="mb-4">
                    <p className="font-semibold text-gray-700 mb-2">‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à:</p>
                    {workshop.includes.map((item, itemIndex) => (
                      <div key={itemIndex} className="bg-white rounded-lg p-2 text-sm text-gray-700 mb-1">
                        ‚Ä¢ {item}
                      </div>
                    ))}
                  </div>
                  <button className="w-full bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors duration-200">
                    ‡§∞‡§ú‡§ø‡§∏‡•ç‡§ü‡§∞ ‡§ï‡§∞‡•á‡§Ç
                  </button>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Food Festivals */}
        <section className="py-16 bg-red-50">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§Ü‡§ó‡§æ‡§Æ‡•Ä ‡§´‡•Ç‡§° ‡§´‡•á‡§∏‡•ç‡§ü‡§ø‡§µ‡§≤‡•ç‡§∏</h2>
            <div className="grid md:grid-cols-3 gap-8">
              {foodFestivals.map((festival, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-200"
                >
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{festival.festival}</h3>
                  <p className="text-red-600 font-medium mb-3">{festival.duration}</p>
                  <div className="space-y-1">
                    {festival.highlights.map((highlight, highlightIndex) => (
                      <div key={highlightIndex} className="bg-red-50 rounded-lg p-2 text-sm text-gray-700">
                        ‚Ä¢ {highlight}
                      </div>
                    ))}
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Culinary Heritage */}
        <section className="py-16 bg-gradient-to-r from-red-600 to-orange-600 text-white">
          <div className="container mx-auto px-6 text-center">
            <h2 className="text-3xl font-bold mb-8">‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§™‡§æ‡§ï ‡§µ‡§ø‡§∞‡§æ‡§∏‡§§</h2>
            <div className="max-w-4xl mx-auto">
              <p className="text-xl leading-relaxed mb-8">
                30 ‡§∏‡§æ‡§≤ ‡§∏‡•á ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§π‡§æ‡§ü ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡•Ä‡§Ø ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞ ‡§≠‡§æ‡§∞‡§§ ‡§ï‡•Ä ‡§∏‡§Æ‡•É‡§¶‡•ç‡§ß ‡§™‡§æ‡§ï ‡§™‡§∞‡§Ç‡§™‡§∞‡§æ ‡§ï‡•ã ‡§è‡§ï ‡§õ‡§§ ‡§ï‡•á ‡§®‡•Ä‡§ö‡•á ‡§≤‡§æ‡§®‡•á ‡§ï‡§æ ‡§ï‡§æ‡§Æ ‡§ï‡§∞ ‡§∞‡§π‡§æ ‡§π‡•à‡•§ 
                ‡§Ø‡§π‡§æ‡§Å ‡§π‡§∞ ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§Æ‡•á‡§Ç ‡§õ‡•Å‡§™‡§æ ‡§π‡•à ‡§Ö‡§™‡§®‡•á ‡§∞‡§æ‡§ú‡•ç‡§Ø ‡§ï‡§æ ‡§™‡•ç‡§∞‡•á‡§Æ, ‡§Æ‡§∏‡§æ‡§≤‡•ã‡§Ç ‡§ï‡•Ä ‡§ñ‡•Å‡§∂‡§¨‡•Ç ‡§î‡§∞ ‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§§‡§ï‡§®‡•Ä‡§ï ‡§ï‡§æ ‡§ú‡§æ‡§¶‡•Ç‡•§ 
                ‡§≠‡§æ‡§∞‡§§ ‡§ï‡•Ä ‡§∏‡§æ‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø‡§ï ‡§µ‡§ø‡§µ‡§ø‡§ß‡§§‡§æ ‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§¶‡§ø‡§∑‡•ç‡§ü ‡§™‡•ç‡§∞‡§§‡§ø‡§®‡§ø‡§ß‡§ø‡§§‡•ç‡§µ ‡§π‡•à ‡§Ø‡§π ‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞‡•§
              </p>
              <div className="grid md:grid-cols-3 gap-8 mt-12">
                <div>
                  <div className="text-4xl mb-4">üìç</div>
                  <h3 className="text-xl font-semibold mb-2">‡§∏‡•ç‡§•‡§æ‡§®</h3>
                  <p>‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§π‡§æ‡§ü, INA, ‡§®‡§à ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä</p>
                </div>
                <div>
                  <div className="text-4xl mb-4">üçõ</div>
                  <h3 className="text-xl font-semibold mb-2">‡§∞‡§æ‡§ú‡•ç‡§Ø</h3>
                  <p>28 ‡§∞‡§æ‡§ú‡•ç‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®</p>
                </div>
                <div>
                  <div className="text-4xl mb-4">üë®‚Äçüç≥</div>
                  <h3 className="text-xl font-semibold mb-2">‡§∂‡•á‡§´</h3>
                  <p>100+ ‡§µ‡§ø‡§∂‡•á‡§∑‡§ú‡•ç‡§û ‡§∞‡§∏‡•ã‡§á‡§è</p>
                </div>
              </div>
            </div>
          </div>
        </section>
      </div>
    </>
  );
};

export default RegionalCuisine;