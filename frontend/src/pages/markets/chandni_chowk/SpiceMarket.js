// Spice Market Component for Chandni Chowk - Bharatshala Platform
import React, { useState, useEffect } from 'react';
import { Helmet } from 'react-helmet-async';
import { Link } from 'react-router-dom';
import { motion } from 'framer-motion';
import ProductCard from '../../components/ProductCard';
import LoadingSpinner from '../../components/LoadingSpinner';
import { useAnalytics } from '../../analytics';
import { useCart } from '../../hooks/useCart';
import { useWishlist } from '../../hooks/useWishlist';
import apiService from '../../apiService';

const SpiceMarket = () => {
  const { trackEvent, trackPageView } = useAnalytics();
  const { addToCart } = useCart();
  const { addToWishlist } = useWishlist();

  const [spices, setSpices] = useState([]);
  const [vendors, setVendors] = useState([]);
  const [loading, setLoading] = useState(true);
  const [activeCategory, setActiveCategory] = useState('all');

  const marketInfo = {
    name: '‡§ö‡§æ‡§Ç‡§¶‡§®‡•Ä ‡§ö‡•å‡§ï ‡§Æ‡§∏‡§æ‡§≤‡§æ ‡§¨‡§æ‡§ú‡§æ‡§∞',
    nameEn: 'Chandni Chowk Spice Market',
    description: '400 ‡§∏‡§æ‡§≤ ‡§™‡•Å‡§∞‡§æ‡§®‡§æ ‡§Æ‡§∏‡§æ‡§≤‡•ã‡§Ç ‡§ï‡§æ ‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞ - ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§ï‡•á ‡§∏‡§¨‡§∏‡•á ‡§™‡•ç‡§∞‡§∏‡§ø‡§¶‡•ç‡§ß ‡§Æ‡§∏‡§æ‡§≤‡§æ ‡§µ‡•ç‡§Ø‡§æ‡§™‡§æ‡§∞‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§ò‡§∞',
    established: '1600s',
    speciality: '‡§™‡•ç‡§∞‡§æ‡§Æ‡§æ‡§£‡§ø‡§ï ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§Æ‡§∏‡§æ‡§≤‡•á',
    location: '‡§ö‡§æ‡§Ç‡§¶‡§®‡•Ä ‡§ö‡•å‡§ï, ‡§™‡•Å‡§∞‡§æ‡§®‡•Ä ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä',
    heroImage: '/images/markets/chandni-chowk-spice.jpg'
  };

  const spiceCategories = [
    { id: 'all', name: '‡§∏‡§≠‡•Ä ‡§Æ‡§∏‡§æ‡§≤‡•á', icon: 'üå∂Ô∏è' },
    { id: 'whole-spices', name: '‡§∏‡§æ‡§¨‡•Å‡§§ ‡§Æ‡§∏‡§æ‡§≤‡•á', icon: 'üå∞' },
    { id: 'ground-spices', name: '‡§™‡§ø‡§∏‡•á ‡§Æ‡§∏‡§æ‡§≤‡•á', icon: 'ü•Ñ' },
    { id: 'blends', name: '‡§Æ‡§∏‡§æ‡§≤‡§æ ‡§Æ‡§ø‡§∂‡•ç‡§∞‡§£', icon: 'üçõ' },
    { id: 'premium', name: '‡§™‡•ç‡§∞‡•Ä‡§Æ‡§ø‡§Ø‡§Æ ‡§Æ‡§∏‡§æ‡§≤‡•á', icon: '‚≠ê' },
    { id: 'medicinal', name: '‡§î‡§∑‡§ß‡•Ä‡§Ø ‡§Æ‡§∏‡§æ‡§≤‡•á', icon: 'üåø' },
    { id: 'international', name: '‡§µ‡§ø‡§¶‡•á‡§∂‡•Ä ‡§Æ‡§∏‡§æ‡§≤‡•á', icon: 'üåç' }
  ];

  const featuredSpices = [
    {
      name: '‡§ï‡§∂‡•ç‡§Æ‡•Ä‡§∞‡•Ä ‡§≤‡§æ‡§≤ ‡§Æ‡§ø‡§∞‡•ç‡§ö',
      description: '‡§™‡•ç‡§∞‡§æ‡§Æ‡§æ‡§£‡§ø‡§ï ‡§ï‡§∂‡•ç‡§Æ‡•Ä‡§∞‡•Ä ‡§≤‡§æ‡§≤ ‡§Æ‡§ø‡§∞‡•ç‡§ö - ‡§∞‡§Ç‡§ó ‡§î‡§∞ ‡§∏‡•ç‡§µ‡§æ‡§¶ ‡§ï‡•á ‡§≤‡§ø‡§è',
      price: '‚Çπ450/100g',
      specialty: '‡§ï‡§Æ ‡§§‡•Ä‡§ñ‡§æ, ‡§¨‡•á‡§π‡§§‡§∞‡•Ä‡§® ‡§∞‡§Ç‡§ó',
      vendor: '‡§ú‡§ó‡§¶‡•Ä‡§∂ ‡§Æ‡§∏‡§æ‡§≤‡§æ ‡§∏‡•ç‡§ü‡•ã‡§∞'
    },
    {
      name: '‡§ï‡•á‡§∞‡§≤ ‡§á‡§≤‡§æ‡§Ø‡§ö‡•Ä',
      description: '‡§§‡§æ‡§ú‡•Ä ‡§π‡§∞‡•Ä ‡§á‡§≤‡§æ‡§Ø‡§ö‡•Ä - ‡§∏‡•Å‡§ó‡§Ç‡§ß ‡§ï‡•Ä ‡§∞‡§æ‡§®‡•Ä',
      price: '‚Çπ1200/100g',
      specialty: '‡§™‡•ç‡§∞‡§æ‡§ï‡•É‡§§‡§ø‡§ï ‡§§‡•á‡§≤ ‡§≠‡§∞‡§™‡•Ç‡§∞',
      vendor: '‡§Æ‡§π‡§æ‡§∞‡§æ‡§ú‡§æ ‡§∏‡•ç‡§™‡§æ‡§á‡§∏‡•á‡§∏'
    },
    {
      name: '‡§ó‡•Å‡§ú‡§∞‡§æ‡§§‡•Ä ‡§ó‡§∞‡§Æ ‡§Æ‡§∏‡§æ‡§≤‡§æ',
      description: '‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§ó‡•Å‡§ú‡§∞‡§æ‡§§‡•Ä ‡§Æ‡§ø‡§∂‡•ç‡§∞‡§£',
      price: '‚Çπ320/250g',
      specialty: '‡§Æ‡•Ä‡§†‡§æ ‡§î‡§∞ ‡§∏‡•Å‡§ó‡§Ç‡§ß‡§ø‡§§',
      vendor: '‡§∂‡§æ‡§π ‡§Æ‡§∏‡§æ‡§≤‡§æ ‡§≠‡§Ç‡§°‡§æ‡§∞'
    }
  ];

  const famousVendors = [
    {
      name: '‡§ú‡§ó‡§¶‡•Ä‡§∂ ‡§Æ‡§∏‡§æ‡§≤‡§æ ‡§∏‡•ç‡§ü‡•ã‡§∞',
      established: '1947',
      specialty: '‡§ï‡§∂‡•ç‡§Æ‡•Ä‡§∞‡•Ä ‡§Æ‡§∏‡§æ‡§≤‡•á',
      rating: 4.8,
      experience: '75+ ‡§µ‡§∞‡•ç‡§∑'
    },
    {
      name: '‡§Æ‡§π‡§æ‡§∞‡§æ‡§ú‡§æ ‡§∏‡•ç‡§™‡§æ‡§á‡§∏‡•á‡§∏',
      established: '1923',
      specialty: '‡§¶‡§ï‡•ç‡§∑‡§ø‡§£ ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§Æ‡§∏‡§æ‡§≤‡•á',
      rating: 4.9,
      experience: '100+ ‡§µ‡§∞‡•ç‡§∑'
    },
    {
      name: '‡§∂‡§æ‡§π ‡§Æ‡§∏‡§æ‡§≤‡§æ ‡§≠‡§Ç‡§°‡§æ‡§∞',
      established: '1935',
      specialty: '‡§ó‡•Å‡§ú‡§∞‡§æ‡§§‡•Ä ‡§Æ‡§∏‡§æ‡§≤‡§æ ‡§Æ‡§ø‡§∂‡•ç‡§∞‡§£',
      rating: 4.7,
      experience: '88+ ‡§µ‡§∞‡•ç‡§∑'
    }
  ];

  useEffect(() => {
    trackPageView('chandni_chowk_spice_market');
    loadMarketData();
  }, []);

  const loadMarketData = async () => {
    try {
      setLoading(true);
      
      const [spicesResponse, vendorsResponse] = await Promise.all([
        apiService.get('/markets/chandni-chowk/spice-market/products'),
        apiService.get('/markets/chandni-chowk/spice-market/vendors')
      ]);

      if (spicesResponse.success) {
        setSpices(spicesResponse.data);
      }

      if (vendorsResponse.success) {
        setVendors(vendorsResponse.data);
      }
    } catch (error) {
      console.error('Failed to load market data:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleCategoryChange = (category) => {
    setActiveCategory(category);
    trackEvent('spice_category_selected', {
      market: 'chandni_chowk',
      category
    });
  };

  const handleAddToCart = async (product) => {
    const result = await addToCart(product, 1);
    if (result.success) {
      trackEvent('add_to_cart_spice_market', {
        productId: product.id,
        market: 'chandni_chowk',
        vendor: product.vendor
      });
    }
  };

  const handleAddToWishlist = async (product) => {
    const result = await addToWishlist(product);
    if (result.success) {
      trackEvent('add_to_wishlist_spice_market', {
        productId: product.id,
        market: 'chandni_chowk'
      });
    }
  };

  const filteredSpices = activeCategory === 'all' 
    ? spices 
    : spices.filter(spice => spice.category === activeCategory);

  return (
    <>
      <Helmet>
        <title>{marketInfo.name} - ‡§≠‡§æ‡§∞‡§§‡§∂‡§æ‡§≤‡§æ | ‡§ö‡§æ‡§Ç‡§¶‡§®‡•Ä ‡§ö‡•å‡§ï ‡§ï‡•á ‡§™‡•ç‡§∞‡§æ‡§Æ‡§æ‡§£‡§ø‡§ï ‡§Æ‡§∏‡§æ‡§≤‡•á</title>
        <meta name="description" content="‡§ö‡§æ‡§Ç‡§¶‡§®‡•Ä ‡§ö‡•å‡§ï ‡§ï‡•á 400 ‡§∏‡§æ‡§≤ ‡§™‡•Å‡§∞‡§æ‡§®‡•á ‡§Æ‡§∏‡§æ‡§≤‡§æ ‡§¨‡§æ‡§ú‡§æ‡§∞ ‡§∏‡•á ‡§™‡•ç‡§∞‡§æ‡§Æ‡§æ‡§£‡§ø‡§ï ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§Æ‡§∏‡§æ‡§≤‡•á‡•§ ‡§ï‡§∂‡•ç‡§Æ‡•Ä‡§∞‡•Ä ‡§≤‡§æ‡§≤ ‡§Æ‡§ø‡§∞‡•ç‡§ö, ‡§ï‡•á‡§∞‡§≤ ‡§á‡§≤‡§æ‡§Ø‡§ö‡•Ä ‡§î‡§∞ ‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§Æ‡§∏‡§æ‡§≤‡§æ ‡§Æ‡§ø‡§∂‡•ç‡§∞‡§£‡•§" />
        <meta name="keywords" content="‡§ö‡§æ‡§Ç‡§¶‡§®‡•Ä ‡§ö‡•å‡§ï ‡§Æ‡§∏‡§æ‡§≤‡•á, ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§Æ‡§∏‡§æ‡§≤‡•á, ‡§ï‡§∂‡•ç‡§Æ‡•Ä‡§∞‡•Ä ‡§Æ‡§ø‡§∞‡•ç‡§ö, ‡§á‡§≤‡§æ‡§Ø‡§ö‡•Ä, ‡§ó‡§∞‡§Æ ‡§Æ‡§∏‡§æ‡§≤‡§æ, ‡§™‡•Å‡§∞‡§æ‡§®‡•Ä ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä" />
        <link rel="canonical" href="https://bharatshala.com/markets/chandni-chowk/spice-market" />
      </Helmet>

      <div className="min-h-screen bg-gray-50">
        {/* Hero Section */}
        <section className="relative bg-gradient-to-r from-red-600 to-orange-600 text-white py-16">
          <div className="absolute inset-0 bg-black/40"></div>
          <div 
            className="absolute inset-0 bg-cover bg-center opacity-30"
            style={{ backgroundImage: `url(${marketInfo.heroImage})` }}
          ></div>
          
          <div className="container mx-auto px-6 relative z-10">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className="max-w-4xl"
            >
              <div className="flex items-center space-x-4 mb-6">
                <span className="text-6xl">üå∂Ô∏è</span>
                <div>
                  <h1 className="text-5xl font-bold mb-2">{marketInfo.name}</h1>
                  <p className="text-xl opacity-90">{marketInfo.description}</p>
                </div>
              </div>
              
              <div className="grid md:grid-cols-3 gap-6 mt-8">
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">‡§∏‡•ç‡§•‡§æ‡§™‡§®‡§æ</h3>
                  <p className="text-orange-200">{marketInfo.established}</p>
                </div>
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ</h3>
                  <p className="text-orange-200">{marketInfo.speciality}</p>
                </div>
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">‡§∏‡•ç‡§•‡§æ‡§®</h3>
                  <p className="text-orange-200">{marketInfo.location}</p>
                </div>
              </div>
            </motion.div>
          </div>
        </section>

        {/* Navigation Breadcrumb */}
        <div className="bg-white border-b">
          <div className="container mx-auto px-6 py-4">
            <nav className="text-sm text-gray-600">
              <Link to="/" className="hover:text-emerald-600">‡§π‡•ã‡§Æ</Link>
              <span className="mx-2">‚Ä∫</span>
              <Link to="/markets" className="hover:text-emerald-600">‡§¨‡§æ‡§ú‡§æ‡§∞</Link>
              <span className="mx-2">‚Ä∫</span>
              <Link to="/markets/chandni-chowk" className="hover:text-emerald-600">‡§ö‡§æ‡§Ç‡§¶‡§®‡•Ä ‡§ö‡•å‡§ï</Link>
              <span className="mx-2">‚Ä∫</span>
              <span className="text-gray-900">‡§Æ‡§∏‡§æ‡§≤‡§æ ‡§¨‡§æ‡§ú‡§æ‡§∞</span>
            </nav>
          </div>
        </div>

        {/* Categories Section */}
        <section className="py-8 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-2xl font-bold text-gray-900 mb-6">‡§Æ‡§∏‡§æ‡§≤‡•ã‡§Ç ‡§ï‡•Ä ‡§∂‡•ç‡§∞‡•á‡§£‡§ø‡§Ø‡§æ‡§Ç</h2>
            <div className="flex flex-wrap gap-4">
              {spiceCategories.map((category) => (
                <button
                  key={category.id}
                  onClick={() => handleCategoryChange(category.id)}
                  className={`flex items-center space-x-2 px-4 py-2 rounded-full transition-colors duration-200 ${
                    activeCategory === category.id
                      ? 'bg-red-500 text-white'
                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                  }`}
                >
                  <span>{category.icon}</span>
                  <span>{category.name}</span>
                </button>
              ))}
            </div>
          </div>
        </section>

        {/* Featured Spices */}
        <section className="py-12 bg-red-50">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§Ü‡§ú ‡§ï‡•á ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§Æ‡§∏‡§æ‡§≤‡•á</h2>
            <div className="grid md:grid-cols-3 gap-8">
              {featuredSpices.map((spice, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-200"
                >
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{spice.name}</h3>
                  <p className="text-gray-600 mb-3">{spice.description}</p>
                  <div className="mb-3">
                    <span className="text-2xl font-bold text-red-600">{spice.price}</span>
                  </div>
                  <div className="mb-4">
                    <span className="inline-block bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full">
                      {spice.specialty}
                    </span>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-sm text-gray-500">{spice.vendor}</span>
                    <button className="bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-colors duration-200">
                      ‡§ï‡§æ‡§∞‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
                    </button>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Products Section */}
        {loading ? (
          <div className="flex justify-center py-12">
            <LoadingSpinner size="large" text="‡§Æ‡§∏‡§æ‡§≤‡•á ‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡•á ‡§π‡•à‡§Ç..." />
          </div>
        ) : (
          <section className="py-12">
            <div className="container mx-auto px-6">
              <h2 className="text-3xl font-bold text-gray-900 mb-8">
                {activeCategory === 'all' ? '‡§∏‡§≠‡•Ä ‡§Æ‡§∏‡§æ‡§≤‡•á' : spiceCategories.find(cat => cat.id === activeCategory)?.name}
              </h2>
              
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                {filteredSpices.map((spice) => (
                  <ProductCard
                    key={spice.id}
                    product={spice}
                    onAddToCart={() => handleAddToCart(spice)}
                    onAddToWishlist={() => handleAddToWishlist(spice)}
                    showOriginBadge={true}
                    showFreshnessBadge={true}
                  />
                ))}
              </div>

              {filteredSpices.length === 0 && (
                <div className="text-center py-12">
                  <div className="text-6xl mb-4">üå∂Ô∏è</div>
                  <h3 className="text-xl font-semibold text-gray-900 mb-2">‡§á‡§∏ ‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§Æ‡•á‡§Ç ‡§ï‡•ã‡§à ‡§Æ‡§∏‡§æ‡§≤‡•á ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡•á</h3>
                  <p className="text-gray-600">‡§ï‡•É‡§™‡§Ø‡§æ ‡§¶‡•Ç‡§∏‡§∞‡•Ä ‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§ï‡§æ ‡§ö‡§Ø‡§® ‡§ï‡§∞‡•á‡§Ç</p>
                </div>
              )}
            </div>
          </section>
        )}

        {/* Famous Vendors */}
        <section className="py-16 bg-gradient-to-r from-orange-100 to-red-100">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§™‡•ç‡§∞‡§∏‡§ø‡§¶‡•ç‡§ß ‡§Æ‡§∏‡§æ‡§≤‡§æ ‡§µ‡•ç‡§Ø‡§æ‡§™‡§æ‡§∞‡•Ä</h2>
            <div className="grid md:grid-cols-3 gap-8">
              {famousVendors.map((vendor, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, scale: 0.9 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-white rounded-lg shadow-lg p-6 text-center hover:shadow-xl transition-shadow duration-200"
                >
                  <div className="text-4xl mb-4">üè™</div>
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{vendor.name}</h3>
                  <div className="space-y-2 text-sm text-gray-600 mb-4">
                    <p><strong>‡§∏‡•ç‡§•‡§æ‡§™‡§®‡§æ:</strong> {vendor.established}</p>
                    <p><strong>‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ:</strong> {vendor.specialty}</p>
                    <p><strong>‡§Ö‡§®‡•Å‡§≠‡§µ:</strong> {vendor.experience}</p>
                  </div>
                  <div className="flex items-center justify-center space-x-1 mb-4">
                    {[...Array(5)].map((_, i) => (
                      <span key={i} className={`text-lg ${i < Math.floor(vendor.rating) ? 'text-yellow-400' : 'text-gray-300'}`}>
                        ‚≠ê
                      </span>
                    ))}
                    <span className="text-sm text-gray-600 ml-2">{vendor.rating}</span>
                  </div>
                  <button className="bg-orange-500 text-white px-4 py-2 rounded-lg hover:bg-orange-600 transition-colors duration-200">
                    ‡§¶‡•Å‡§ï‡§æ‡§® ‡§¶‡•á‡§ñ‡•á‡§Ç
                  </button>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Spice Knowledge */}
        <section className="py-16 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§Æ‡§∏‡§æ‡§≤‡•ã‡§Ç ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä</h2>
            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
              <div className="text-center">
                <div className="text-4xl mb-4">üåø</div>
                <h3 className="text-xl font-semibold mb-2">‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§≤‡§æ‡§≠</h3>
                <p className="text-gray-600">‡§Æ‡§∏‡§æ‡§≤‡•ã‡§Ç ‡§ï‡•á ‡§î‡§∑‡§ß‡•Ä‡§Ø ‡§ó‡•Å‡§£ ‡§î‡§∞ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§™‡§∞ ‡§™‡•ç‡§∞‡§≠‡§æ‡§µ</p>
              </div>
              <div className="text-center">
                <div className="text-4xl mb-4">üë©‚Äçüç≥</div>
                <h3 className="text-xl font-semibold mb-2">‡§â‡§™‡§Ø‡•ã‡§ó</h3>
                <p className="text-gray-600">‡§µ‡§ø‡§≠‡§ø‡§®‡•ç‡§® ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§Æ‡§∏‡§æ‡§≤‡•ã‡§Ç ‡§ï‡§æ ‡§∏‡§π‡•Ä ‡§â‡§™‡§Ø‡•ã‡§ó</p>
              </div>
              <div className="text-center">
                <div className="text-4xl mb-4">üì¶</div>
                <h3 className="text-xl font-semibold mb-2">‡§≠‡§Ç‡§°‡§æ‡§∞‡§£</h3>
                <p className="text-gray-600">‡§Æ‡§∏‡§æ‡§≤‡•ã‡§Ç ‡§ï‡•Ä ‡§§‡§æ‡§ú‡§ó‡•Ä ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡§®‡•á ‡§ï‡•á ‡§§‡§∞‡•Ä‡§ï‡•á</p>
              </div>
              <div className="text-center">
                <div className="text-4xl mb-4">üîç</div>
                <h3 className="text-xl font-semibold mb-2">‡§ó‡•Å‡§£‡§µ‡§§‡•ç‡§§‡§æ</h3>
                <p className="text-gray-600">‡§™‡•ç‡§∞‡§æ‡§Æ‡§æ‡§£‡§ø‡§ï ‡§Æ‡§∏‡§æ‡§≤‡•ã‡§Ç ‡§ï‡•Ä ‡§™‡§π‡§ö‡§æ‡§® ‡§ï‡•à‡§∏‡•á ‡§ï‡§∞‡•á‡§Ç</p>
              </div>
            </div>
          </div>
        </section>

        {/* Market Experience */}
        <section className="py-16 bg-red-600 text-white">
          <div className="container mx-auto px-6 text-center">
            <h2 className="text-3xl font-bold mb-8">‡§ö‡§æ‡§Ç‡§¶‡§®‡•Ä ‡§ö‡•å‡§ï ‡§ï‡§æ ‡§Ö‡§®‡•Å‡§≠‡§µ</h2>
            <div className="max-w-4xl mx-auto">
              <p className="text-xl leading-relaxed mb-8">
                400 ‡§∏‡§æ‡§≤ ‡§™‡•Å‡§∞‡§æ‡§®‡•á ‡§á‡§∏ ‡§Æ‡§∏‡§æ‡§≤‡§æ ‡§¨‡§æ‡§ú‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡•ã ‡§Æ‡§ø‡§≤‡•á‡§ó‡§æ ‡§≠‡§æ‡§∞‡§§ ‡§ï‡•Ä ‡§π‡§∞ ‡§ï‡•ã‡§®‡•á ‡§∏‡•á ‡§Ü‡§è ‡§Æ‡§∏‡§æ‡§≤‡•ã‡§Ç ‡§ï‡§æ ‡§Ö‡§®‡•Ç‡§†‡§æ ‡§∏‡§Ç‡§ó‡•ç‡§∞‡§π‡•§ 
                ‡§Ø‡§π‡§æ‡§Å ‡§ï‡•á ‡§Ö‡§®‡•Å‡§≠‡§µ‡•Ä ‡§µ‡•ç‡§Ø‡§æ‡§™‡§æ‡§∞‡•Ä ‡§™‡•Ä‡§¢‡§º‡§ø‡§Ø‡•ã‡§Ç ‡§∏‡•á ‡§ö‡§≤‡•Ä ‡§Ü ‡§∞‡§π‡•Ä ‡§™‡§∞‡§Ç‡§™‡§∞‡§æ ‡§ï‡•ã ‡§Ü‡§ó‡•á ‡§¨‡§¢‡§º‡§æ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç‡•§ 
                ‡§π‡§∞ ‡§Æ‡§∏‡§æ‡§≤‡•á ‡§ï‡•Ä ‡§è‡§ï ‡§Ö‡§≤‡§ó ‡§ï‡§π‡§æ‡§®‡•Ä ‡§π‡•à, ‡§π‡§∞ ‡§∏‡•Å‡§ó‡§Ç‡§ß ‡§Æ‡•á‡§Ç ‡§õ‡•Å‡§™‡§æ ‡§π‡•à ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§∞‡§∏‡•ã‡§à ‡§ï‡§æ ‡§ú‡§æ‡§¶‡•Ç‡•§
              </p>
              <div className="grid md:grid-cols-3 gap-8 mt-12">
                <div>
                  <div className="text-4xl mb-4">üìç</div>
                  <h3 className="text-xl font-semibold mb-2">‡§∏‡•ç‡§•‡§æ‡§®</h3>
                  <p>‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§¨‡§æ‡§ú‡§æ‡§∞, ‡§ö‡§æ‡§Ç‡§¶‡§®‡•Ä ‡§ö‡•å‡§ï, ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä</p>
                </div>
                <div>
                  <div className="text-4xl mb-4">üïí</div>
                  <h3 className="text-xl font-semibold mb-2">‡§∏‡§Æ‡§Ø</h3>
                  <p>‡§∏‡•Å‡§¨‡§π 10:00 - ‡§∂‡§æ‡§Æ 8:00 (‡§∏‡•ã‡§Æ‡§µ‡§æ‡§∞ ‡§¨‡§Ç‡§¶)</p>
                </div>
                <div>
                  <div className="text-4xl mb-4">üöá</div>
                  <h3 className="text-xl font-semibold mb-2">‡§™‡§π‡•Å‡§Ç‡§ö‡§®‡§æ</h3>
                  <p>‡§ö‡§æ‡§Ç‡§¶‡§®‡•Ä ‡§ö‡•å‡§ï ‡§Æ‡•á‡§ü‡•ç‡§∞‡•ã ‡§∏‡•ç‡§ü‡•á‡§∂‡§® ‡§∏‡•á 2 ‡§Æ‡§ø‡§®‡§ü</p>
                </div>
              </div>
            </div>
          </div>
        </section>
      </div>
    </>
  );
};

export default SpiceMarket;