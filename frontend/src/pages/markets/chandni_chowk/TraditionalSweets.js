// Traditional Sweets Component for Chandni Chowk - Bharatshaala Platform
import React, { useState, useEffect } from 'react';
import { Helmet } from 'react-helmet-async';
import { Link } from 'react-router-dom';
import { motion } from 'framer-motion';
import ProductCard from '../../components/ProductCard';
import LoadingSpinner from '../../components/LoadingSpinner';
import { useAnalytics } from '../../analytics';
import { useCart } from '../../hooks/useCart';
import { useWishlist } from '../../hooks/useWishlist';
import apiService from '../../apiService';

const TraditionalSweets = () => {
  const { trackEvent, trackPageView } = useAnalytics();
  const { addToCart } = useCart();
  const { addToWishlist } = useWishlist();

  const [sweets, setSweets] = useState([]);
  const [vendors, setVendors] = useState([]);
  const [loading, setLoading] = useState(true);
  const [activeCategory, setActiveCategory] = useState('all');

  const sweetShopInfo = {
    name: '‡§ö‡§æ‡§Ç‡§¶‡§®‡•Ä ‡§ö‡•å‡§ï ‡§Æ‡§ø‡§†‡§æ‡§à ‡§ï‡•Ä ‡§¶‡•Å‡§ï‡§æ‡§®‡•á‡§Ç',
    nameEn: 'Chandni Chowk Traditional Sweets',
    description: '200+ ‡§∏‡§æ‡§≤ ‡§™‡•Å‡§∞‡§æ‡§®‡§æ ‡§Æ‡§ø‡§†‡§æ‡§à ‡§ï‡§æ ‡§∏‡•ç‡§µ‡§∞‡•ç‡§ó - ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§ï‡•Ä ‡§∏‡§¨‡§∏‡•á ‡§™‡•ç‡§∞‡§∏‡§ø‡§¶‡•ç‡§ß ‡§Æ‡§ø‡§†‡§æ‡§á‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§ò‡§∞',
    established: '1800s',
    speciality: '‡§¨‡•á‡§∏‡§® ‡§ï‡•á ‡§≤‡§°‡•ç‡§°‡•Ç, ‡§ú‡§≤‡•á‡§¨‡•Ä, ‡§∞‡§¨‡§°‡§º‡•Ä',
    location: '‡§¶‡§∞‡•Ä‡§¨‡§æ ‡§ï‡§≤‡§æ‡§Ç, ‡§ö‡§æ‡§Ç‡§¶‡§®‡•Ä ‡§ö‡•å‡§ï',
    heroImage: '/images/markets/chandni-chowk-sweets.jpg'
  };

  const sweetCategories = [
    { id: 'all', name: '‡§∏‡§≠‡•Ä ‡§Æ‡§ø‡§†‡§æ‡§á‡§Ø‡§æ‡§Ç', icon: 'üçØ' },
    { id: 'traditional', name: '‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï', icon: 'ü™î' },
    { id: 'seasonal', name: '‡§Æ‡•å‡§∏‡§Æ‡•Ä', icon: 'üåô' },
    { id: 'festival', name: '‡§§‡•ç‡§Ø‡•ã‡§π‡§æ‡§∞‡•Ä', icon: 'üéâ' },
    { id: 'dry-fruits', name: '‡§°‡•ç‡§∞‡§æ‡§à ‡§´‡•ç‡§∞‡•Ç‡§ü‡•ç‡§∏', icon: 'ü•ú' },
    { id: 'milk-based', name: '‡§¶‡•Ç‡§ß ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§', icon: 'ü•õ' },
    { id: 'fried', name: '‡§§‡§≤‡•Ä ‡§π‡•Å‡§à', icon: 'üî•' }
  ];

  const famousSweets = [
    {
      name: '‡§ò‡•á‡§µ‡§∞ (‡§∞‡§æ‡§ú‡§∏‡•ç‡§•‡§æ‡§®‡•Ä)',
      description: '‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§∞‡§æ‡§ú‡§∏‡•ç‡§•‡§æ‡§®‡•Ä ‡§Æ‡§ø‡§†‡§æ‡§à - ‡§Æ‡•Å‡§Ç‡§π ‡§Æ‡•á‡§Ç ‡§ò‡•Å‡§≤ ‡§ú‡§æ‡§®‡•á ‡§µ‡§æ‡§≤‡•Ä',
      price: '‚Çπ350/kg',
      specialty: '‡§§‡•Ä‡§ú-‡§§‡•á‡§ì‡§π‡§æ‡§∞ ‡§µ‡§ø‡§∂‡•á‡§∑',
      vendor: '‡§ì‡§≤‡•ç‡§° ‡§´‡•á‡§Æ‡§∏ ‡§ú‡§≤‡•á‡§¨‡•Ä ‡§µ‡§æ‡§≤‡§æ'
    },
    {
      name: '‡§¨‡•á‡§∏‡§® ‡§≤‡§°‡•ç‡§°‡•Ç',
      description: '‡§∂‡•Å‡§¶‡•ç‡§ß ‡§ò‡•Ä ‡§Æ‡•á‡§Ç ‡§¨‡§®‡•á ‡§¨‡•á‡§∏‡§® ‡§ï‡•á ‡§≤‡§°‡•ç‡§°‡•Ç',
      price: '‚Çπ480/kg',
      specialty: '100 ‡§∏‡§æ‡§≤ ‡§™‡•Å‡§∞‡§æ‡§®‡§æ ‡§∞‡•á‡§∏‡§ø‡§™‡•Ä',
      vendor: '‡§ó‡•Å‡§∞‡•Å ‡§ï‡•É‡§™‡§æ ‡§∏‡•ç‡§µ‡•Ä‡§ü‡•ç‡§∏'
    },
    {
      name: '‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§ï‡•Ä ‡§ú‡§≤‡•á‡§¨‡•Ä',
      description: '‡§ó‡§∞‡•ç‡§Æ-‡§ó‡§∞‡•ç‡§Æ ‡§ï‡•Å‡§∞‡§ï‡•Å‡§∞‡•Ä ‡§ú‡§≤‡•á‡§¨‡•Ä',
      price: '‚Çπ320/kg',
      specialty: '‡§∏‡•Å‡§¨‡§π ‡§§‡§æ‡§ú‡§º‡•Ä ‡§¨‡§®‡•Ä',
      vendor: '‡§ú‡§≤‡•á‡§¨‡•Ä ‡§Æ‡§π‡§≤'
    }
  ];

  const famousShops = [
    {
      name: '‡§ì‡§≤‡•ç‡§° ‡§´‡•á‡§Æ‡§∏ ‡§ú‡§≤‡•á‡§¨‡•Ä ‡§µ‡§æ‡§≤‡§æ',
      established: '1884',
      specialty: '‡§ú‡§≤‡•á‡§¨‡•Ä, ‡§∞‡§¨‡§°‡§º‡•Ä',
      rating: 4.9,
      experience: '140+ ‡§µ‡§∞‡•ç‡§∑',
      famous_for: '‡§∏‡•Å‡§¨‡§π ‡§ï‡•Ä ‡§§‡§æ‡§ú‡§º‡•Ä ‡§ú‡§≤‡•á‡§¨‡•Ä'
    },
    {
      name: '‡§ó‡•Å‡§∞‡•Å ‡§ï‡•É‡§™‡§æ ‡§∏‡•ç‡§µ‡•Ä‡§ü‡•ç‡§∏',
      established: '1902',
      specialty: '‡§¨‡•á‡§∏‡§® ‡§≤‡§°‡•ç‡§°‡•Ç, ‡§Æ‡§ø‡§†‡§æ‡§à',
      rating: 4.8,
      experience: '120+ ‡§µ‡§∞‡•ç‡§∑',
      famous_for: '‡§∂‡•Å‡§¶‡•ç‡§ß ‡§ò‡•Ä ‡§ï‡•Ä ‡§Æ‡§ø‡§†‡§æ‡§à'
    },
    {
      name: '‡§ú‡§≤‡•á‡§¨‡•Ä ‡§Æ‡§π‡§≤',
      established: '1925',
      specialty: '‡§ú‡§≤‡•á‡§¨‡•Ä, ‡§∏‡§Æ‡•ã‡§∏‡§æ',
      rating: 4.7,
      experience: '98+ ‡§µ‡§∞‡•ç‡§∑',
      famous_for: '‡§ï‡•Å‡§∞‡§ï‡•Å‡§∞‡•Ä ‡§ú‡§≤‡•á‡§¨‡•Ä'
    }
  ];

  const sweetsByOccasion = [
    { occasion: '‡§¶‡§ø‡§µ‡§æ‡§≤‡•Ä', sweets: ['‡§ï‡§ú‡•Ç ‡§ï‡§§‡§≤‡•Ä', '‡§ó‡•Å‡§≤‡§æ‡§¨ ‡§ú‡§æ‡§Æ‡•Å‡§®', '‡§Æ‡•ã‡§§‡•Ä‡§ö‡•Ç‡§∞ ‡§≤‡§°‡•ç‡§°‡•Ç'] },
    { occasion: '‡§π‡•ã‡§≤‡•Ä', sweets: ['‡§ó‡•Å‡§ù‡§ø‡§Ø‡§æ', '‡§†‡§Ç‡§°‡§æ‡§à', '‡§Æ‡§æ‡§≤‡§™‡•Å‡§Ü'] },
    { occasion: '‡§ï‡§∞‡§µ‡§æ ‡§ö‡•å‡§•', sweets: ['‡§ñ‡•Ä‡§∞', '‡§π‡§≤‡§µ‡§æ', '‡§Æ‡•á‡§µ‡§æ ‡§Æ‡§ø‡§†‡§æ‡§à'] },
    { occasion: '‡§∞‡§æ‡§ñ‡•Ä', sweets: ['‡§ï‡§ú‡•Ç ‡§¨‡§∞‡•ç‡§´‡•Ä', '‡§∞‡§∏‡§Æ‡§≤‡§æ‡§à', '‡§™‡•á‡§°‡§º‡§æ'] }
  ];

  useEffect(() => {
    trackPageView('chandni_chowk_traditional_sweets');
    loadSweetShopData();
  }, []);

  const loadSweetShopData = async () => {
    try {
      setLoading(true);
      
      const [sweetsResponse, vendorsResponse] = await Promise.all([
        apiService.get('/markets/chandni-chowk/traditional-sweets/products'),
        apiService.get('/markets/chandni-chowk/traditional-sweets/vendors')
      ]);

      if (sweetsResponse.success) {
        setSweets(sweetsResponse.data);
      }

      if (vendorsResponse.success) {
        setVendors(vendorsResponse.data);
      }
    } catch (error) {
      console.error('Failed to load sweet shop data:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleCategoryChange = (category) => {
    setActiveCategory(category);
    trackEvent('sweet_category_selected', {
      market: 'chandni_chowk',
      category
    });
  };

  const handleAddToCart = async (product) => {
    const result = await addToCart(product, 1);
    if (result.success) {
      trackEvent('add_to_cart_sweets', {
        productId: product.id,
        market: 'chandni_chowk',
        vendor: product.vendor
      });
    }
  };

  const handleAddToWishlist = async (product) => {
    const result = await addToWishlist(product);
    if (result.success) {
      trackEvent('add_to_wishlist_sweets', {
        productId: product.id,
        market: 'chandni_chowk'
      });
    }
  };

  const filteredSweets = activeCategory === 'all' 
    ? sweets 
    : sweets.filter(sweet => sweet.category === activeCategory);

  return (
    <>
      <Helmet>
        <title>{sweetShopInfo.name} - ‡§≠‡§æ‡§∞‡§§‡§∂‡§æ‡§≤‡§æ | ‡§ö‡§æ‡§Ç‡§¶‡§®‡•Ä ‡§ö‡•å‡§ï ‡§ï‡•Ä ‡§™‡•ç‡§∞‡§∏‡§ø‡§¶‡•ç‡§ß ‡§Æ‡§ø‡§†‡§æ‡§á‡§Ø‡§æ‡§Ç</title>
        <meta name="description" content="‡§ö‡§æ‡§Ç‡§¶‡§®‡•Ä ‡§ö‡•å‡§ï ‡§ï‡•Ä 200 ‡§∏‡§æ‡§≤ ‡§™‡•Å‡§∞‡§æ‡§®‡•á ‡§Æ‡§ø‡§†‡§æ‡§à ‡§ï‡•Ä ‡§¶‡•Å‡§ï‡§æ‡§®‡•ã‡§Ç ‡§∏‡•á ‡§ò‡•á‡§µ‡§∞, ‡§ú‡§≤‡•á‡§¨‡•Ä, ‡§¨‡•á‡§∏‡§® ‡§≤‡§°‡•ç‡§°‡•Ç ‡§î‡§∞ ‡§Ö‡§®‡•ç‡§Ø ‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§Æ‡§ø‡§†‡§æ‡§á‡§Ø‡§æ‡§Ç‡•§" />
        <meta name="keywords" content="‡§ö‡§æ‡§Ç‡§¶‡§®‡•Ä ‡§ö‡•å‡§ï ‡§Æ‡§ø‡§†‡§æ‡§à, ‡§ú‡§≤‡•á‡§¨‡•Ä ‡§µ‡§æ‡§≤‡§æ, ‡§ò‡•á‡§µ‡§∞, ‡§¨‡•á‡§∏‡§® ‡§≤‡§°‡•ç‡§°‡•Ç, ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§∏‡•ç‡§µ‡•Ä‡§ü‡•ç‡§∏, ‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§Æ‡§ø‡§†‡§æ‡§à" />
        <link rel="canonical" href="https://bharatshaala.com/markets/chandni-chowk/traditional-sweets" />
      </Helmet>

      <div className="min-h-screen bg-gray-50">
        {/* Hero Section */}
        <section className="relative bg-gradient-to-r from-orange-600 to-yellow-500 text-white py-16">
          <div className="absolute inset-0 bg-black/40"></div>
          <div 
            className="absolute inset-0 bg-cover bg-center opacity-30"
            style={{ backgroundImage: `url(${sweetShopInfo.heroImage})` }}
          ></div>
          
          <div className="container mx-auto px-6 relative z-10">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className="max-w-4xl"
            >
              <div className="flex items-center space-x-4 mb-6">
                <span className="text-6xl">üçØ</span>
                <div>
                  <h1 className="text-5xl font-bold mb-2">{sweetShopInfo.name}</h1>
                  <p className="text-xl opacity-90">{sweetShopInfo.description}</p>
                </div>
              </div>
              
              <div className="grid md:grid-cols-3 gap-6 mt-8">
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">‡§∏‡•ç‡§•‡§æ‡§™‡§®‡§æ</h3>
                  <p className="text-yellow-200">{sweetShopInfo.established}</p>
                </div>
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">‡§™‡•ç‡§∞‡§∏‡§ø‡§¶‡•ç‡§ß</h3>
                  <p className="text-yellow-200">{sweetShopInfo.speciality}</p>
                </div>
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">‡§∏‡•ç‡§•‡§æ‡§®</h3>
                  <p className="text-yellow-200">{sweetShopInfo.location}</p>
                </div>
              </div>
            </motion.div>
          </div>
        </section>

        {/* Navigation Breadcrumb */}
        <div className="bg-white border-b">
          <div className="container mx-auto px-6 py-4">
            <nav className="text-sm text-gray-600">
              <Link to="/" className="hover:text-emerald-600">‡§π‡•ã‡§Æ</Link>
              <span className="mx-2">‚Ä∫</span>
              <Link to="/markets" className="hover:text-emerald-600">‡§¨‡§æ‡§ú‡§æ‡§∞</Link>
              <span className="mx-2">‚Ä∫</span>
              <Link to="/markets/chandni-chowk" className="hover:text-emerald-600">‡§ö‡§æ‡§Ç‡§¶‡§®‡•Ä ‡§ö‡•å‡§ï</Link>
              <span className="mx-2">‚Ä∫</span>
              <span className="text-gray-900">‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§Æ‡§ø‡§†‡§æ‡§á‡§Ø‡§æ‡§Ç</span>
            </nav>
          </div>
        </div>

        {/* Categories Section */}
        <section className="py-8 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-2xl font-bold text-gray-900 mb-6">‡§Æ‡§ø‡§†‡§æ‡§à ‡§∂‡•ç‡§∞‡•á‡§£‡§ø‡§Ø‡§æ‡§Ç</h2>
            <div className="flex flex-wrap gap-4">
              {sweetCategories.map((category) => (
                <button
                  key={category.id}
                  onClick={() => handleCategoryChange(category.id)}
                  className={`flex items-center space-x-2 px-4 py-2 rounded-full transition-colors duration-200 ${
                    activeCategory === category.id
                      ? 'bg-orange-500 text-white'
                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                  }`}
                >
                  <span>{category.icon}</span>
                  <span>{category.name}</span>
                </button>
              ))}
            </div>
          </div>
        </section>

        {/* Famous Sweets */}
        <section className="py-12 bg-orange-50">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§Ü‡§ú ‡§ï‡•Ä ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§Æ‡§ø‡§†‡§æ‡§á‡§Ø‡§æ‡§Ç</h2>
            <div className="grid md:grid-cols-3 gap-8">
              {famousSweets.map((sweet, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-200"
                >
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{sweet.name}</h3>
                  <p className="text-gray-600 mb-3">{sweet.description}</p>
                  <div className="mb-3">
                    <span className="text-2xl font-bold text-orange-600">{sweet.price}</span>
                  </div>
                  <div className="mb-4">
                    <span className="inline-block bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full">
                      {sweet.specialty}
                    </span>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-sm text-gray-500">{sweet.vendor}</span>
                    <button className="bg-orange-500 text-white px-4 py-2 rounded-lg hover:bg-orange-600 transition-colors duration-200">
                      ‡§ë‡§∞‡•ç‡§°‡§∞ ‡§ï‡§∞‡•á‡§Ç
                    </button>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Festival Sweets */}
        <section className="py-16 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§§‡•ç‡§Ø‡•ã‡§π‡§æ‡§∞‡•Ä ‡§Æ‡§ø‡§†‡§æ‡§á‡§Ø‡§æ‡§Ç</h2>
            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
              {sweetsByOccasion.map((occasion, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, scale: 0.9 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-gradient-to-br from-orange-100 to-yellow-100 rounded-lg p-6 text-center hover:shadow-lg transition-shadow duration-200"
                >
                  <h3 className="text-xl font-bold text-gray-900 mb-4">{occasion.occasion}</h3>
                  <div className="space-y-2">
                    {occasion.sweets.map((sweet, sweetIndex) => (
                      <div key={sweetIndex} className="bg-white rounded-lg p-2 text-sm text-gray-700">
                        {sweet}
                      </div>
                    ))}
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Famous Shops */}
        <section className="py-16 bg-gradient-to-r from-yellow-100 to-orange-100">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§™‡•ç‡§∞‡§∏‡§ø‡§¶‡•ç‡§ß ‡§Æ‡§ø‡§†‡§æ‡§à ‡§ï‡•Ä ‡§¶‡•Å‡§ï‡§æ‡§®‡•á‡§Ç</h2>
            <div className="grid md:grid-cols-3 gap-8">
              {famousShops.map((shop, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, scale: 0.9 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-white rounded-lg shadow-lg p-6 text-center hover:shadow-xl transition-shadow duration-200"
                >
                  <div className="text-4xl mb-4">üè™</div>
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{shop.name}</h3>
                  <div className="space-y-2 text-sm text-gray-600 mb-4">
                    <p><strong>‡§∏‡•ç‡§•‡§æ‡§™‡§®‡§æ:</strong> {shop.established}</p>
                    <p><strong>‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ:</strong> {shop.specialty}</p>
                    <p><strong>‡§™‡•ç‡§∞‡§∏‡§ø‡§¶‡•ç‡§ß:</strong> {shop.famous_for}</p>
                    <p><strong>‡§Ö‡§®‡•Å‡§≠‡§µ:</strong> {shop.experience}</p>
                  </div>
                  <div className="flex items-center justify-center space-x-1 mb-4">
                    {[...Array(5)].map((_, i) => (
                      <span key={i} className={`text-lg ${i < Math.floor(shop.rating) ? 'text-yellow-400' : 'text-gray-300'}`}>
                        ‚≠ê
                      </span>
                    ))}
                    <span className="text-sm text-gray-600 ml-2">{shop.rating}</span>
                  </div>
                  <button className="bg-orange-500 text-white px-4 py-2 rounded-lg hover:bg-orange-600 transition-colors duration-200">
                    ‡§¶‡•Å‡§ï‡§æ‡§® ‡§¶‡•á‡§ñ‡•á‡§Ç
                  </button>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Sweet Making Process */}
        <section className="py-16 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§Æ‡§ø‡§†‡§æ‡§à ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•Ä ‡§ï‡§≤‡§æ</h2>
            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
              <div className="text-center">
                <div className="text-4xl mb-4">ü•õ</div>
                <h3 className="text-xl font-semibold mb-2">‡§∂‡•Å‡§¶‡•ç‡§ß ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä</h3>
                <p className="text-gray-600">‡§ï‡•á‡§µ‡§≤ ‡§∂‡•Å‡§¶‡•ç‡§ß ‡§¶‡•Ç‡§ß, ‡§ò‡•Ä ‡§î‡§∞ ‡§™‡•ç‡§∞‡§æ‡§ï‡•É‡§§‡§ø‡§ï ‡§ö‡•Ä‡§®‡•Ä ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó</p>
              </div>
              <div className="text-center">
                <div className="text-4xl mb-4">üë®‚Äçüç≥</div>
                <h3 className="text-xl font-semibold mb-2">‡§ï‡•Å‡§∂‡§≤ ‡§π‡§≤‡§µ‡§æ‡§à</h3>
                <p className="text-gray-600">‡§™‡•Ä‡§¢‡§º‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§Ö‡§®‡•Å‡§≠‡§µ ‡§î‡§∞ ‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§§‡§ï‡§®‡•Ä‡§ï</p>
              </div>
              <div className="text-center">
                <div className="text-4xl mb-4">üî•</div>
                <h3 className="text-xl font-semibold mb-2">‡§ß‡•Ä‡§Æ‡•Ä ‡§Ü‡§Ç‡§ö</h3>
                <p className="text-gray-600">‡§ß‡•à‡§∞‡•ç‡§Ø ‡§î‡§∞ ‡§∏‡§Æ‡§Ø ‡§∏‡•á ‡§¨‡§®‡§æ‡§à ‡§ó‡§à ‡§∏‡•ç‡§µ‡§æ‡§¶‡§ø‡§∑‡•ç‡§ü ‡§Æ‡§ø‡§†‡§æ‡§à</p>
              </div>
              <div className="text-center">
                <div className="text-4xl mb-4">üçØ</div>
                <h3 className="text-xl font-semibold mb-2">‡§™‡•ç‡§∞‡§æ‡§ï‡•É‡§§‡§ø‡§ï ‡§Æ‡§ø‡§†‡§æ‡§∏</h3>
                <p className="text-gray-600">‡§ï‡•É‡§§‡•ç‡§∞‡§ø‡§Æ ‡§∞‡§Ç‡§ó ‡§Ø‡§æ ‡§∏‡•ç‡§µ‡§æ‡§¶ ‡§∏‡•á ‡§Æ‡•Å‡§ï‡•ç‡§§</p>
              </div>
            </div>
          </div>
        </section>

        {/* Products Section */}
        {loading ? (
          <div className="flex justify-center py-12">
            <LoadingSpinner size="large" text="‡§Æ‡§ø‡§†‡§æ‡§á‡§Ø‡§æ‡§Ç ‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à‡§Ç..." />
          </div>
        ) : (
          <section className="py-12 bg-gray-50">
            <div className="container mx-auto px-6">
              <h2 className="text-3xl font-bold text-gray-900 mb-8">
                {activeCategory === 'all' ? '‡§∏‡§≠‡•Ä ‡§Æ‡§ø‡§†‡§æ‡§á‡§Ø‡§æ‡§Ç' : sweetCategories.find(cat => cat.id === activeCategory)?.name}
              </h2>
              
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                {filteredSweets.map((sweet) => (
                  <ProductCard
                    key={sweet.id}
                    product={sweet}
                    onAddToCart={() => handleAddToCart(sweet)}
                    onAddToWishlist={() => handleAddToWishlist(sweet)}
                    showFreshnessBadge={true}
                    showTraditionalBadge={true}
                  />
                ))}
              </div>

              {filteredSweets.length === 0 && (
                <div className="text-center py-12">
                  <div className="text-6xl mb-4">üçØ</div>
                  <h3 className="text-xl font-semibold text-gray-900 mb-2">‡§á‡§∏ ‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§Æ‡•á‡§Ç ‡§ï‡•ã‡§à ‡§Æ‡§ø‡§†‡§æ‡§à ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡•Ä</h3>
                  <p className="text-gray-600">‡§ï‡•É‡§™‡§Ø‡§æ ‡§¶‡•Ç‡§∏‡§∞‡•Ä ‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§ï‡§æ ‡§ö‡§Ø‡§® ‡§ï‡§∞‡•á‡§Ç</p>
                </div>
              )}
            </div>
          </section>
        )}

        {/* Sweet Experience */}
        <section className="py-16 bg-gradient-to-r from-orange-600 to-yellow-500 text-white">
          <div className="container mx-auto px-6 text-center">
            <h2 className="text-3xl font-bold mb-8">‡§ö‡§æ‡§Ç‡§¶‡§®‡•Ä ‡§ö‡•å‡§ï ‡§Æ‡§ø‡§†‡§æ‡§à ‡§ï‡§æ ‡§Ö‡§®‡•Å‡§≠‡§µ</h2>
            <div className="max-w-4xl mx-auto">
              <p className="text-xl leading-relaxed mb-8">
                200 ‡§∏‡§æ‡§≤ ‡§™‡•Å‡§∞‡§æ‡§®‡•á ‡§á‡§® ‡§Æ‡§ø‡§†‡§æ‡§à ‡§ï‡•Ä ‡§¶‡•Å‡§ï‡§æ‡§®‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§õ‡•Å‡§™‡•Ä ‡§π‡•à ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§ï‡•Ä ‡§Æ‡§ø‡§†‡§æ‡§∏‡•§ 
                ‡§Ø‡§π‡§æ‡§Å ‡§π‡§∞ ‡§∏‡•Å‡§¨‡§π ‡§§‡§æ‡§ú‡§º‡•Ä ‡§ú‡§≤‡•á‡§¨‡•Ä ‡§ï‡•Ä ‡§ñ‡•Å‡§∂‡§¨‡•Ç ‡§î‡§∞ ‡§π‡§≤‡§µ‡§æ‡§á‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§Æ‡•á‡§π‡§®‡§§ ‡§¶‡•á‡§ñ‡§®‡•á ‡§ï‡•ã ‡§Æ‡§ø‡§≤‡§§‡•Ä ‡§π‡•à‡•§ 
                ‡§π‡§∞ ‡§Æ‡§ø‡§†‡§æ‡§à ‡§Æ‡•á‡§Ç ‡§¨‡§∏‡§æ ‡§π‡•à ‡§™‡•ç‡§∞‡•á‡§Æ ‡§î‡§∞ ‡§π‡§∞ ‡§∏‡•ç‡§µ‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§õ‡•Å‡§™‡•Ä ‡§π‡•à ‡§™‡•Å‡§∞‡§æ‡§®‡•Ä ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§ï‡•Ä ‡§∞‡§µ‡§æ‡§Ø‡§§‡•§
              </p>
              <div className="grid md:grid-cols-3 gap-8 mt-12">
                <div>
                  <div className="text-4xl mb-4">üìç</div>
                  <h3 className="text-xl font-semibold mb-2">‡§∏‡•ç‡§•‡§æ‡§®</h3>
                  <p>‡§¶‡§∞‡•Ä‡§¨‡§æ ‡§ï‡§≤‡§æ‡§Ç, ‡§ö‡§æ‡§Ç‡§¶‡§®‡•Ä ‡§ö‡•å‡§ï</p>
                </div>
                <div>
                  <div className="text-4xl mb-4">üïí</div>
                  <h3 className="text-xl font-semibold mb-2">‡§∏‡§Æ‡§Ø</h3>
                  <p>‡§∏‡•Å‡§¨‡§π 8:00 - ‡§∞‡§æ‡§§ 10:00</p>
                </div>
                <div>
                  <div className="text-4xl mb-4">üéØ</div>
                  <h3 className="text-xl font-semibold mb-2">‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ</h3>
                  <p>‡§§‡§æ‡§ú‡§º‡•Ä ‡§î‡§∞ ‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§Æ‡§ø‡§†‡§æ‡§à</p>
                </div>
              </div>
            </div>
          </div>
        </section>
      </div>
    </>
  );
};

export default TraditionalSweets;