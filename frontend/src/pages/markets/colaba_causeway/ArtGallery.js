// Art Gallery Component for Colaba Causeway - Bharatshala Platform
import React, { useState, useEffect } from 'react';
import { Helmet } from 'react-helmet-async';
import { Link } from 'react-router-dom';
import { motion } from 'framer-motion';
import ProductCard from '../../components/ProductCard';
import LoadingSpinner from '../../components/LoadingSpinner';
import { useAnalytics } from '../../analytics';
import { useCart } from '../../hooks/useCart';
import { useWishlist } from '../../hooks/useWishlist';
import apiService from '../../apiService';

const ArtGallery = () => {
  const { trackEvent, trackPageView } = useAnalytics();
  const { addToCart } = useCart();
  const { addToWishlist } = useWishlist();

  const [artworks, setArtworks] = useState([]);
  const [artists, setArtists] = useState([]);
  const [exhibitions, setExhibitions] = useState([]);
  const [loading, setLoading] = useState(true);
  const [activeCategory, setActiveCategory] = useState('all');

  const galleryInfo = {
    name: '‡§ï‡•ã‡§≤‡§æ‡§¨‡§æ ‡§Ü‡§∞‡•ç‡§ü ‡§ó‡•à‡§≤‡§∞‡•Ä',
    nameEn: 'Colaba Art Gallery',
    description: '‡§∏‡§Æ‡§ï‡§æ‡§≤‡•Ä‡§® ‡§î‡§∞ ‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ï‡§≤‡§æ ‡§ï‡§æ ‡§∏‡§Ç‡§ó‡§Æ - ‡§Æ‡•Å‡§Ç‡§¨‡§à ‡§ï‡•Ä ‡§™‡•ç‡§∞‡§∏‡§ø‡§¶‡•ç‡§ß ‡§ï‡§≤‡§æ ‡§¶‡•Ä‡§∞‡•ç‡§ò‡§æ',
    established: '1980s',
    speciality: '‡§∏‡§Æ‡§ï‡§æ‡§≤‡•Ä‡§® ‡§ï‡§≤‡§æ, ‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§™‡•á‡§Ç‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏',
    location: '‡§Ü‡§∞‡•ç‡§ü ‡§°‡§ø‡§∏‡•ç‡§ü‡•ç‡§∞‡§ø‡§ï‡•ç‡§ü, ‡§ï‡•ã‡§≤‡§æ‡§¨‡§æ',
    heroImage: '/images/markets/colaba-art-gallery.jpg'
  };

  const artCategories = [
    { id: 'all', name: '‡§∏‡§≠‡•Ä ‡§ï‡§≤‡§æ‡§ï‡•É‡§§‡§ø‡§Ø‡§æ‡§Ç', icon: 'üé®' },
    { id: 'paintings', name: '‡§™‡•á‡§Ç‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏', icon: 'üñºÔ∏è' },
    { id: 'sculptures', name: '‡§Æ‡•Ç‡§∞‡•ç‡§§‡§ø‡§ï‡§≤‡§æ', icon: 'üóø' },
    { id: 'digital', name: '‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§Ü‡§∞‡•ç‡§ü', icon: 'üíª' },
    { id: 'photography', name: '‡§´‡•ã‡§ü‡•ã‡§ó‡•ç‡§∞‡§æ‡§´‡•Ä', icon: 'üì∏' },
    { id: 'mixed-media', name: '‡§Æ‡§ø‡§ï‡•ç‡§∏‡•ç‡§° ‡§Æ‡•Ä‡§°‡§ø‡§Ø‡§æ', icon: 'üé≠' },
    { id: 'installations', name: '‡§á‡§Ç‡§∏‡•ç‡§ü‡•â‡§≤‡•á‡§∂‡§®', icon: 'üèóÔ∏è' }
  ];

  const featuredArtists = [
    {
      name: '‡§∞‡§æ‡§ú ‡§ï‡•Å‡§Æ‡§æ‡§∞ ‡§∏‡§ø‡§Ç‡§π',
      specialty: '‡§∏‡§Æ‡§ï‡§æ‡§≤‡•Ä‡§® ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ö‡§ø‡§§‡•ç‡§∞‡§ï‡§≤‡§æ',
      experience: '25+ ‡§µ‡§∞‡•ç‡§∑',
      style: '‡§®‡§µ-‡§Ö‡§≠‡§ø‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®‡§æ‡§µ‡§æ‡§¶',
      achievements: '‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø ‡§ï‡§≤‡§æ ‡§™‡•Å‡§∞‡§∏‡•ç‡§ï‡§æ‡§∞ ‡§µ‡§ø‡§ú‡•á‡§§‡§æ',
      artworks: 45
    },
    {
      name: '‡§™‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§∂‡§∞‡•ç‡§Æ‡§æ',
      specialty: '‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§Ü‡§∞‡•ç‡§ü ‡§î‡§∞ ‡§á‡§Ç‡§∏‡•ç‡§ü‡•â‡§≤‡•á‡§∂‡§®',
      experience: '15+ ‡§µ‡§∞‡•ç‡§∑',
      style: '‡§Ü‡§ß‡•Å‡§®‡§ø‡§ï ‡§Ö‡§Æ‡•Ç‡§∞‡•ç‡§§',
      achievements: '‡§Ö‡§Ç‡§§‡§∞‡•ç‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø ‡§™‡•ç‡§∞‡§¶‡§∞‡•ç‡§∂‡§®‡•Ä ‡§Æ‡•á‡§Ç ‡§ö‡§Ø‡§®‡§ø‡§§',
      artworks: 32
    },
    {
      name: '‡§Ö‡§Æ‡§ø‡§§ ‡§ö‡•å‡§ß‡§∞‡•Ä',
      specialty: '‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§Æ‡•Å‡§ó‡§≤ ‡§∂‡•à‡§≤‡•Ä',
      experience: '30+ ‡§µ‡§∞‡•ç‡§∑',
      style: '‡§≤‡§ò‡•Å ‡§ö‡§ø‡§§‡•ç‡§∞‡§ï‡§≤‡§æ',
      achievements: '‡§∂‡§ø‡§≤‡•ç‡§™ ‡§ó‡•Å‡§∞‡•Å ‡§∏‡§Æ‡•ç‡§Æ‡§æ‡§®',
      artworks: 67
    }
  ];

  const currentExhibitions = [
    {
      title: '‡§∞‡§Ç‡§ó‡•ã‡§Ç ‡§ï‡§æ ‡§§‡•ç‡§Ø‡•ã‡§π‡§æ‡§∞',
      artist: '‡§µ‡§ø‡§≠‡§ø‡§®‡•ç‡§® ‡§ï‡§≤‡§æ‡§ï‡§æ‡§∞',
      theme: '‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§§‡•ç‡§Ø‡•ã‡§π‡§æ‡§∞‡•ã‡§Ç ‡§™‡§∞ ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§ï‡§≤‡§æ‡§ï‡•É‡§§‡§ø‡§Ø‡§æ‡§Ç',
      duration: '15 ‡§´‡§∞‡§µ‡§∞‡•Ä - 15 ‡§Æ‡§æ‡§∞‡•ç‡§ö',
      artworks: 25,
      type: '‡§ó‡•ç‡§∞‡•Å‡§™ ‡§∂‡•ã'
    },
    {
      title: '‡§Ü‡§ß‡•Å‡§®‡§ø‡§ï ‡§≠‡§æ‡§∞‡§§',
      artist: '‡§∞‡§æ‡§ú ‡§ï‡•Å‡§Æ‡§æ‡§∞ ‡§∏‡§ø‡§Ç‡§π',
      theme: '‡§∏‡§Æ‡§ï‡§æ‡§≤‡•Ä‡§® ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§∏‡§Æ‡§æ‡§ú ‡§ï‡§æ ‡§ö‡§ø‡§§‡•ç‡§∞‡§£',
      duration: '1 ‡§Æ‡§æ‡§∞‡•ç‡§ö - 30 ‡§Æ‡§æ‡§∞‡•ç‡§ö',
      artworks: 18,
      type: '‡§∏‡•ã‡§≤‡•ã ‡§∂‡•ã'
    }
  ];

  const artStyles = [
    { style: '‡§Æ‡•Å‡§ó‡§≤ ‡§∂‡•à‡§≤‡•Ä', origin: '‡§Æ‡•Å‡§ó‡§≤ ‡§ï‡§æ‡§≤', description: '‡§≤‡§ò‡•Å ‡§ö‡§ø‡§§‡•ç‡§∞‡§ï‡§≤‡§æ ‡§î‡§∞ ‡§¨‡§æ‡§∞‡•Ä‡§ï ‡§ï‡§æ‡§Æ' },
    { style: '‡§∞‡§æ‡§ú‡§∏‡•ç‡§•‡§æ‡§®‡•Ä ‡§∂‡•à‡§≤‡•Ä', origin: '‡§∞‡§æ‡§ú‡§∏‡•ç‡§•‡§æ‡§®', description: '‡§∞‡§Ç‡§ó‡•Ä‡§® ‡§î‡§∞ ‡§µ‡§ø‡§∏‡•ç‡§§‡•É‡§§ ‡§ö‡§ø‡§§‡•ç‡§∞‡§£' },
    { style: '‡§¨‡§Ç‡§ó‡§æ‡§≤ ‡§∏‡•ç‡§ï‡•Ç‡§≤', origin: '‡§¨‡§Ç‡§ó‡§æ‡§≤', description: '‡§™‡•Å‡§®‡§∞‡•ç‡§ú‡§æ‡§ó‡§∞‡§£ ‡§ï‡§æ‡§≤ ‡§ï‡•Ä ‡§ï‡§≤‡§æ' },
    { style: '‡§∏‡§Æ‡§ï‡§æ‡§≤‡•Ä‡§®', origin: '‡§Ü‡§ß‡•Å‡§®‡§ø‡§ï ‡§ï‡§æ‡§≤', description: '‡§®‡§è ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ‡•ã‡§Ç ‡§î‡§∞ ‡§µ‡§ø‡§∑‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§ñ‡•ã‡§ú' }
  ];

  useEffect(() => {
    trackPageView('colaba_art_gallery');
    loadGalleryData();
  }, []);

  const loadGalleryData = async () => {
    try {
      setLoading(true);
      
      const [artworksResponse, artistsResponse, exhibitionsResponse] = await Promise.all([
        apiService.get('/markets/colaba-causeway/art-gallery/artworks'),
        apiService.get('/markets/colaba-causeway/art-gallery/artists'),
        apiService.get('/markets/colaba-causeway/art-gallery/exhibitions')
      ]);

      if (artworksResponse.success) {
        setArtworks(artworksResponse.data);
      }

      if (artistsResponse.success) {
        setArtists(artistsResponse.data);
      }

      if (exhibitionsResponse.success) {
        setExhibitions(exhibitionsResponse.data);
      }
    } catch (error) {
      console.error('Failed to load gallery data:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleCategoryChange = (category) => {
    setActiveCategory(category);
    trackEvent('art_category_selected', {
      market: 'colaba_causeway',
      category
    });
  };

  const handleAddToCart = async (product) => {
    const result = await addToCart(product, 1);
    if (result.success) {
      trackEvent('add_to_cart_art_gallery', {
        productId: product.id,
        market: 'colaba_causeway',
        artist: product.artist
      });
    }
  };

  const handleAddToWishlist = async (product) => {
    const result = await addToWishlist(product);
    if (result.success) {
      trackEvent('add_to_wishlist_art_gallery', {
        productId: product.id,
        market: 'colaba_causeway'
      });
    }
  };

  const filteredArtworks = activeCategory === 'all' 
    ? artworks 
    : artworks.filter(artwork => artwork.category === activeCategory);

  return (
    <>
      <Helmet>
        <title>{galleryInfo.name} - ‡§≠‡§æ‡§∞‡§§‡§∂‡§æ‡§≤‡§æ | ‡§ï‡•ã‡§≤‡§æ‡§¨‡§æ ‡§ï‡•Ä ‡§∏‡§Æ‡§ï‡§æ‡§≤‡•Ä‡§® ‡§ï‡§≤‡§æ</title>
        <meta name="description" content="‡§ï‡•ã‡§≤‡§æ‡§¨‡§æ ‡§Ü‡§∞‡•ç‡§ü ‡§ó‡•à‡§≤‡§∞‡•Ä ‡§∏‡•á ‡§∏‡§Æ‡§ï‡§æ‡§≤‡•Ä‡§® ‡§î‡§∞ ‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ï‡§≤‡§æ‡§ï‡•É‡§§‡§ø‡§Ø‡§æ‡§Ç‡•§ ‡§™‡•á‡§Ç‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏, ‡§Æ‡•Ç‡§∞‡•ç‡§§‡§ø‡§ï‡§≤‡§æ, ‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§Ü‡§∞‡•ç‡§ü ‡§î‡§∞ ‡§´‡•ã‡§ü‡•ã‡§ó‡•ç‡§∞‡§æ‡§´‡•Ä‡•§" />
        <meta name="keywords" content="‡§ï‡•ã‡§≤‡§æ‡§¨‡§æ ‡§Ü‡§∞‡•ç‡§ü ‡§ó‡•à‡§≤‡§∞‡•Ä, ‡§∏‡§Æ‡§ï‡§æ‡§≤‡•Ä‡§® ‡§ï‡§≤‡§æ, ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§™‡•á‡§Ç‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏, ‡§Æ‡•Å‡§Ç‡§¨‡§à ‡§Ü‡§∞‡•ç‡§ü, ‡§ï‡§≤‡§æ‡§ï‡•É‡§§‡§ø ‡§ñ‡§∞‡•Ä‡§¶‡•á‡§Ç" />
        <link rel="canonical" href="https://bharatshala.com/markets/colaba-causeway/art-gallery" />
      </Helmet>

      <div className="min-h-screen bg-gray-50">
        {/* Hero Section */}
        <section className="relative bg-gradient-to-r from-indigo-600 to-purple-600 text-white py-16">
          <div className="absolute inset-0 bg-black/40"></div>
          <div 
            className="absolute inset-0 bg-cover bg-center opacity-30"
            style={{ backgroundImage: `url(${galleryInfo.heroImage})` }}
          ></div>
          
          <div className="container mx-auto px-6 relative z-10">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className="max-w-4xl"
            >
              <div className="flex items-center space-x-4 mb-6">
                <span className="text-6xl">üé®</span>
                <div>
                  <h1 className="text-5xl font-bold mb-2">{galleryInfo.name}</h1>
                  <p className="text-xl opacity-90">{galleryInfo.description}</p>
                </div>
              </div>
              
              <div className="grid md:grid-cols-3 gap-6 mt-8">
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">‡§∏‡•ç‡§•‡§æ‡§™‡§®‡§æ</h3>
                  <p className="text-purple-200">{galleryInfo.established}</p>
                </div>
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ</h3>
                  <p className="text-purple-200">{galleryInfo.speciality}</p>
                </div>
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">‡§∏‡•ç‡§•‡§æ‡§®</h3>
                  <p className="text-purple-200">{galleryInfo.location}</p>
                </div>
              </div>
            </motion.div>
          </div>
        </section>

        {/* Navigation Breadcrumb */}
        <div className="bg-white border-b">
          <div className="container mx-auto px-6 py-4">
            <nav className="text-sm text-gray-600">
              <Link to="/" className="hover:text-emerald-600">‡§π‡•ã‡§Æ</Link>
              <span className="mx-2">‚Ä∫</span>
              <Link to="/markets" className="hover:text-emerald-600">‡§¨‡§æ‡§ú‡§æ‡§∞</Link>
              <span className="mx-2">‚Ä∫</span>
              <Link to="/markets/colaba-causeway" className="hover:text-emerald-600">‡§ï‡•ã‡§≤‡§æ‡§¨‡§æ ‡§ï‡•â‡§ú‡§º‡§µ‡•á</Link>
              <span className="mx-2">‚Ä∫</span>
              <span className="text-gray-900">‡§Ü‡§∞‡•ç‡§ü ‡§ó‡•à‡§≤‡§∞‡•Ä</span>
            </nav>
          </div>
        </div>

        {/* Current Exhibitions */}
        <section className="py-12 bg-indigo-50">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§™‡•ç‡§∞‡§¶‡§∞‡•ç‡§∂‡§®‡•Ä</h2>
            <div className="grid md:grid-cols-2 gap-8">
              {currentExhibitions.map((exhibition, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-200"
                >
                  <div className="flex justify-between items-start mb-4">
                    <h3 className="text-xl font-bold text-gray-900">{exhibition.title}</h3>
                    <span className="bg-indigo-100 text-indigo-800 text-xs px-2 py-1 rounded-full">
                      {exhibition.type}
                    </span>
                  </div>
                  <p className="text-gray-600 mb-2"><strong>‡§ï‡§≤‡§æ‡§ï‡§æ‡§∞:</strong> {exhibition.artist}</p>
                  <p className="text-gray-600 mb-2"><strong>‡§•‡•Ä‡§Æ:</strong> {exhibition.theme}</p>
                  <p className="text-gray-600 mb-2"><strong>‡§Ö‡§µ‡§ß‡§ø:</strong> {exhibition.duration}</p>
                  <p className="text-gray-600 mb-4"><strong>‡§ï‡§≤‡§æ‡§ï‡•É‡§§‡§ø‡§Ø‡§æ‡§Ç:</strong> {exhibition.artworks}</p>
                  <button className="bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition-colors duration-200">
                    ‡§™‡•ç‡§∞‡§¶‡§∞‡•ç‡§∂‡§®‡•Ä ‡§¶‡•á‡§ñ‡•á‡§Ç
                  </button>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Categories Section */}
        <section className="py-8 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-2xl font-bold text-gray-900 mb-6">‡§ï‡§≤‡§æ ‡§∂‡•ç‡§∞‡•á‡§£‡§ø‡§Ø‡§æ‡§Ç</h2>
            <div className="flex flex-wrap gap-4">
              {artCategories.map((category) => (
                <button
                  key={category.id}
                  onClick={() => handleCategoryChange(category.id)}
                  className={`flex items-center space-x-2 px-4 py-2 rounded-full transition-colors duration-200 ${
                    activeCategory === category.id
                      ? 'bg-indigo-600 text-white'
                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                  }`}
                >
                  <span>{category.icon}</span>
                  <span>{category.name}</span>
                </button>
              ))}
            </div>
          </div>
        </section>

        {/* Featured Artists */}
        <section className="py-16 bg-gradient-to-r from-purple-100 to-indigo-100">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§™‡•ç‡§∞‡§∏‡§ø‡§¶‡•ç‡§ß ‡§ï‡§≤‡§æ‡§ï‡§æ‡§∞</h2>
            <div className="grid md:grid-cols-3 gap-8">
              {featuredArtists.map((artist, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, scale: 0.9 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-white rounded-lg shadow-lg p-6 text-center hover:shadow-xl transition-shadow duration-200"
                >
                  <div className="text-4xl mb-4">üë®‚Äçüé®</div>
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{artist.name}</h3>
                  <div className="space-y-2 text-sm text-gray-600 mb-4">
                    <p><strong>‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ:</strong> {artist.specialty}</p>
                    <p><strong>‡§∂‡•à‡§≤‡•Ä:</strong> {artist.style}</p>
                    <p><strong>‡§Ö‡§®‡•Å‡§≠‡§µ:</strong> {artist.experience}</p>
                    <p><strong>‡§â‡§™‡§≤‡§¨‡•ç‡§ß‡§ø:</strong> {artist.achievements}</p>
                    <p><strong>‡§ï‡§≤‡§æ‡§ï‡•É‡§§‡§ø‡§Ø‡§æ‡§Ç:</strong> {artist.artworks}</p>
                  </div>
                  <button className="bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition-colors duration-200">
                    ‡§ï‡§≤‡§æ‡§ï‡•É‡§§‡§ø‡§Ø‡§æ‡§Ç ‡§¶‡•á‡§ñ‡•á‡§Ç
                  </button>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Art Styles */}
        <section className="py-16 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ï‡§≤‡§æ ‡§∂‡•à‡§≤‡§ø‡§Ø‡§æ‡§Ç</h2>
            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
              {artStyles.map((style, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-gradient-to-br from-indigo-100 to-purple-100 rounded-lg p-6 text-center hover:shadow-lg transition-shadow duration-200"
                >
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{style.style}</h3>
                  <p className="text-indigo-700 font-medium mb-3">{style.origin}</p>
                  <p className="text-gray-600 text-sm">{style.description}</p>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Products Section */}
        {loading ? (
          <div className="flex justify-center py-12">
            <LoadingSpinner size="large" text="‡§ï‡§≤‡§æ‡§ï‡•É‡§§‡§ø‡§Ø‡§æ‡§Ç ‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à‡§Ç..." />
          </div>
        ) : (
          <section className="py-12 bg-gray-50">
            <div className="container mx-auto px-6">
              <h2 className="text-3xl font-bold text-gray-900 mb-8">
                {activeCategory === 'all' ? '‡§∏‡§≠‡•Ä ‡§ï‡§≤‡§æ‡§ï‡•É‡§§‡§ø‡§Ø‡§æ‡§Ç' : artCategories.find(cat => cat.id === activeCategory)?.name}
              </h2>
              
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                {filteredArtworks.map((artwork) => (
                  <ProductCard
                    key={artwork.id}
                    product={artwork}
                    onAddToCart={() => handleAddToCart(artwork)}
                    onAddToWishlist={() => handleAddToWishlist(artwork)}
                    showArtistBadge={true}
                    showStyleBadge={true}
                    showAuthenticityBadge={true}
                  />
                ))}
              </div>

              {filteredArtworks.length === 0 && (
                <div className="text-center py-12">
                  <div className="text-6xl mb-4">üé®</div>
                  <h3 className="text-xl font-semibold text-gray-900 mb-2">‡§á‡§∏ ‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§Æ‡•á‡§Ç ‡§ï‡•ã‡§à ‡§ï‡§≤‡§æ‡§ï‡•É‡§§‡§ø ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡•Ä</h3>
                  <p className="text-gray-600">‡§ï‡•É‡§™‡§Ø‡§æ ‡§¶‡•Ç‡§∏‡§∞‡•Ä ‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§ï‡§æ ‡§ö‡§Ø‡§® ‡§ï‡§∞‡•á‡§Ç</p>
                </div>
              )}
            </div>
          </section>
        )}

        {/* Art Collection Tips */}
        <section className="py-16 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§ï‡§≤‡§æ ‡§∏‡§Ç‡§ó‡•ç‡§∞‡§π ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä</h2>
            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
              <div className="text-center">
                <div className="text-4xl mb-4">üëÅÔ∏è</div>
                <h3 className="text-xl