// Mysore Silk Emporium Component for Devaraja Market - Bharatshala Platform
import React, { useState, useEffect } from 'react';
import { Helmet } from 'react-helmet-async';
import { Link } from 'react-router-dom';
import { motion } from 'framer-motion';
import ProductCard from '../../components/ProductCard';
import LoadingSpinner from '../../components/LoadingSpinner';
import { useAnalytics } from '../../analytics';
import { useCart } from '../../hooks/useCart';
import { useWishlist } from '../../hooks/useWishlist';
import apiService from '../../apiService';

const MysoresilkEmporium = () => {
  const { trackEvent, trackPageView } = useAnalytics();
  const { addToCart } = useCart();
  const { addToWishlist } = useWishlist();

  const [silkProducts, setSilkProducts] = useState([]);
  const [weavers, setWeavers] = useState([]);
  const [loading, setLoading] = useState(true);
  const [activeCategory, setActiveCategory] = useState('all');

  const emporiumInfo = {
    name: '‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§è‡§Æ‡•ç‡§™‡•ã‡§∞‡§ø‡§Ø‡§Æ',
    nameEn: 'Mysore Silk Emporium',
    description: '‡§µ‡§ø‡§∂‡•ç‡§µ ‡§™‡•ç‡§∞‡§∏‡§ø‡§¶‡•ç‡§ß ‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§ï‡§æ ‡§ò‡§∞ - ‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§¨‡•Å‡§®‡§æ‡§à ‡§î‡§∞ ‡§∂‡§æ‡§π‡•Ä ‡§™‡§∞‡§Ç‡§™‡§∞‡§æ',
    established: '1932',
    speciality: '‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§∏‡§æ‡§°‡§º‡§ø‡§Ø‡§æ‡§Ç',
    location: '‡§¶‡•á‡§µ‡§∞‡§æ‡§ú ‡§Æ‡§æ‡§∞‡•ç‡§ï‡•á‡§ü, ‡§Æ‡•à‡§∏‡•Ç‡§∞',
    heroImage: '/images/markets/devaraja-silk.jpg'
  };

  const silkCategories = [
    { id: 'all', name: '‡§∏‡§≠‡•Ä ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§â‡§§‡•ç‡§™‡§æ‡§¶', icon: 'ü•ª' },
    { id: 'sarees', name: '‡§∏‡§æ‡§°‡§º‡§ø‡§Ø‡§æ‡§Ç', icon: 'ü•ª' },
    { id: 'dress-materials', name: '‡§°‡•ç‡§∞‡•á‡§∏ ‡§Æ‡§ü‡•á‡§∞‡§ø‡§Ø‡§≤', icon: 'üßµ' },
    { id: 'dupattas', name: '‡§¶‡•Å‡§™‡§ü‡•ç‡§ü‡•á', icon: 'üß£' },
    { id: 'fabrics', name: '‡§´‡•à‡§¨‡•ç‡§∞‡§ø‡§ï‡•ç‡§∏', icon: 'ü™°' },
    { id: 'blouse-pieces', name: '‡§¨‡•ç‡§≤‡§æ‡§â‡§ú ‡§™‡•Ä‡§∏', icon: 'üëö' },
    { id: 'accessories', name: '‡§è‡§ï‡•ç‡§∏‡•á‡§∏‡§∞‡•Ä‡§ú', icon: 'üëú' }
  ];

  const featuredSilks = [
    {
      name: '‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§™‡•à‡§≤‡•á‡§∏ ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§∏‡§æ‡§°‡§º‡•Ä',
      description: '‡§π‡§∏‡•ç‡§§‡§®‡§ø‡§∞‡•ç‡§Æ‡§ø‡§§ ‡§ú‡§∞‡•Ä ‡§µ‡§∞‡•ç‡§ï ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∂‡§æ‡§π‡•Ä ‡§°‡§ø‡§ú‡§æ‡§á‡§®',
      price: '‚Çπ25,000',
      weight: '850 ‡§ó‡•ç‡§∞‡§æ‡§Æ',
      weave: '‡§ü‡•ç‡§∞‡•á‡§°‡§ø‡§∂‡§®‡§≤ ‡§π‡•à‡§Ç‡§°‡§≤‡•Ç‡§Æ',
      zari: '‡§∂‡•Å‡§¶‡•ç‡§ß ‡§ó‡•ã‡§≤‡•ç‡§° ‡§ú‡§∞‡•Ä',
      pattern: '‡§™‡•à‡§≤‡•á‡§∏ ‡§Æ‡•ã‡§ü‡§ø‡§´‡•ç‡§∏',
      vendor: '‡§∞‡§æ‡§ú ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§µ‡•Ä‡§µ‡§∞‡•ç‡§∏'
    },
    {
      name: '‡§ï‡•ç‡§∞‡•á‡§™ ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§∏‡§æ‡§°‡§º‡•Ä',
      description: '‡§Æ‡•â‡§°‡§∞‡•ç‡§® ‡§´‡§ø‡§®‡§ø‡§∂ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ü‡•ç‡§∞‡•á‡§°‡§ø‡§∂‡§®‡§≤ ‡§™‡•à‡§ü‡§∞‡•ç‡§®',
      price: '‚Çπ8,500',
      weight: '450 ‡§ó‡•ç‡§∞‡§æ‡§Æ',
      weave: '‡§ï‡•ç‡§∞‡•á‡§™ ‡§µ‡•Ä‡§µ',
      zari: '‡§∏‡§ø‡§≤‡•ç‡§µ‡§∞ ‡§ú‡§∞‡•Ä',
      pattern: '‡§´‡•ç‡§≤‡•ã‡§∞‡§≤ ‡§¨‡•â‡§∞‡•ç‡§°‡§∞',
      vendor: '‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§µ‡•Ä‡§µ‡§∞‡•ç‡§∏ ‡§ó‡§ø‡§≤‡•ç‡§°'
    },
    {
      name: '‡§ï‡§Ç‡§ú‡•Ä‡§µ‡§∞‡§Æ ‡§∏‡•ç‡§ü‡§æ‡§á‡§≤ ‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§∏‡§ø‡§≤‡•ç‡§ï',
      description: '‡§ï‡§Ç‡§ú‡•Ä‡§µ‡§∞‡§Æ ‡§§‡§ï‡§®‡•Ä‡§ï ‡§Æ‡•á‡§Ç ‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§∏‡§ø‡§≤‡•ç‡§ï',
      price: '‚Çπ18,000',
      weight: '720 ‡§ó‡•ç‡§∞‡§æ‡§Æ',
      weave: '‡§ï‡§Ç‡§ú‡•Ä‡§µ‡§∞‡§Æ ‡§∏‡•ç‡§ü‡§æ‡§á‡§≤',
      zari: '‡§ó‡•ã‡§≤‡•ç‡§° ‡§è‡§Ç‡§° ‡§∏‡§ø‡§≤‡•ç‡§µ‡§∞ ‡§Æ‡§ø‡§ï‡•ç‡§∏',
      pattern: '‡§ü‡•á‡§Æ‡•ç‡§™‡§≤ ‡§¨‡•â‡§∞‡•ç‡§°‡§∞',
      vendor: '‡§π‡•á‡§∞‡§ø‡§ü‡•á‡§ú ‡§µ‡•Ä‡§µ‡§∞‡•ç‡§∏'
    }
  ];

  const masterWeavers = [
    {
      name: '‡§∞‡§æ‡§Æ‡§Ø‡•ç‡§Ø‡§æ ‡§Æ‡§æ‡§∏‡•ç‡§ü‡§∞',
      experience: '45+ ‡§µ‡§∞‡•ç‡§∑',
      specialty: '‡§∞‡•â‡§Ø‡§≤ ‡§™‡•à‡§≤‡•á‡§∏ ‡§°‡§ø‡§ú‡§æ‡§á‡§®‡•ç‡§∏',
      awards: '‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø ‡§∂‡§ø‡§≤‡•ç‡§™ ‡§™‡•Å‡§∞‡§∏‡•ç‡§ï‡§æ‡§∞',
      signature: '‡§ó‡•ã‡§≤‡•ç‡§° ‡§ú‡§∞‡•Ä ‡§µ‡§∞‡•ç‡§ï',
      apprentices: 25
    },
    {
      name: '‡§≤‡§ï‡•ç‡§∑‡•ç‡§Æ‡•Ä ‡§¶‡•á‡§µ‡•Ä',
      experience: '35+ ‡§µ‡§∞‡•ç‡§∑',
      specialty: '‡§´‡•ç‡§≤‡•ã‡§∞‡§≤ ‡§™‡•à‡§ü‡§∞‡•ç‡§®‡•ç‡§∏',
      awards: '‡§ï‡§∞‡•ç‡§®‡§æ‡§ü‡§ï ‡§∞‡§æ‡§ú‡•ç‡§Ø ‡§™‡•Å‡§∞‡§∏‡•ç‡§ï‡§æ‡§∞',
      signature: '‡§°‡•á‡§≤‡§ø‡§ï‡•á‡§ü ‡§Æ‡•ã‡§ü‡§ø‡§´‡•ç‡§∏',
      apprentices: 18
    },
    {
      name: '‡§®‡§æ‡§ó‡§∞‡§æ‡§ú ‡§µ‡•Ä‡§µ‡§∞',
      experience: '40+ ‡§µ‡§∞‡•ç‡§∑',
      specialty: '‡§Æ‡•â‡§°‡§∞‡•ç‡§® ‡§´‡•ç‡§Ø‡•Ç‡§ú‡§® ‡§°‡§ø‡§ú‡§æ‡§á‡§®‡•ç‡§∏',
      awards: '‡§∂‡§ø‡§≤‡•ç‡§™ ‡§ó‡•Å‡§∞‡•Å ‡§∏‡§Æ‡•ç‡§Æ‡§æ‡§®',
      signature: '‡§ï‡§Ç‡§ü‡•á‡§Ç‡§™‡§∞‡§∞‡•Ä ‡§™‡•à‡§ü‡§∞‡•ç‡§®‡•ç‡§∏',
      apprentices: 22
    }
  ];

  const silkQualities = [
    { quality: '‡§™‡•ç‡§Ø‡•ã‡§∞ ‡§Æ‡§≤‡•ç‡§¨‡•á‡§∞‡•Ä ‡§∏‡§ø‡§≤‡•ç‡§ï', description: '‡§∂‡•Å‡§¶‡•ç‡§ß ‡§Æ‡§≤‡•ç‡§¨‡•á‡§∞‡•Ä ‡§ï‡•ã‡§ï‡•Ç‡§® ‡§∏‡•á ‡§®‡§ø‡§∞‡•ç‡§Æ‡§ø‡§§', durability: '25+ ‡§µ‡§∞‡•ç‡§∑' },
    { quality: '‡§π‡•à‡§Ç‡§°‡§≤‡•Ç‡§Æ ‡§µ‡•Ä‡§µ‡§®', description: '‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§π‡§æ‡§• ‡§ï‡•Ä ‡§ï‡§∞‡§ò‡•á ‡§™‡§∞ ‡§¨‡•Å‡§®‡•Ä ‡§ó‡§à', uniqueness: '100% ‡§π‡§∏‡•ç‡§§‡§®‡§ø‡§∞‡•ç‡§Æ‡§ø‡§§' },
    { quality: '‡§®‡•á‡§ö‡•Å‡§∞‡§≤ ‡§°‡§æ‡§à‡§Ç‡§ó', description: '‡§™‡•ç‡§∞‡§æ‡§ï‡•É‡§§‡§ø‡§ï ‡§∞‡§Ç‡§ó‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó', colorfastness: '‡§´‡•á‡§° ‡§∞‡•á‡§∏‡§ø‡§∏‡•ç‡§ü‡•á‡§Ç‡§ü' },
    { quality: '‡§ú‡§∞‡•Ä ‡§µ‡§∞‡•ç‡§ï', description: '‡§Ö‡§∏‡§≤‡•Ä ‡§∏‡•ã‡§®‡•á-‡§ö‡§æ‡§Ç‡§¶‡•Ä ‡§ï‡§æ ‡§ß‡§æ‡§ó‡§æ', authenticity: '‡§ó‡§µ‡§∞‡•ç‡§®‡§Æ‡•á‡§Ç‡§ü ‡§∏‡§∞‡•ç‡§ü‡§ø‡§´‡§æ‡§á‡§°' }
  ];

  const careInstructions = [
    { instruction: '‡§°‡•ç‡§∞‡§æ‡§à ‡§ï‡•ç‡§≤‡•Ä‡§®‡§ø‡§Ç‡§ó', description: '‡§ï‡•á‡§µ‡§≤ ‡§™‡•ç‡§∞‡•ã‡§´‡•á‡§∂‡§®‡§≤ ‡§°‡•ç‡§∞‡§æ‡§à ‡§ï‡•ç‡§≤‡•Ä‡§®‡§∞‡•ç‡§∏ ‡§∏‡•á ‡§ß‡•Å‡§≤‡§µ‡§æ‡§è‡§Ç' },
    { instruction: '‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§ú', description: '‡§Æ‡§∏‡•ç‡§≤‡§ø‡§® ‡§ï‡§™‡§°‡§º‡•á ‡§Æ‡•á‡§Ç ‡§≤‡§™‡•á‡§ü‡§ï‡§∞ ‡§∞‡§ñ‡•á‡§Ç' },
    { instruction: '‡§á‡§∏‡•ç‡§§‡•ç‡§∞‡•Ä', description: '‡§ï‡§Æ ‡§ó‡§∞‡•ç‡§Æ‡•Ä ‡§™‡§∞ ‡§∞‡§ø‡§µ‡§∞‡•ç‡§∏ ‡§∏‡§æ‡§á‡§° ‡§∏‡•á ‡§á‡§∏‡•ç‡§§‡•ç‡§∞‡•Ä ‡§ï‡§∞‡•á‡§Ç' },
    { instruction: '‡§®‡§Æ‡•Ä ‡§∏‡•á ‡§¨‡§ö‡§æ‡§µ', description: '‡§®‡§Æ‡•Ä ‡§î‡§∞ ‡§∏‡•Ä‡§ß‡•Ä ‡§ß‡•Ç‡§™ ‡§∏‡•á ‡§¨‡§ö‡§æ‡§ï‡§∞ ‡§∞‡§ñ‡•á‡§Ç' }
  ];

  useEffect(() => {
    trackPageView('devaraja_mysore_silk_emporium');
    loadEmporiumData();
  }, []);

  const loadEmporiumData = async () => {
    try {
      setLoading(true);
      
      const [productsResponse, weaversResponse] = await Promise.all([
        apiService.get('/markets/devaraja-market/mysore-silk-emporium/products'),
        apiService.get('/markets/devaraja-market/mysore-silk-emporium/weavers')
      ]);

      if (productsResponse.success) {
        setSilkProducts(productsResponse.data);
      }

      if (weaversResponse.success) {
        setWeavers(weaversResponse.data);
      }
    } catch (error) {
      console.error('Failed to load emporium data:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleCategoryChange = (category) => {
    setActiveCategory(category);
    trackEvent('silk_category_selected', {
      market: 'devaraja_market',
      category
    });
  };

  const handleAddToCart = async (product) => {
    const result = await addToCart(product, 1);
    if (result.success) {
      trackEvent('add_to_cart_silk_emporium', {
        productId: product.id,
        market: 'devaraja_market',
        weaver: product.weaver
      });
    }
  };

  const handleAddToWishlist = async (product) => {
    const result = await addToWishlist(product);
    if (result.success) {
      trackEvent('add_to_wishlist_silk_emporium', {
        productId: product.id,
        market: 'devaraja_market'
      });
    }
  };

  const filteredProducts = activeCategory === 'all' 
    ? silkProducts 
    : silkProducts.filter(product => product.category === activeCategory);

  return (
    <>
      <Helmet>
        <title>{emporiumInfo.name} - ‡§≠‡§æ‡§∞‡§§‡§∂‡§æ‡§≤‡§æ | ‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§ï‡•Ä ‡§™‡•ç‡§∞‡§∏‡§ø‡§¶‡•ç‡§ß ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§∏‡§æ‡§°‡§º‡§ø‡§Ø‡§æ‡§Ç</title>
        <meta name="description" content="‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§è‡§Æ‡•ç‡§™‡•ã‡§∞‡§ø‡§Ø‡§Æ ‡§∏‡•á ‡§µ‡§ø‡§∂‡•ç‡§µ ‡§™‡•ç‡§∞‡§∏‡§ø‡§¶‡•ç‡§ß ‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§∏‡§æ‡§°‡§º‡§ø‡§Ø‡§æ‡§Ç, ‡§π‡•à‡§Ç‡§°‡§≤‡•Ç‡§Æ ‡§´‡•à‡§¨‡•ç‡§∞‡§ø‡§ï‡•ç‡§∏ ‡§î‡§∞ ‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§ú‡§∞‡•Ä ‡§µ‡§∞‡•ç‡§ï‡•§ ‡§∂‡•Å‡§¶‡•ç‡§ß ‡§Æ‡§≤‡•ç‡§¨‡•á‡§∞‡•Ä ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡•§" />
        <meta name="keywords" content="‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§∏‡§ø‡§≤‡•ç‡§ï, ‡§¶‡•á‡§µ‡§∞‡§æ‡§ú ‡§Æ‡§æ‡§∞‡•ç‡§ï‡•á‡§ü, ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§∏‡§æ‡§°‡§º‡•Ä, ‡§π‡•à‡§Ç‡§°‡§≤‡•Ç‡§Æ, ‡§ú‡§∞‡•Ä ‡§µ‡§∞‡•ç‡§ï, ‡§ï‡§∞‡•ç‡§®‡§æ‡§ü‡§ï ‡§∏‡§ø‡§≤‡•ç‡§ï, ‡§Æ‡§≤‡•ç‡§¨‡•á‡§∞‡•Ä ‡§∏‡§ø‡§≤‡•ç‡§ï" />
        <link rel="canonical" href="https://bharatshala.com/markets/devaraja-market/mysore-silk-emporium" />
      </Helmet>

      <div className="min-h-screen bg-gray-50">
        {/* Hero Section */}
        <section className="relative bg-gradient-to-r from-purple-600 to-pink-600 text-white py-16">
          <div className="absolute inset-0 bg-black/40"></div>
          <div 
            className="absolute inset-0 bg-cover bg-center opacity-30"
            style={{ backgroundImage: `url(${emporiumInfo.heroImage})` }}
          ></div>
          
          <div className="container mx-auto px-6 relative z-10">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className="max-w-4xl"
            >
              <div className="flex items-center space-x-4 mb-6">
                <span className="text-6xl">ü•ª</span>
                <div>
                  <h1 className="text-5xl font-bold mb-2">{emporiumInfo.name}</h1>
                  <p className="text-xl opacity-90">{emporiumInfo.description}</p>
                </div>
              </div>
              
              <div className="grid md:grid-cols-3 gap-6 mt-8">
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">‡§∏‡•ç‡§•‡§æ‡§™‡§®‡§æ</h3>
                  <p className="text-pink-200">{emporiumInfo.established}</p>
                </div>
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ</h3>
                  <p className="text-pink-200">{emporiumInfo.speciality}</p>
                </div>
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">‡§∏‡•ç‡§•‡§æ‡§®</h3>
                  <p className="text-pink-200">{emporiumInfo.location}</p>
                </div>
              </div>
            </motion.div>
          </div>
        </section>

        {/* Navigation Breadcrumb */}
        <div className="bg-white border-b">
          <div className="container mx-auto px-6 py-4">
            <nav className="text-sm text-gray-600">
              <Link to="/" className="hover:text-emerald-600">‡§π‡•ã‡§Æ</Link>
              <span className="mx-2">‚Ä∫</span>
              <Link to="/markets" className="hover:text-emerald-600">‡§¨‡§æ‡§ú‡§æ‡§∞</Link>
              <span className="mx-2">‚Ä∫</span>
              <Link to="/markets/devaraja-market" className="hover:text-emerald-600">‡§¶‡•á‡§µ‡§∞‡§æ‡§ú ‡§Æ‡§æ‡§∞‡•ç‡§ï‡•á‡§ü</Link>
              <span className="mx-2">‚Ä∫</span>
              <span className="text-gray-900">‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§è‡§Æ‡•ç‡§™‡•ã‡§∞‡§ø‡§Ø‡§Æ</span>
            </nav>
          </div>
        </div>

        {/* Featured Silks */}
        <section className="py-12 bg-purple-50">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§™‡•ç‡§∞‡•Ä‡§Æ‡§ø‡§Ø‡§Æ ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§ï‡§≤‡•á‡§ï‡•ç‡§∂‡§®</h2>
            <div className="grid md:grid-cols-3 gap-8">
              {featuredSilks.map((silk, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-200"
                >
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{silk.name}</h3>
                  <p className="text-gray-600 mb-3">{silk.description}</p>
                  <div className="mb-3">
                    <span className="text-2xl font-bold text-purple-600">{silk.price}</span>
                  </div>
                  <div className="space-y-2 text-sm text-gray-600 mb-4">
                    <p><strong>‡§µ‡§ú‡§®:</strong> {silk.weight}</p>
                    <p><strong>‡§¨‡•Å‡§®‡§æ‡§à:</strong> {silk.weave}</p>
                    <p><strong>‡§ú‡§∞‡•Ä:</strong> {silk.zari}</p>
                    <p><strong>‡§™‡•à‡§ü‡§∞‡•ç‡§®:</strong> {silk.pattern}</p>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-sm text-gray-500">{silk.vendor}</span>
                    <button className="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 transition-colors duration-200">
                      ‡§¶‡•á‡§ñ‡•á‡§Ç
                    </button>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Categories Section */}
        <section className="py-8 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-2xl font-bold text-gray-900 mb-6">‡§∏‡§ø‡§≤‡•ç‡§ï ‡§∂‡•ç‡§∞‡•á‡§£‡§ø‡§Ø‡§æ‡§Ç</h2>
            <div className="flex flex-wrap gap-4">
              {silkCategories.map((category) => (
                <button
                  key={category.id}
                  onClick={() => handleCategoryChange(category.id)}
                  className={`flex items-center space-x-2 px-4 py-2 rounded-full transition-colors duration-200 ${
                    activeCategory === category.id
                      ? 'bg-purple-600 text-white'
                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                  }`}
                >
                  <span>{category.icon}</span>
                  <span>{category.name}</span>
                </button>
              ))}
            </div>
          </div>
        </section>

        {/* Master Weavers */}
        <section className="py-16 bg-gradient-to-r from-purple-100 to-pink-100">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§Æ‡§æ‡§∏‡•ç‡§ü‡§∞ ‡§µ‡•Ä‡§µ‡§∞‡•ç‡§∏</h2>
            <div className="grid md:grid-cols-3 gap-8">
              {masterWeavers.map((weaver, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, scale: 0.9 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-white rounded-lg shadow-lg p-6 text-center hover:shadow-xl transition-shadow duration-200"
                >
                  <div className="text-4xl mb-4">üë®‚Äçüé®</div>
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{weaver.name}</h3>
                  <div className="space-y-2 text-sm text-gray-600 mb-4">
                    <p><strong>‡§Ö‡§®‡•Å‡§≠‡§µ:</strong> {weaver.experience}</p>
                    <p><strong>‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ:</strong> {weaver.specialty}</p>
                    <p><strong>‡§∏‡§ø‡§ó‡•ç‡§®‡•á‡§ö‡§∞:</strong> {weaver.signature}</p>
                    <p><strong>‡§™‡•Å‡§∞‡§∏‡•ç‡§ï‡§æ‡§∞:</strong> {weaver.awards}</p>
                    <p><strong>‡§∂‡§ø‡§∑‡•ç‡§Ø:</strong> {weaver.apprentices}</p>
                  </div>
                  <button className="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 transition-colors duration-200">
                    ‡§ï‡•É‡§§‡§ø‡§Ø‡§æ‡§Ç ‡§¶‡•á‡§ñ‡•á‡§Ç
                  </button>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Silk Qualities */}
        <section className="py-16 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§ï‡•Ä ‡§ó‡•Å‡§£‡§µ‡§§‡•ç‡§§‡§æ</h2>
            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
              {silkQualities.map((quality, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-gradient-to-br from-purple-50 to-pink-50 rounded-lg p-6 text-center hover:shadow-lg transition-shadow duration-200"
                >
                  <h3 className="text-lg font-bold text-gray-900 mb-3">{quality.quality}</h3>
                  <p className="text-gray-600 mb-3 text-sm">{quality.description}</p>
                  <p className="text-purple-700 font-medium text-sm">
                    {quality.durability || quality.uniqueness || quality.colorfastness || quality.authenticity}
                  </p>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Products Section */}
        {loading ? (
          <div className="flex justify-center py-12">
            <LoadingSpinner size="large" text="‡§∏‡§ø‡§≤‡•ç‡§ï ‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡•á ‡§π‡•à‡§Ç..." />
          </div>
        ) : (
          <section className="py-12 bg-gray-50">
            <div className="container mx-auto px-6">
              <h2 className="text-3xl font-bold text-gray-900 mb-8">
                {activeCategory === 'all' ? '‡§∏‡§≠‡•Ä ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§â‡§§‡•ç‡§™‡§æ‡§¶' : silkCategories.find(cat => cat.id === activeCategory)?.name}
              </h2>
              
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                {filteredProducts.map((product) => (
                  <ProductCard
                    key={product.id}
                    product={product}
                    onAddToCart={() => handleAddToCart(product)}
                    onAddToWishlist={() => handleAddToWishlist(product)}
                    showSilkQualityBadge={true}
                    showHandloomBadge={true}
                    showZariBadge={true}
                  />
                ))}
              </div>

              {filteredProducts.length === 0 && (
                <div className="text-center py-12">
                  <div className="text-6xl mb-4">ü•ª</div>
                  <h3 className="text-xl font-semibold text-gray-900 mb-2">‡§á‡§∏ ‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§Æ‡•á‡§Ç ‡§ï‡•ã‡§à ‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ</h3>
                  <p className="text-gray-600">‡§ï‡•É‡§™‡§Ø‡§æ ‡§¶‡•Ç‡§∏‡§∞‡•Ä ‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§ï‡§æ ‡§ö‡§Ø‡§® ‡§ï‡§∞‡•á‡§Ç</p>
                </div>
              )}
            </div>
          </section>
        )}

        {/* Care Instructions */}
        <section className="py-16 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§∏‡§ø‡§≤‡•ç‡§ï ‡§ï‡•Ä ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤</h2>
            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
              {careInstructions.map((instruction, index) => (
                <div key={index} className="text-center">
                  <div className="text-4xl mb-4">üß∫</div>
                  <h3 className="text-xl font-semibold mb-2">{instruction.instruction}</h3>
                  <p className="text-gray-600">{instruction.description}</p>
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* Heritage Section */}
        <section className="py-16 bg-gradient-to-r from-purple-600 to-pink-600 text-white">
          <div className="container mx-auto px-6 text-center">
            <h2 className="text-3xl font-bold mb-8">‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§ï‡•Ä ‡§µ‡§ø‡§∞‡§æ‡§∏‡§§</h2>
            <div className="max-w-4xl mx-auto">
              <p className="text-xl leading-relaxed mb-8">
                ‡§ü‡•Ä‡§™‡•Ç ‡§∏‡•Å‡§≤‡•ç‡§§‡§æ‡§® ‡§ï‡•á ‡§∏‡§Æ‡§Ø ‡§∏‡•á ‡§ö‡§≤‡•Ä ‡§Ü ‡§∞‡§π‡•Ä ‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§ï‡•Ä ‡§™‡§∞‡§Ç‡§™‡§∞‡§æ ‡§Ü‡§ú ‡§≠‡•Ä ‡§¶‡•á‡§µ‡§∞‡§æ‡§ú ‡§Æ‡§æ‡§∞‡•ç‡§ï‡•á‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•Ä‡§µ‡§ø‡§§ ‡§π‡•à‡•§ 
                ‡§Ø‡§π‡§æ‡§Å ‡§ï‡•Ä ‡§π‡§∞ ‡§∏‡§æ‡§°‡§º‡•Ä ‡§Æ‡•á‡§Ç ‡§¨‡•Å‡§®‡§æ ‡§π‡•à ‡§á‡§§‡§ø‡§π‡§æ‡§∏ ‡§î‡§∞ ‡§ï‡§æ‡§∞‡•Ä‡§ó‡§∞‡•Ä ‡§ï‡§æ ‡§Ö‡§®‡§Æ‡•ã‡§≤ ‡§ñ‡§ú‡§æ‡§®‡§æ‡•§ 
                ‡§µ‡§ø‡§∂‡•ç‡§µ ‡§™‡•ç‡§∞‡§∏‡§ø‡§¶‡•ç‡§ß ‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§ï‡•Ä ‡§Ø‡§π ‡§µ‡§ø‡§∞‡§æ‡§∏‡§§ ‡§™‡•Ä‡§¢‡§º‡§ø‡§Ø‡•ã‡§Ç ‡§∏‡•á ‡§∏‡§Ç‡§ú‡•ã‡§ï‡§∞ ‡§∞‡§ñ‡•Ä ‡§ó‡§à ‡§π‡•à‡•§
              </p>
              <div className="grid md:grid-cols-3 gap-8 mt-12">
                <div>
                  <div className="text-4xl mb-4">üìç</div>
                  <h3 className="text-xl font-semibold mb-2">‡§∏‡•ç‡§•‡§æ‡§®</h3>
                  <p>‡§¶‡•á‡§µ‡§∞‡§æ‡§ú ‡§Æ‡§æ‡§∞‡•ç‡§ï‡•á‡§ü, ‡§Æ‡•à‡§∏‡•Ç‡§∞, ‡§ï‡§∞‡•ç‡§®‡§æ‡§ü‡§ï</p>
                </div>
                <div>
                  <div className="text-4xl mb-4">üïí</div>
                  <h3 className="text-xl font-semibold mb-2">‡§∏‡§Æ‡§Ø</h3>
                  <p>‡§∏‡•Å‡§¨‡§π 10:00 - ‡§∂‡§æ‡§Æ 8:00 (‡§∏‡•ã‡§Æ‡§µ‡§æ‡§∞ ‡§¨‡§Ç‡§¶)</p>
                </div>
                <div>
                  <div className="text-4xl mb-4">üëë</div>
                  <h3 className="text-xl font-semibold mb-2">‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ</h3>
                  <p>‡§∞‡•â‡§Ø‡§≤ ‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§∏‡§ø‡§≤‡•ç‡§ï ‡§î‡§∞ ‡§π‡•à‡§Ç‡§°‡§≤‡•Ç‡§Æ</p>
                </div>
              </div>
            </div>
          </div>
        </section>
      </div>
    </>
  );
};

export default MysoresilkEmporium;