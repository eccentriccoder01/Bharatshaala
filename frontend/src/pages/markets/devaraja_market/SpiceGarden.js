// Spice Garden Component for Devaraja Market - Bharatshala Platform
import React, { useState, useEffect } from 'react';
import { Helmet } from 'react-helmet-async';
import { Link } from 'react-router-dom';
import { motion } from 'framer-motion';
import ProductCard from '../../components/ProductCard';
import LoadingSpinner from '../../components/LoadingSpinner';
import { useAnalytics } from '../../analytics';
import { useCart } from '../../hooks/useCart';
import { useWishlist } from '../../hooks/useWishlist';
import apiService from '../../apiService';

const SpiceGarden = () => {
  const { trackEvent, trackPageView } = useAnalytics();
  const { addToCart } = useCart();
  const { addToWishlist } = useWishlist();

  const [spices, setSpices] = useState([]);
  const [farmers, setFarmers] = useState([]);
  const [loading, setLoading] = useState(true);
  const [activeCategory, setActiveCategory] = useState('all');

  const gardenInfo = {
    name: '‡§¶‡•á‡§µ‡§∞‡§æ‡§ú ‡§Æ‡§æ‡§∞‡•ç‡§ï‡•á‡§ü ‡§∏‡•ç‡§™‡§æ‡§á‡§∏ ‡§ó‡§æ‡§∞‡•ç‡§°‡§®',
    nameEn: 'Devaraja Market Spice Garden',
    description: '‡§ï‡§∞‡•ç‡§®‡§æ‡§ü‡§ï ‡§ï‡•á ‡§ñ‡•Å‡§∂‡§¨‡•Ç‡§¶‡§æ‡§∞ ‡§Æ‡§∏‡§æ‡§≤‡•ã‡§Ç ‡§ï‡§æ ‡§¨‡§ó‡•Ä‡§ö‡§æ - ‡§´‡§æ‡§∞‡•ç‡§Æ ‡§∏‡•á ‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§ü ‡§´‡•ç‡§∞‡•á‡§∂ ‡§∏‡•ç‡§™‡§æ‡§á‡§∏‡•á‡§∏',
    established: '1960s',
    speciality: '‡§ï‡§∞‡•ç‡§®‡§æ‡§ü‡§ï ‡§∏‡•ç‡§™‡•á‡§∂‡§≤ ‡§Æ‡§∏‡§æ‡§≤‡•á, ‡§ë‡§∞‡•ç‡§ó‡•á‡§®‡§ø‡§ï ‡§∏‡•ç‡§™‡§æ‡§á‡§∏‡•á‡§∏',
    location: '‡§¶‡•á‡§µ‡§∞‡§æ‡§ú ‡§Æ‡§æ‡§∞‡•ç‡§ï‡•á‡§ü, ‡§Æ‡•à‡§∏‡•Ç‡§∞',
    heroImage: '/images/markets/devaraja-spice-garden.jpg'
  };

  const spiceCategories = [
    { id: 'all', name: '‡§∏‡§≠‡•Ä ‡§Æ‡§∏‡§æ‡§≤‡•á', icon: 'üå∂Ô∏è' },
    { id: 'karnataka-special', name: '‡§ï‡§∞‡•ç‡§®‡§æ‡§ü‡§ï ‡§∏‡•ç‡§™‡•á‡§∂‡§≤', icon: 'üèûÔ∏è' },
    { id: 'organic', name: '‡§ë‡§∞‡•ç‡§ó‡•á‡§®‡§ø‡§ï ‡§Æ‡§∏‡§æ‡§≤‡•á', icon: 'üåø' },
    { id: 'whole-spices', name: '‡§∏‡§æ‡§¨‡•Å‡§§ ‡§Æ‡§∏‡§æ‡§≤‡•á', icon: 'üå∞' },
    { id: 'powdered', name: '‡§™‡§ø‡§∏‡•á ‡§π‡•Å‡§è ‡§Æ‡§∏‡§æ‡§≤‡•á', icon: 'ü•Ñ' },
    { id: 'blends', name: '‡§Æ‡§∏‡§æ‡§≤‡§æ ‡§Æ‡§ø‡§∂‡•ç‡§∞‡§£', icon: 'üçõ' },
    { id: 'medicinal', name: '‡§î‡§∑‡§ß‡•Ä‡§Ø ‡§Æ‡§∏‡§æ‡§≤‡•á', icon: 'üíä' }
  ];

  const featuredSpices = [
    {
      name: '‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§∞‡§∏‡§Æ ‡§™‡§æ‡§â‡§°‡§∞',
      description: '‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§∏‡•ç‡§ü‡§æ‡§á‡§≤ ‡§∞‡§∏‡§Æ ‡§Æ‡§∏‡§æ‡§≤‡§æ',
      price: '‚Çπ180/250g',
      origin: '‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§∞‡•Ä‡§ú‡§®',
      ingredients: '‡§ß‡§®‡§ø‡§Ø‡§æ, ‡§ú‡•Ä‡§∞‡§æ, ‡§ï‡§æ‡§≤‡•Ä ‡§Æ‡§ø‡§∞‡•ç‡§ö, ‡§§‡•Å‡§µ‡§∞ ‡§¶‡§æ‡§≤',
      shelfLife: '12 ‡§Æ‡§π‡•Ä‡§®‡•á',
      specialty: '‡§´‡•ç‡§∞‡•á‡§∂‡§≤‡•Ä ‡§ó‡•ç‡§∞‡§æ‡§â‡§Ç‡§°',
      vendor: '‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§ü‡•ç‡§∞‡•á‡§°‡§ø‡§∂‡§®‡§≤ ‡§∏‡•ç‡§™‡§æ‡§á‡§∏‡•á‡§∏'
    },
    {
      name: '‡§ï‡•ã‡§°‡§æ‡§ó‡•Å ‡§¨‡•ç‡§≤‡•à‡§ï ‡§™‡•á‡§™‡§∞',
      description: '‡§ï‡•Ç‡§∞‡•ç‡§ó ‡§ï‡•á ‡§™‡§π‡§æ‡§°‡§º‡•ã‡§Ç ‡§∏‡•á ‡§§‡•á‡§ú ‡§ï‡§æ‡§≤‡•Ä ‡§Æ‡§ø‡§∞‡•ç‡§ö',
      price: '‚Çπ320/100g',
      origin: '‡§ï‡•ã‡§°‡§æ‡§ó‡•Å ‡§π‡§ø‡§≤‡•ç‡§∏',
      grade: '‡§™‡•ç‡§∞‡•Ä‡§Æ‡§ø‡§Ø‡§Æ ‡§ó‡•ç‡§∞‡•á‡§°',
      piperine: '7% + ‡§™‡§æ‡§á‡§™‡§∞‡§æ‡§á‡§® ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü',
      processing: '‡§∏‡§® ‡§°‡•ç‡§∞‡§æ‡§à‡§°',
      vendor: '‡§ï‡•ã‡§°‡§æ‡§ó‡•Å ‡§∏‡•ç‡§™‡§æ‡§á‡§∏ ‡§´‡§æ‡§∞‡•ç‡§Æ‡•ç‡§∏'
    },
    {
      name: '‡§¨‡§æ‡§Ø‡§¶‡§ó‡•Ä ‡§ö‡§ø‡§≤‡•Ä ‡§™‡§æ‡§â‡§°‡§∞',
      description: '‡§¨‡§æ‡§Ø‡§¶‡§ó‡•Ä ‡§ï‡•Ä ‡§™‡•ç‡§∞‡§∏‡§ø‡§¶‡•ç‡§ß ‡§≤‡§æ‡§≤ ‡§Æ‡§ø‡§∞‡•ç‡§ö',
      price: '‚Çπ240/250g',
      origin: '‡§¨‡§æ‡§Ø‡§¶‡§ó‡•Ä, ‡§ï‡§∞‡•ç‡§®‡§æ‡§ü‡§ï',
      scoville: '1,500-2,000 SHU',
      color: '‡§°‡•Ä‡§™ ‡§∞‡•á‡§°',
      texture: '‡§´‡§æ‡§á‡§® ‡§™‡§æ‡§â‡§°‡§∞',
      vendor: '‡§¨‡§æ‡§Ø‡§¶‡§ó‡•Ä ‡§ö‡§ø‡§≤‡•Ä ‡§™‡•ç‡§∞‡•ã‡§°‡•ç‡§Ø‡•Ç‡§∏‡§∞‡•ç‡§∏'
    }
  ];

  const localFarmers = [
    {
      name: '‡§∞‡§æ‡§ú‡•Ç ‡§∏‡•ç‡§™‡§æ‡§á‡§∏ ‡§´‡§æ‡§∞‡•ç‡§Æ‡§∞',
      experience: '25+ ‡§µ‡§∞‡•ç‡§∑',
      location: '‡§ï‡•ã‡§°‡§æ‡§ó‡•Å ‡§π‡§ø‡§≤‡•ç‡§∏',
      crops: '‡§ï‡§æ‡§≤‡•Ä ‡§Æ‡§ø‡§∞‡•ç‡§ö, ‡§á‡§≤‡§æ‡§Ø‡§ö‡•Ä, ‡§Ö‡§¶‡§∞‡§ï',
      farmSize: '15 ‡§è‡§ï‡§°‡§º',
      certification: '‡§ë‡§∞‡•ç‡§ó‡•á‡§®‡§ø‡§ï ‡§∏‡§∞‡•ç‡§ü‡§ø‡§´‡§æ‡§á‡§°'
    },
    {
      name: '‡§∏‡•Å‡§Æ‡§ø‡§§‡•ç‡§∞‡§æ ‡§Æ‡§∏‡§æ‡§≤‡§æ ‡§ó‡§æ‡§∞‡•ç‡§°‡§®',
      experience: '30+ ‡§µ‡§∞‡•ç‡§∑',
      location: '‡§ö‡§ø‡§ï‡§Æ‡§Ç‡§ó‡§≤‡•Ç‡§∞',
      crops: '‡§π‡§≤‡•ç‡§¶‡•Ä, ‡§ß‡§®‡§ø‡§Ø‡§æ, ‡§ú‡•Ä‡§∞‡§æ',
      farmSize: '20 ‡§è‡§ï‡§°‡§º',
      certification: '‡§®‡•á‡§ö‡•Å‡§∞‡§≤ ‡§´‡§æ‡§∞‡•ç‡§Æ‡§ø‡§Ç‡§ó'
    },
    {
      name: '‡§µ‡•á‡§Ç‡§ï‡§ü‡•á‡§∂ ‡§ö‡§ø‡§≤‡•Ä ‡§´‡§æ‡§∞‡•ç‡§Æ',
      experience: '20+ ‡§µ‡§∞‡•ç‡§∑',
      location: '‡§¨‡§æ‡§Ø‡§¶‡§ó‡•Ä',
      crops: '‡§≤‡§æ‡§≤ ‡§Æ‡§ø‡§∞‡•ç‡§ö, ‡§∏‡•Ç‡§ñ‡•Ä ‡§Æ‡§ø‡§∞‡•ç‡§ö',
      farmSize: '25 ‡§è‡§ï‡§°‡§º',
      certification: 'GAP ‡§∏‡§∞‡•ç‡§ü‡§ø‡§´‡§æ‡§á‡§°'
    }
  ];

  const spiceVarieties = [
    { spice: '‡§¨‡§æ‡§Ø‡§¶‡§ó‡•Ä ‡§ö‡§ø‡§≤‡•Ä', region: '‡§¨‡§æ‡§Ø‡§¶‡§ó‡•Ä', uniqueness: '‡§ï‡§Æ ‡§§‡•á‡§ú, ‡§¨‡•á‡§π‡§§‡§∞‡•Ä‡§® ‡§∞‡§Ç‡§ó' },
    { spice: '‡§∏‡§æ‡§ó‡§∞ ‡§ï‡§æ‡§≤‡•Ä ‡§Æ‡§ø‡§∞‡•ç‡§ö', region: '‡§∏‡§æ‡§ó‡§∞', uniqueness: '‡§π‡§æ‡§à ‡§™‡§æ‡§á‡§™‡§∞‡§æ‡§á‡§® ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü' },
    { spice: '‡§π‡§æ‡§∏‡§® ‡§π‡§≤‡•ç‡§¶‡•Ä', region: '‡§π‡§æ‡§∏‡§®', uniqueness: '‡§π‡§æ‡§à ‡§ï‡•ç‡§Ø‡•Ç‡§∞‡§ï‡•Å‡§Æ‡§ø‡§®' },
    { spice: '‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§ß‡§®‡§ø‡§Ø‡§æ', region: '‡§Æ‡•à‡§∏‡•Ç‡§∞', uniqueness: '‡§∏‡•ç‡§µ‡•Ä‡§ü ‡§Ö‡§∞‡•ã‡§Æ‡§æ' },
    { spice: '‡§∂‡§ø‡§Æ‡•ã‡§ó‡§æ ‡§Ö‡§¶‡§∞‡§ï', region: '‡§∂‡§ø‡§Æ‡•ã‡§ó‡§æ', uniqueness: '‡§´‡§æ‡§á‡§¨‡§∞ ‡§´‡•ç‡§∞‡•Ä' },
    { spice: '‡§ö‡§ø‡§ï‡§Æ‡§Ç‡§ó‡§≤‡•Ç‡§∞ ‡§á‡§≤‡§æ‡§Ø‡§ö‡•Ä', region: '‡§ö‡§ø‡§ï‡§Æ‡§Ç‡§ó‡§≤‡•Ç‡§∞', uniqueness: '‡§á‡§Ç‡§ü‡•á‡§Ç‡§∏ ‡§´‡•ç‡§≤‡•á‡§µ‡§∞' }
  ];

  const healthBenefits = [
    { spice: '‡§π‡§≤‡•ç‡§¶‡•Ä', benefits: ['‡§è‡§Ç‡§ü‡•Ä-‡§á‡§Ç‡§´‡•ç‡§≤‡•á‡§Æ‡•á‡§ü‡§∞‡•Ä', '‡§á‡§Æ‡•ç‡§Ø‡•Ç‡§®‡§ø‡§ü‡•Ä ‡§¨‡•Ç‡§∏‡•ç‡§ü‡§∞', '‡§è‡§Ç‡§ü‡•Ä‡§ë‡§ï‡•ç‡§∏‡•Ä‡§°‡•á‡§Ç‡§ü'] },
    { spice: '‡§ï‡§æ‡§≤‡•Ä ‡§Æ‡§ø‡§∞‡•ç‡§ö', benefits: ['‡§°‡§æ‡§á‡§ú‡•á‡§∂‡§®', '‡§Æ‡•á‡§ü‡§æ‡§¨‡•â‡§≤‡§ø‡§ú‡•ç‡§Æ', '‡§è‡§Ç‡§ü‡•Ä-‡§¨‡•à‡§ï‡•ç‡§ü‡•Ä‡§∞‡§ø‡§Ø‡§≤'] },
    { spice: '‡§Ö‡§¶‡§∞‡§ï', benefits: ['‡§®‡•â‡§ú‡§ø‡§Ø‡§æ ‡§∞‡§ø‡§≤‡•Ä‡§´', '‡§è‡§Ç‡§ü‡•Ä-‡§á‡§Ç‡§´‡•ç‡§≤‡•á‡§Æ‡•á‡§ü‡§∞‡•Ä', '‡§™‡•á‡§® ‡§∞‡§ø‡§≤‡•Ä‡§´'] },
    { spice: '‡§ß‡§®‡§ø‡§Ø‡§æ', benefits: ['‡§°‡§æ‡§á‡§ú‡•á‡§∏‡•ç‡§ü‡§ø‡§µ ‡§è‡§°', '‡§ï‡•ã‡§≤‡•á‡§∏‡•ç‡§ü‡•ç‡§∞‡•â‡§≤ ‡§ï‡§Ç‡§ü‡•ç‡§∞‡•ã‡§≤', '‡§¨‡•ç‡§≤‡§° ‡§∂‡•Å‡§ó‡§∞'] }
  ];

  useEffect(() => {
    trackPageView('devaraja_spice_garden');
    loadGardenData();
  }, []);

  const loadGardenData = async () => {
    try {
      setLoading(true);
      
      const [spicesResponse, farmersResponse] = await Promise.all([
        apiService.get('/markets/devaraja-market/spice-garden/spices'),
        apiService.get('/markets/devaraja-market/spice-garden/farmers')
      ]);

      if (spicesResponse.success) {
        setSpices(spicesResponse.data);
      }

      if (farmersResponse.success) {
        setFarmers(farmersResponse.data);
      }
    } catch (error) {
      console.error('Failed to load garden data:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleCategoryChange = (category) => {
    setActiveCategory(category);
    trackEvent('spice_garden_category_selected', {
      market: 'devaraja_market',
      category
    });
  };

  const handleAddToCart = async (product) => {
    const result = await addToCart(product, 1);
    if (result.success) {
      trackEvent('add_to_cart_spice_garden', {
        productId: product.id,
        market: 'devaraja_market',
        vendor: product.vendor
      });
    }
  };

  const handleAddToWishlist = async (product) => {
    const result = await addToWishlist(product);
    if (result.success) {
      trackEvent('add_to_wishlist_spice_garden', {
        productId: product.id,
        market: 'devaraja_market'
      });
    }
  };

  const filteredSpices = activeCategory === 'all' 
    ? spices 
    : spices.filter(spice => spice.category === activeCategory);

  return (
    <>
      <Helmet>
        <title>{gardenInfo.name} - ‡§≠‡§æ‡§∞‡§§‡§∂‡§æ‡§≤‡§æ | ‡§ï‡§∞‡•ç‡§®‡§æ‡§ü‡§ï ‡§ï‡•á ‡§§‡§æ‡§ú‡•á ‡§Æ‡§∏‡§æ‡§≤‡•á</title>
        <meta name="description" content="‡§¶‡•á‡§µ‡§∞‡§æ‡§ú ‡§Æ‡§æ‡§∞‡•ç‡§ï‡•á‡§ü ‡§∏‡•ç‡§™‡§æ‡§á‡§∏ ‡§ó‡§æ‡§∞‡•ç‡§°‡§® ‡§∏‡•á ‡§ï‡§∞‡•ç‡§®‡§æ‡§ü‡§ï ‡§ï‡•á ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§Æ‡§∏‡§æ‡§≤‡•á‡•§ ‡§¨‡§æ‡§Ø‡§¶‡§ó‡•Ä ‡§ö‡§ø‡§≤‡•Ä, ‡§ï‡•ã‡§°‡§æ‡§ó‡•Å ‡§™‡•á‡§™‡§∞, ‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§∞‡§∏‡§Æ ‡§™‡§æ‡§â‡§°‡§∞ ‡§î‡§∞ ‡§ë‡§∞‡•ç‡§ó‡•á‡§®‡§ø‡§ï ‡§∏‡•ç‡§™‡§æ‡§á‡§∏‡•á‡§∏‡•§" />
        <meta name="keywords" content="‡§ï‡§∞‡•ç‡§®‡§æ‡§ü‡§ï ‡§Æ‡§∏‡§æ‡§≤‡•á, ‡§¨‡§æ‡§Ø‡§¶‡§ó‡•Ä ‡§ö‡§ø‡§≤‡•Ä, ‡§ï‡•ã‡§°‡§æ‡§ó‡•Ç ‡§ï‡§æ‡§≤‡•Ä ‡§Æ‡§ø‡§∞‡•ç‡§ö, ‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§Æ‡§∏‡§æ‡§≤‡•á, ‡§ë‡§∞‡•ç‡§ó‡•á‡§®‡§ø‡§ï ‡§∏‡•ç‡§™‡§æ‡§á‡§∏‡•á‡§∏, ‡§¶‡•á‡§µ‡§∞‡§æ‡§ú ‡§Æ‡§æ‡§∞‡•ç‡§ï‡•á‡§ü" />
        <link rel="canonical" href="https://bharatshala.com/markets/devaraja-market/spice-garden" />
      </Helmet>

      <div className="min-h-screen bg-gray-50">
        {/* Hero Section */}
        <section className="relative bg-gradient-to-r from-green-600 to-emerald-600 text-white py-16">
          <div className="absolute inset-0 bg-black/40"></div>
          <div 
            className="absolute inset-0 bg-cover bg-center opacity-30"
            style={{ backgroundImage: `url(${gardenInfo.heroImage})` }}
          ></div>
          
          <div className="container mx-auto px-6 relative z-10">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className="max-w-4xl"
            >
              <div className="flex items-center space-x-4 mb-6">
                <span className="text-6xl">üå∂Ô∏è</span>
                <div>
                  <h1 className="text-5xl font-bold mb-2">{gardenInfo.name}</h1>
                  <p className="text-xl opacity-90">{gardenInfo.description}</p>
                </div>
              </div>
              
              <div className="grid md:grid-cols-3 gap-6 mt-8">
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">‡§∏‡•ç‡§•‡§æ‡§™‡§®‡§æ</h3>
                  <p className="text-emerald-200">{gardenInfo.established}</p>
                </div>
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ</h3>
                  <p className="text-emerald-200">{gardenInfo.speciality}</p>
                </div>
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                  <h3 className="font-semibold mb-2">‡§∏‡•ç‡§•‡§æ‡§®</h3>
                  <p className="text-emerald-200">{gardenInfo.location}</p>
                </div>
              </div>
            </motion.div>
          </div>
        </section>

        {/* Navigation Breadcrumb */}
        <div className="bg-white border-b">
          <div className="container mx-auto px-6 py-4">
            <nav className="text-sm text-gray-600">
              <Link to="/" className="hover:text-emerald-600">‡§π‡•ã‡§Æ</Link>
              <span className="mx-2">‚Ä∫</span>
              <Link to="/markets" className="hover:text-emerald-600">‡§¨‡§æ‡§ú‡§æ‡§∞</Link>
              <span className="mx-2">‚Ä∫</span>
              <Link to="/markets/devaraja-market" className="hover:text-emerald-600">‡§¶‡•á‡§µ‡§∞‡§æ‡§ú ‡§Æ‡§æ‡§∞‡•ç‡§ï‡•á‡§ü</Link>
              <span className="mx-2">‚Ä∫</span>
              <span className="text-gray-900">‡§∏‡•ç‡§™‡§æ‡§á‡§∏ ‡§ó‡§æ‡§∞‡•ç‡§°‡§®</span>
            </nav>
          </div>
        </div>

        {/* Featured Spices */}
        <section className="py-12 bg-green-50">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§ï‡§∞‡•ç‡§®‡§æ‡§ü‡§ï ‡§ï‡•á ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§Æ‡§∏‡§æ‡§≤‡•á</h2>
            <div className="grid md:grid-cols-3 gap-8">
              {featuredSpices.map((spice, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-200"
                >
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{spice.name}</h3>
                  <p className="text-gray-600 mb-3">{spice.description}</p>
                  <div className="mb-3">
                    <span className="text-2xl font-bold text-green-600">{spice.price}</span>
                  </div>
                  <div className="space-y-2 text-sm text-gray-600 mb-4">
                    <p><strong>‡§Æ‡•Ç‡§≤:</strong> {spice.origin}</p>
                    {spice.ingredients && <p><strong>‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä:</strong> {spice.ingredients}</p>}
                    {spice.grade && <p><strong>‡§ó‡•ç‡§∞‡•á‡§°:</strong> {spice.grade}</p>}
                    {spice.piperine && <p><strong>‡§™‡§æ‡§á‡§™‡§∞‡§æ‡§á‡§®:</strong> {spice.piperine}</p>}
                    {spice.scoville && <p><strong>‡§§‡•Ä‡§ñ‡§æ‡§™‡§®:</strong> {spice.scoville}</p>}
                    <p><strong>‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ:</strong> {spice.specialty}</p>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-sm text-gray-500">{spice.vendor}</span>
                    <button className="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors duration-200">
                      ‡§ï‡§æ‡§∞‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
                    </button>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Categories Section */}
        <section className="py-8 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-2xl font-bold text-gray-900 mb-6">‡§Æ‡§∏‡§æ‡§≤‡§æ ‡§∂‡•ç‡§∞‡•á‡§£‡§ø‡§Ø‡§æ‡§Ç</h2>
            <div className="flex flex-wrap gap-4">
              {spiceCategories.map((category) => (
                <button
                  key={category.id}
                  onClick={() => handleCategoryChange(category.id)}
                  className={`flex items-center space-x-2 px-4 py-2 rounded-full transition-colors duration-200 ${
                    activeCategory === category.id
                      ? 'bg-green-600 text-white'
                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                  }`}
                >
                  <span>{category.icon}</span>
                  <span>{category.name}</span>
                </button>
              ))}
            </div>
          </div>
        </section>

        {/* Spice Varieties */}
        <section className="py-16 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§ï‡§∞‡•ç‡§®‡§æ‡§ü‡§ï ‡§ï‡•Ä ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§ï‡§ø‡§∏‡•ç‡§Æ‡•á‡§Ç</h2>
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
              {spiceVarieties.map((variety, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, scale: 0.9 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-gradient-to-br from-green-50 to-emerald-50 rounded-lg p-6 text-center hover:shadow-lg transition-shadow duration-200"
                >
                  <h3 className="text-xl font-bold text-gray-900 mb-3">{variety.spice}</h3>
                  <div className="space-y-2 text-sm text-gray-600">
                    <p><strong>‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞:</strong> {variety.region}</p>
                    <p><strong>‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ:</strong> {variety.uniqueness}</p>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Products Section */}
        {loading ? (
          <div className="flex justify-center py-12">
            <LoadingSpinner size="large" text="‡§Æ‡§∏‡§æ‡§≤‡•á ‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡•á ‡§π‡•à‡§Ç..." />
          </div>
        ) : (
          <section className="py-12 bg-gray-50">
            <div className="container mx-auto px-6">
              <h2 className="text-3xl font-bold text-gray-900 mb-8">
                {activeCategory === 'all' ? '‡§∏‡§≠‡•Ä ‡§Æ‡§∏‡§æ‡§≤‡•á' : spiceCategories.find(cat => cat.id === activeCategory)?.name}
              </h2>
              
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                {filteredSpices.map((spice) => (
                  <ProductCard
                    key={spice.id}
                    product={spice}
                    onAddToCart={() => handleAddToCart(spice)}
                    onAddToWishlist={() => handleAddToWishlist(spice)}
                    showOriginBadge={true}
                    showFreshnessBadge={true}
                    showOrganicBadge={true}
                  />
                ))}
              </div>

              {filteredSpices.length === 0 && (
                <div className="text-center py-12">
                  <div className="text-6xl mb-4">üå∂Ô∏è</div>
                  <h3 className="text-xl font-semibold text-gray-900 mb-2">‡§á‡§∏ ‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§Æ‡•á‡§Ç ‡§ï‡•ã‡§à ‡§Æ‡§∏‡§æ‡§≤‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ</h3>
                  <p className="text-gray-600">‡§ï‡•É‡§™‡§Ø‡§æ ‡§¶‡•Ç‡§∏‡§∞‡•Ä ‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§ï‡§æ ‡§ö‡§Ø‡§® ‡§ï‡§∞‡•á‡§Ç</p>
                </div>
              )}
            </div>
          </section>
        )}

        {/* Local Farmers */}
        <section className="py-16 bg-gradient-to-r from-green-100 to-emerald-100">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø ‡§ï‡§ø‡§∏‡§æ‡§®</h2>
            <div className="grid md:grid-cols-3 gap-8">
              {localFarmers.map((farmer, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, scale: 0.9 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-white rounded-lg shadow-lg p-6 text-center hover:shadow-xl transition-shadow duration-200"
                >
                  <div className="text-4xl mb-4">üë®‚Äçüåæ</div>
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{farmer.name}</h3>
                  <div className="space-y-2 text-sm text-gray-600 mb-4">
                    <p><strong>‡§Ö‡§®‡•Å‡§≠‡§µ:</strong> {farmer.experience}</p>
                    <p><strong>‡§∏‡•ç‡§•‡§æ‡§®:</strong> {farmer.location}</p>
                    <p><strong>‡§´‡§∏‡§≤‡•á‡§Ç:</strong> {farmer.crops}</p>
                    <p><strong>‡§´‡§æ‡§∞‡•ç‡§Æ ‡§∏‡§æ‡§á‡§ú:</strong> {farmer.farmSize}</p>
                    <p><strong>‡§∏‡§∞‡•ç‡§ü‡§ø‡§´‡§ø‡§ï‡•á‡§∂‡§®:</strong> {farmer.certification}</p>
                  </div>
                  <button className="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors duration-200">
                    ‡§™‡•ç‡§∞‡•ã‡§°‡§ï‡•ç‡§ü‡•ç‡§∏ ‡§¶‡•á‡§ñ‡•á‡§Ç
                  </button>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Health Benefits */}
        <section className="py-16 bg-white">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">‡§Æ‡§∏‡§æ‡§≤‡•ã‡§Ç ‡§ï‡•á ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§≤‡§æ‡§≠</h2>
            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
              {healthBenefits.map((item, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="text-center"
                >
                  <div className="text-4xl mb-4">üåø</div>
                  <h3 className="text-xl font-semibold mb-3">{item.spice}</h3>
                  <div className="space-y-1">
                    {item.benefits.map((benefit, benefitIndex) => (
                      <div key={benefitIndex} className="bg-green-50 rounded-lg p-2 text-sm text-gray-700">
                        ‚Ä¢ {benefit}
                      </div>
                    ))}
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Farm to Table Story */}
        <section className="py-16 bg-gradient-to-r from-green-600 to-emerald-600 text-white">
          <div className="container mx-auto px-6 text-center">
            <h2 className="text-3xl font-bold mb-8">‡§´‡§æ‡§∞‡•ç‡§Æ ‡§∏‡•á ‡§ü‡•á‡§¨‡§≤ ‡§§‡§ï</h2>
            <div className="max-w-4xl mx-auto">
              <p className="text-xl leading-relaxed mb-8">
                60 ‡§∏‡§æ‡§≤ ‡§∏‡•á ‡§¶‡•á‡§µ‡§∞‡§æ‡§ú ‡§Æ‡§æ‡§∞‡•ç‡§ï‡•á‡§ü ‡§∏‡•ç‡§™‡§æ‡§á‡§∏ ‡§ó‡§æ‡§∞‡•ç‡§°‡§® ‡§ï‡§∞‡•ç‡§®‡§æ‡§ü‡§ï ‡§ï‡•á ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡•Ä‡§ß‡•á ‡§â‡§™‡§≠‡•ã‡§ï‡•ç‡§§‡§æ‡§ì‡§Ç ‡§∏‡•á ‡§ú‡•ã‡§°‡§º ‡§∞‡§π‡§æ ‡§π‡•à‡•§ 
                ‡§Ø‡§π‡§æ‡§Å ‡§Ü‡§™‡§ï‡•ã ‡§Æ‡§ø‡§≤‡§§‡•á ‡§π‡•à‡§Ç ‡§™‡•Ç‡§∞‡•Ä ‡§§‡§∞‡§π ‡§∏‡•á ‡§™‡•ç‡§∞‡§æ‡§ï‡•É‡§§‡§ø‡§ï ‡§î‡§∞ ‡§§‡§æ‡§ú‡•á ‡§Æ‡§∏‡§æ‡§≤‡•á, ‡§¨‡§ø‡§®‡§æ ‡§ï‡§ø‡§∏‡•Ä ‡§Æ‡§ø‡§≤‡§æ‡§µ‡§ü ‡§ï‡•á‡•§ 
                ‡§π‡§∞ ‡§Æ‡§∏‡§æ‡§≤‡•á ‡§Æ‡•á‡§Ç ‡§õ‡•Å‡§™‡•Ä ‡§π‡•à ‡§ï‡§∞‡•ç‡§®‡§æ‡§ü‡§ï ‡§ï‡•Ä ‡§ß‡§∞‡§§‡•Ä ‡§ï‡•Ä ‡§∏‡•Å‡§ó‡§Ç‡§ß ‡§î‡§∞ ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡§æ ‡§™‡•ç‡§∞‡•á‡§Æ‡•§
              </p>
              <div className="grid md:grid-cols-3 gap-8 mt-12">
                <div>
                  <div className="text-4xl mb-4">üìç</div>
                  <h3 className="text-xl font-semibold mb-2">‡§∏‡•ç‡§•‡§æ‡§®</h3>
                  <p>‡§¶‡•á‡§µ‡§∞‡§æ‡§ú ‡§Æ‡§æ‡§∞‡•ç‡§ï‡•á‡§ü, ‡§Æ‡•à‡§∏‡•Ç‡§∞, ‡§ï‡§∞‡•ç‡§®‡§æ‡§ü‡§ï</p>
                </div>
                <div>
                  <div className="text-4xl mb-4">üïí</div>
                  <h3 className="text-xl font-semibold mb-2">‡§∏‡§Æ‡§Ø</h3>
                  <p>‡§∏‡•Å‡§¨‡§π 7:00 - ‡§∂‡§æ‡§Æ 8:00 (‡§∞‡•ã‡§ú‡§º‡§æ‡§®‡§æ)</p>
                </div>
                <div>
                  <div className="text-4xl mb-4">üå±</div>
                  <h3 className="text-xl font-semibold mb-2">‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ</h3>
                  <p>‡§´‡§æ‡§∞‡•ç‡§Æ ‡§´‡•ç‡§∞‡•á‡§∂ ‡§ë‡§∞‡•ç‡§ó‡•á‡§®‡§ø‡§ï ‡§∏‡•ç‡§™‡§æ‡§á‡§∏‡•á‡§∏</p>
                </div>
              </div>
            </div>
          </div>
        </section>
      </div>
    </>
  );
};

export default SpiceGarden;