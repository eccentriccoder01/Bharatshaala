import React, { useState } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';

const UserSidebar = ({ user }) => {
    const navigate = useNavigate();
    const location = useLocation();
    const [isCollapsed, setIsCollapsed] = useState(false);

    const menuItems = [
        { id: 'dashboard', name: '‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°', icon: 'üè†', href: '/user/dashboard' },
        { id: 'orders', name: '‡§Æ‡•á‡§∞‡•á ‡§ë‡§∞‡•ç‡§°‡§∞', icon: 'üì¶', href: '/user/orders', badge: '3' },
        { id: 'wishlist', name: '‡§™‡§∏‡§Ç‡§¶‡•Ä‡§¶‡§æ', icon: '‚ù§Ô∏è', href: '/user/wishlist', badge: '12' },
        { id: 'addresses', name: '‡§™‡§§‡•á', icon: 'üìç', href: '/user/addresses' },
        { id: 'payments', name: '‡§™‡•á‡§Æ‡•á‡§Ç‡§ü ‡§µ‡§ø‡§ß‡§ø', icon: 'üí≥', href: '/user/payments' },
        { id: 'rewards', name: '‡§∞‡§ø‡§µ‡•â‡§∞‡•ç‡§° ‡§™‡•â‡§á‡§Ç‡§ü‡•ç‡§∏', icon: 'üéÅ', href: '/user/rewards' },
        { id: 'notifications', name: '‡§Ö‡§ß‡§ø‡§∏‡•Ç‡§ö‡§®‡§æ‡§è‡§Ç', icon: 'üîî', href: '/user/notifications' },
        { id: 'settings', name: '‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏', icon: '‚öôÔ∏è', href: '/user/settings' },
        { id: 'support', name: '‡§∏‡§π‡§æ‡§Ø‡§§‡§æ', icon: 'üí¨', href: '/user/support' }
    ];

    const handleLogout = () => {
        localStorage.removeItem('authToken');
        navigate('/login');
    };

    return (
        <div className={`bg-white/90 backdrop-blur-sm rounded-2xl shadow-lg border border-emerald-200 transition-all duration-300 ${
            isCollapsed ? 'w-20' : 'w-80'
        }`}>
            
            {/* Header */}
            <div className='p-6 border-b border-emerald-200'>
                <div className='flex items-center justify-between'>
                    {!isCollapsed && (
                        <div className='flex items-center space-x-3'>
                            <div className='w-12 h-12 bg-gradient-to-br from-emerald-400 to-green-500 rounded-full flex items-center justify-center text-white font-bold text-lg'>
                                {user?.name?.charAt(0) || 'U'}
                            </div>
                            <div>
                                <h3 className='font-bold text-emerald-800'>{user?.name || '‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ'}</h3>
                                <p className='text-emerald-600 text-sm'>{user?.email}</p>
                            </div>
                        </div>
                    )}
                    <button
                        onClick={() => setIsCollapsed(!isCollapsed)}
                        className='p-2 text-emerald-600 hover:bg-emerald-50 rounded-lg transition-colors duration-200'
                    >
                        {isCollapsed ? '‚Üí' : '‚Üê'}
                    </button>
                </div>
            </div>

            {/* Navigation Menu */}
            <nav className='p-4'>
                <ul className='space-y-2'>
                    {menuItems.map((item) => {
                        const isActive = location.pathname === item.href;
                        return (
                            <li key={item.id}>
                                <a
                                    href={item.href}
                                    className={`flex items-center space-x-3 p-3 rounded-xl transition-all duration-200 group ${
                                        isActive
                                            ? 'bg-gradient-to-r from-emerald-500 to-green-500 text-white shadow-md'
                                            : 'text-emerald-700 hover:bg-emerald-50'
                                    }`}
                                >
                                    <span className='text-xl'>{item.icon}</span>
                                    {!isCollapsed && (
                                        <>
                                            <span className='font-medium flex-1'>{item.name}</span>
                                            {item.badge && (
                                                <span className={`px-2 py-1 rounded-full text-xs font-bold ${
                                                    isActive 
                                                        ? 'bg-white/20 text-white' 
                                                        : 'bg-emerald-500 text-white'
                                                }`}>
                                                    {item.badge}
                                                </span>
                                            )}
                                        </>
                                    )}
                                </a>
                            </li>
                        );
                    })}
                </ul>
            </nav>

            {/* User Actions */}
            {!isCollapsed && (
                <div className='p-4 border-t border-emerald-200'>
                    <div className='space-y-3'>
                        {/* Quick Stats */}
                        <div className='bg-emerald-50 rounded-xl p-4 border border-emerald-200'>
                            <h4 className='font-semibold text-emerald-800 mb-3 text-sm'>‡§Ü‡§™‡§ï‡•Ä ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø</h4>
                            <div className='grid grid-cols-2 gap-3 text-center'>
                                <div>
                                    <div className='text-lg font-bold text-emerald-600'>8</div>
                                    <div className='text-xs text-emerald-600'>‡§ï‡•Å‡§≤ ‡§ë‡§∞‡•ç‡§°‡§∞</div>
                                </div>
                                <div>
                                    <div className='text-lg font-bold text-emerald-600'>‚Çπ15,420</div>
                                    <div className='text-xs text-emerald-600'>‡§ï‡•Å‡§≤ ‡§ñ‡§∞‡•ç‡§ö</div>
                                </div>
                            </div>
                        </div>

                        {/* Logout Button */}
                        <button
                            onClick={handleLogout}
                            className='w-full flex items-center justify-center space-x-2 p-3 text-red-600 hover:bg-red-50 rounded-xl transition-colors duration-200'
                        >
                            <span>üö™</span>
                            <span className='font-medium'>‡§≤‡•â‡§ó ‡§Ü‡§â‡§ü</span>
                        </button>
                    </div>
                </div>
            )}
        </div>
    );
};

export default UserSidebar;